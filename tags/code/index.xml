<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on Luke&#39;s Blog</title>
    <link>https://Luke2336.github.io/tags/code/</link>
    <description>Recent content in Code on Luke&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Dec 2020 11:29:37 +0800</lastBuildDate><atom:link href="https://Luke2336.github.io/tags/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2020/12/14 日記</title>
      <link>https://Luke2336.github.io/p/20201214/</link>
      <pubDate>Mon, 14 Dec 2020 11:29:37 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/20201214/</guid>
      <description>早上搭車回新竹，雨很大，上車後到台北就沒雨了。從馬偕下車，然後搭小紅巴回學校。之後剪了香蜂草的枯枝病葉，還除了蟲，然後洗了衣服，吃了昨晚買的巧克力拿破崙配伯爵茶。
pJ. Inverse Factorial  答案的範圍不超過 1e6，所以可以直接 mod 一個夠大的質數  1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3#define mod 1000000007 4typedef long long ll; 5int main () { 6 ios_base::sync_with_stdio(0); cin.tie(0); 7 string s; cin &amp;gt;&amp;gt; s; 8 ll sum = 0; 9 for (int i = 0; s[i]; i++) 10 sum = (sum * 10 + s[i] - &amp;#39;0&amp;#39;) % mod; 11 for (ll i = 1, frac = 1; ; i++) { 12 frac = (frac * i) % mod; 13 if (frac == sum) { 14 cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;; break; 15 } 16 } 17 return 0; 18}  CSES - 1202 - Investigation  最短路徑水題 Dijkstra  1#include&amp;lt;bits/stdc++.</description>
    </item>
    
    <item>
      <title>2020/12/09 日記</title>
      <link>https://Luke2336.github.io/p/20201209/</link>
      <pubDate>Wed, 09 Dec 2020 12:34:03 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/20201209/</guid>
      <description>早上心情很不好，所以上完德文後，又把 OS 睡掉了。中午買了個牛腩丼飯，然後去上了羽球課。和卡車吃了蛋捲冰淇淋，剛好店員不小心裝太大隻，所以吃得很滿足。洗完澡後就去練習，有點遲到。點了牛肉燴飯，但料很少，讓我很失望。
羽球課 今天是教後場步伐和揮拍，然後讓我們練習兩週後要考的米字步。首先是側身架拍，然後右腳蹲，然後單腳跳腰轉隱拍，之後在揮拍，左腳往前恢復準備姿勢。羽球鞋穿的還不太習慣，畢竟跟慢跑鞋比很有重量，希望能早點習慣。
PCCA  Kattis 題單  今天是拆成 30 分鐘為單位，交換隊友練習，今天有觀察到的有 LandyLu、CTFang 那對，還有 LinLee 找的吳柏橙，只有 CTFang 我比較喜歡。最近對隊友們的感情也有點冷淡，慢慢觀察到不少他們的缺點，而 CTFang 卻比較像 Ud 一樣沈穩，雖然他的隊友卻沒什麼表現，但我還是傾向於換隊友。
D. Kattis - ivana  賽局 DP 把環狀的東西，直接複製兩份去建表。 Complexity: $$O(n^2)$$  1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3#define INF 10000 4int main() { 5 ios_base::sync_with_stdio(0); cin.tie(0); 6 int n; cin &amp;gt;&amp;gt; n; 7 int a[205], dp[205][205]; 8 for (int i = 0; i &amp;lt; n; i++) { 9 cin &amp;gt;&amp;gt; a[i]; a[n + i] = a[i]; 10 } 11 for (int i = 0; i &amp;lt; 2 * n; i++) 12 dp[i][i] = a[i] % 2; 13 for (int l = 1; l &amp;lt; n; l++) 14 for (int i = 0, j = l; j &amp;lt; 2 * n; i++, j++) { 15 dp[i][j] = (l % 2) ?</description>
    </item>
    
    <item>
      <title>有向圖找負環 (Negative-Cycle)</title>
      <link>https://Luke2336.github.io/p/negative_cycle/</link>
      <pubDate>Sat, 05 Dec 2020 22:36:18 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/negative_cycle/</guid>
      <description>CSES - 1197 - Cycle Finding  卡車說可以從一個假點開始做 SSSP，也就是將所有點的距離都先設成 0。 我的寫法複雜度看起來不好，感覺假解了，但想不到該怎麼改，可能會 TLE。 想了一個確定複雜度是 O(VE) 的解，將整張圖做 SCC，形成一個 DAG，從每個 in-degree 為 0 的 SCC 選一個點做 DFS。  1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long ll; 4typedef pair&amp;lt;int, ll&amp;gt; pii; 5#define pb push_back 6vector&amp;lt;int&amp;gt; ans; 7vector&amp;lt;vector&amp;lt;pii&amp;gt;&amp;gt; G; 8vector&amp;lt;bool&amp;gt; visit; 9vector&amp;lt;bool&amp;gt; use; 10vector&amp;lt;ll&amp;gt; dis; 11int dfs(int v) { 12 use[v] = visit[v] = true, ans.pb(v); 13 for (pii e : G[v]) { 14 int u = e.</description>
    </item>
    
    <item>
      <title>CF GYM 100274</title>
      <link>https://Luke2336.github.io/p/cf_gym_100274/</link>
      <pubDate>Thu, 03 Dec 2020 23:56:03 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/cf_gym_100274/</guid>
      <description>CF-GYM100274 pA  問題：2 &amp;lt;= n &amp;lt;= 1e18，2 &amp;lt;= k &amp;lt;= 1e12，求 n! 是 k 的幾次方。 作法：將 k 做質因數分解，然後各自算出次方數後，再取最小值。 時間：$$O(\log n \sqrt k)$$  1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long ll; 4typedef pair&amp;lt;ll, int&amp;gt; pli; 5vector&amp;lt;pli&amp;gt; prime_factor (ll k) { 6 vector&amp;lt;pli&amp;gt; ret; 7 for (ll i = 2; i * i &amp;lt;= k; i++) { 8 if (k % i) continue; 9 pli p = pli(i, 0); 10 while (k % i == 0) k /= i, p.</description>
    </item>
    
  </channel>
</rss>
