<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSES on Luke&#39;s Blog</title>
    <link>https://Luke2336.github.io/tags/cses/</link>
    <description>Recent content in CSES on Luke&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Jan 2021 14:39:43 +0800</lastBuildDate><atom:link href="https://Luke2336.github.io/tags/cses/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2021/01/08 日記</title>
      <link>https://Luke2336.github.io/p/20210108/</link>
      <pubDate>Fri, 08 Jan 2021 14:39:43 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/20210108/</guid>
      <description>早上難得的吃了早餐，去提款機提錢，順便在旁邊買三明治吃，泡了柚子茶喝。
用 Virtualbox 的設定，多掛載了 1GB 的記憶體給 Ubuntu VM，於是多出了一個 /dev/sdb 可以切。然後早上就順利把 HW3 做完了。
中午吃了麥當勞，點了玉米湯，在宿舍泡伯爵茶一直冷掉。
房間的濕度約為 65%，溫度則為 15 度左右。但外面似乎已經到 8 度了，超級冷的。穿了羽絨衣跟襪子，但還是手腳冰冷。
開始複習電路學期末，下午讀了第 15 和 16 章，有關 Laplace 的部分，也自己導了 Initial/Final-Value Theorem。
看到 Slack 有人說 CSES 增加題目了，於是想起自己還剩一堆沒刷，就開了一題恢復手感。
借了 HW2 的 Code 給雙曲線參考，順便讓他幫我跑一下，不然我一直無法解決找不到 /dev/os 的問題，沒想到晚上他告訴我，在他那邊跑是對的，真是太好了！
晚上吃了麻油雞麵，暖暖身體。飯後看了電影「爺爺與貓」。
CSES - 2189 - Point Location Test 基礎的幾何題。
1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long ll; 4typedef pair&amp;lt;ll, ll&amp;gt; point; 5#define x first 6#define y second 7ll check(point p[]) { 8 ll dx = p[1].</description>
    </item>
    
    <item>
      <title>2020/12/14 日記</title>
      <link>https://Luke2336.github.io/p/20201214/</link>
      <pubDate>Mon, 14 Dec 2020 11:29:37 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/20201214/</guid>
      <description>早上搭車回新竹，雨很大，上車後到台北就沒雨了。從馬偕下車，然後搭小紅巴回學校。之後剪了香蜂草的枯枝病葉，還除了蟲，然後洗了衣服，吃了昨晚買的巧克力拿破崙配伯爵茶。
pJ. Inverse Factorial  給定一個長度不超過 1e6 的字串，代表 n!，求 n 是多少？ 答案的範圍不超過 1e6，所以可以直接 mod 一個夠大的質數  1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3#define mod 1000000007 4typedef long long ll; 5int main () { 6 ios_base::sync_with_stdio(0); cin.tie(0); 7 string s; cin &amp;gt;&amp;gt; s; 8 ll sum = 0; 9 for (int i = 0; s[i]; i++) 10 sum = (sum * 10 + s[i] - &amp;#39;0&amp;#39;) % mod; 11 for (ll i = 1, frac = 1; ; i++) { 12 frac = (frac * i) % mod; 13 if (frac == sum) { 14 cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;; break; 15 } 16 } 17 return 0; 18}  CSES - 1202 - Investigation  最短路徑水題 Dijkstra  1#include&amp;lt;bits/stdc++.</description>
    </item>
    
    <item>
      <title>有向圖找負環 (Negative-Cycle)</title>
      <link>https://Luke2336.github.io/p/negative_cycle/</link>
      <pubDate>Sat, 05 Dec 2020 22:36:18 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/negative_cycle/</guid>
      <description>CSES - 1197 - Cycle Finding  卡車說可以從一個假點開始做 SSSP，也就是將所有點的距離都先設成 0。 我的寫法複雜度看起來不好，感覺假解了，但想不到該怎麼改，可能會 TLE。 想了一個確定複雜度是 O(VE) 的解，將整張圖做 SCC，形成一個 DAG，從每個 in-degree 為 0 的 SCC 選一個點做 DFS。  1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long ll; 4typedef pair&amp;lt;int, ll&amp;gt; pii; 5#define pb push_back 6vector&amp;lt;int&amp;gt; ans; 7vector&amp;lt;vector&amp;lt;pii&amp;gt;&amp;gt; G; 8vector&amp;lt;bool&amp;gt; visit; 9vector&amp;lt;bool&amp;gt; use; 10vector&amp;lt;ll&amp;gt; dis; 11int dfs(int v) { 12 use[v] = visit[v] = true, ans.pb(v); 13 for (pii e : G[v]) { 14 int u = e.</description>
    </item>
    
  </channel>
</rss>
