<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSES on Luke&#39;s Blog</title>
    <link>https://luke2336.github.io/tags/cses/</link>
    <description>Recent content in CSES on Luke&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Jun 2022 09:29:58 +0800</lastBuildDate><atom:link href="https://luke2336.github.io/tags/cses/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CSES</title>
      <link>https://luke2336.github.io/p/cses/</link>
      <pubDate>Thu, 16 Jun 2022 09:29:58 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/cses/</guid>
      <description>1202 - Investigation  最短路徑水題 Dijkstra  1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3const int mod = 1000000007; 4typedef long long ll; 5typedef pair&amp;lt;ll, int&amp;gt; pii; 6#define pb push_back 7int main () { 8 ios_base::sync_with_stdio(0); cin.tie(0); 9 int n, m; cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m; 10 vector&amp;lt;vector&amp;lt;pii&amp;gt;&amp;gt; G(n + 1); 11 for (int i = 0; i &amp;lt; m; i++) { 12 int a, b, c; cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b &amp;gt;&amp;gt; c; 13 G[a].</description>
    </item>
    
    <item>
      <title>有向圖找負環 (Negative-Cycle)</title>
      <link>https://luke2336.github.io/p/negative_cycle/</link>
      <pubDate>Sat, 05 Dec 2020 22:36:18 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/negative_cycle/</guid>
      <description>CSES - 1197 - Cycle Finding  卡車說可以從一個假點開始做 SSSP，也就是將所有點的距離都先設成 0。 我的寫法複雜度看起來不好，感覺假解了，但想不到該怎麼改，可能會 TLE。 想了一個確定複雜度是 O(VE) 的解，將整張圖做 SCC，形成一個 DAG，從每個 in-degree 為 0 的 SCC 選一個點做 DFS。  1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long ll; 4typedef pair&amp;lt;int, ll&amp;gt; pii; 5#define pb push_back 6vector&amp;lt;int&amp;gt; ans; 7vector&amp;lt;vector&amp;lt;pii&amp;gt;&amp;gt; G; 8vector&amp;lt;bool&amp;gt; visit; 9vector&amp;lt;bool&amp;gt; use; 10vector&amp;lt;ll&amp;gt; dis; 11int dfs(int v) { 12 use[v] = visit[v] = true, ans.pb(v); 13 for (pii e : G[v]) { 14 int u = e.</description>
    </item>
    
  </channel>
</rss>
