<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Luke&#39;s Blog</title>
    <link>https://Luke2336.github.io/tags/python/</link>
    <description>Recent content in Python on Luke&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Oct 2021 14:00:52 +0800</lastBuildDate><atom:link href="https://Luke2336.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2021/10/22 日記</title>
      <link>https://Luke2336.github.io/p/20211022/</link>
      <pubDate>Fri, 22 Oct 2021 14:00:52 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/20211022/</guid>
      <description>早上將賽局理論的影片看完。 之後開始研究 NSD 的 project 要怎麼寫。 晚上複習了英檢的片語。  NSD Proposal  目前是計畫將 simple undirected graph 畫到平面上。 預計用 c++ 寫 force-directed 的 layout，把點的平面座標算出來。 用 Python 將點和邊畫出來。  Python  今天嘗試用 matplotlib 將 python 的部分做個小實驗。 目前卡在座標只能吃 int，不能吃浮點數，這使得我要確保點夠分散，幸好我設定點的數量最多到 1000。  # input.txt 0 3 0 1 1 2 1 3 # output.txt 0 0 10 10 50 15 50 5 1from matplotlib import collections 2import matplotlib.pyplot as plt 3 4coordinate_file = open(&amp;#39;output.txt&amp;#39;, &amp;#39;r&amp;#39;) 5lines = coordinate_file.</description>
    </item>
    
    <item>
      <title>2021/08/07 日記</title>
      <link>https://Luke2336.github.io/p/20210807/</link>
      <pubDate>Sat, 07 Aug 2021 10:23:07 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/20210807/</guid>
      <description>Chrome 的恐龍小遊戲有東奧版。 下午和隊友練習，覺得自己的狀態不甚好。 晚上用 Uber Eat 叫了清夜的鹹酥雞吃。  隊練 2016, IX Samara Regional Intercollegiate Programming Contest Python  讀從圖書館借的決心打底！Python 深度學習基礎養成。  Plot 1import numpy as np 2import matplotlib.pyplot as plt 3 4x = np.linspace(0, 2 * np.pi) 5y_sin= np.sin(x) 6y_cos= np.cos(x) 7 8plt.xlabel(&amp;#34;x value&amp;#34;) 9plt.ylabel(&amp;#34;y value&amp;#34;) 10plt.title(&amp;#34;sin/cos&amp;#34;) 11plt.plot(x, y_sin, label=&amp;#34;sin&amp;#34;) 12plt.plot(x, y_cos, label=&amp;#34;cos&amp;#34;, linestyle=&amp;#34;dashed&amp;#34;) 13plt.legend() 14plt.show() 1import numpy as np 2import matplotlib.pyplot as plt 3 4x1 = np.random.rand(100) - 1.</description>
    </item>
    
    <item>
      <title>2021/07/09 日記</title>
      <link>https://Luke2336.github.io/p/20210709/</link>
      <pubDate>Fri, 09 Jul 2021 17:16:06 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/20210709/</guid>
      <description>花了些時間複習 python。  Code TIOJ 1004. 猶太人敢死隊問題 1n = int(input()) 2L = [True] * n 3i = 0 4last = 0 5while True in L: 6 while not L[i]: 7 i = (i + 1) % n 8 i = (i + 1) % n 9 while not L[i]: 10 i = (i + 1) % n 11 L[i] = False 12 last = i 13 i = (i + 1) % n 14print(last + 1) TIOJ 1005.</description>
    </item>
    
    <item>
      <title>2021/01/24 日記</title>
      <link>https://Luke2336.github.io/p/20210124/</link>
      <pubDate>Sun, 24 Jan 2021 14:34:01 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/20210124/</guid>
      <description>雙曲線說他最近很忙，沒空用寒訓的東西，也沒空對練，讓我覺得壓力有些大。
看到 Google Code Jam to I/O for Women 2021 開放註冊了，但是辦在 2/13 23:00，應該沒得打了 QAQ
晚餐原本想吃炸雞腿，但今天沒賣，於是只吃了豬肉丼。之後很餓便把夏天冰的百香果拿出來吃，然後又下去全家買了雞肉義大利麵。
下午在寫寒假作業，已經寫到 17 題了，但離 100 題好遙遠。
 Kattis - Almost Union-Find Kattis - Thank God it’s Friday Kattis - Natrij Kattis - Semafori Kattis - Triple Texting Kattis - Functional Fun Kattis - Timebomb  Kattis - Almost Union-Find 1 ≤ n, m ≤ 1e5，有三種操作：
 1 p q 代表將 p 和 q 所屬的集合合併。 2 p q 代表將 p 移到 q 所屬的集合。 3 p 為查詢 p 所屬集合大小及元素和。  操作 2 較難處理，方法為創出新的節點，並將元素指向新的節點。</description>
    </item>
    
    <item>
      <title>2020/12/02 日記</title>
      <link>https://Luke2336.github.io/p/20201202/</link>
      <pubDate>Wed, 02 Dec 2020 10:58:23 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/20201202/</guid>
      <description>OS HW1 (Python) 中午研究了一下 OS 的作業一，因為對 Python 還不熟，所以先研究了一些模組和函式的用法。之後再慢慢研究 Multithread、Multiprocessing 和 Coroutine。因為期中考表現的很糟，希望能在作業拚一下，把總成績拉到 A。
Requests: Website Title  $ pip3 install requests $ pip3 install beautifulsoup4  1import requests 2from bs4 import BeautifulSoup 3url = input() 4r = requests.get(url) 5while r.status_code != requests.codes.ok : # 200 6	r = requests.get(url) 7soup = BeautifulSoup(r.text, &amp;#39;html.parser&amp;#39;) 8print(soup.find(&amp;#39;title&amp;#39;).text) SHA 記得要先 encode(&#39;utf-8&#39;)
1import hashlib # 內建的 2 3def SHA256(s): 4 sha = hashlib.sha256() 5 sha.update(s.encode(&amp;#39;utf-8&amp;#39;)) 6 return sha.</description>
    </item>
    
  </channel>
</rss>
