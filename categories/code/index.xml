<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on Luke&#39;s Blog</title>
    <link>https://Luke2336.github.io/categories/code/</link>
    <description>Recent content in Code on Luke&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Jan 2022 20:51:14 +0800</lastBuildDate><atom:link href="https://Luke2336.github.io/categories/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AtCoder Beginning Contest 237</title>
      <link>https://Luke2336.github.io/p/atcoder_abc237/</link>
      <pubDate>Sun, 30 Jan 2022 20:51:14 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/atcoder_abc237/</guid>
      <description>https://atcoder.jp/contests/abc237/tasks。 很早就放棄掙扎的一場。 很久沒打 ABC 了，難度似乎提升很多。  A. Not Overflow 1#pragma GCC optimization (&amp;#34;O3&amp;#34;) 2#include&amp;lt;bits/stdc++.h&amp;gt;3using namespace std; 4typedef long long ll; 5typedef pair&amp;lt;int, int&amp;gt; pii; 6#define pb push_back 7 8int main() { 9 ios::sync_with_stdio(0), cin.tie(0); 10 ll N; 11 cin &amp;gt;&amp;gt; N; 12 ll min = -(1ll &amp;lt;&amp;lt; 31); 13 ll max = (1ll &amp;lt;&amp;lt; 31) - 1; 14 if (min &amp;lt;= N &amp;amp;&amp;amp; N &amp;lt;= max) { 15 cout &amp;lt;&amp;lt; &amp;#34;Yes\n&amp;#34;; 16 } else { 17 cout &amp;lt;&amp;lt; &amp;#34;No\n&amp;#34;; 18 } 19 return 0; 20}  B.</description>
    </item>
    
    <item>
      <title>AtCode Library Practice Contest</title>
      <link>https://Luke2336.github.io/p/atcoder-practice2/</link>
      <pubDate>Mon, 20 Sep 2021 10:03:41 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/atcoder-practice2/</guid>
      <description>A - Disjoint Set Union 1#pragma GCC optimization (&amp;#34;O3&amp;#34;) 2#include&amp;lt;bits/stdc++.h&amp;gt;3using namespace std; 4typedef long long ll; 5typedef pair&amp;lt;int, int&amp;gt; pii; 6#define pb push_back 7 8class UnionTree { 9private: 10 vector&amp;lt;int&amp;gt; par, sz; 11public: 12 UnionTree(int n) { 13 par.resize(n); 14 for (int i = 0; i &amp;lt; n; i++) { 15 par[i] = i; 16 } 17 sz.resize(n, 1); 18 } 19 int findPar(int x) { 20 return par[x] = (x == par[x] ?</description>
    </item>
    
    <item>
      <title>AtCoder Beginning Contest 216</title>
      <link>https://Luke2336.github.io/p/atcoder_abc216/</link>
      <pubDate>Sun, 29 Aug 2021 21:51:11 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/atcoder_abc216/</guid>
      <description>AtCoder Beginning Contest 192 A. Signed Difficulty 1#pragma GCC optimization(&amp;#34;O3&amp;#34;) 2#include &amp;lt;bits/stdc++.h&amp;gt;3using namespace std; 4typedef long long ll; 5typedef pair&amp;lt;int, int&amp;gt; pii; 6#define pb push_back 7int main() 8{ 9 ios::sync_with_stdio(0), cin.tie(0); 10 int X, Y; 11 char c; 12 cin &amp;gt;&amp;gt; X &amp;gt;&amp;gt; c &amp;gt;&amp;gt; Y; 13 if (Y &amp;lt;= 2) 14 cout &amp;lt;&amp;lt; X &amp;lt;&amp;lt; &amp;#34;-\n&amp;#34;; 15 else if (Y &amp;lt;= 6) 16 cout &amp;lt;&amp;lt; X &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;; 17 else 18 cout &amp;lt;&amp;lt; X &amp;lt;&amp;lt; &amp;#34;+\n&amp;#34;; 19 return 0; 20}  B.</description>
    </item>
    
    <item>
      <title>AtCoder Beginning Contest 192</title>
      <link>https://Luke2336.github.io/p/atcoder_abc192/</link>
      <pubDate>Sat, 20 Feb 2021 21:11:32 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/atcoder_abc192/</guid>
      <description>AtCoder Beginning Contest 192 pD 被卡了很久，pF 沒靈感，只好掉分。
A. Star $$O(1)$$
1#pragma GCC optimization (&amp;#34;O3&amp;#34;) 2#include&amp;lt;bits/stdc++.h&amp;gt;3using namespace std; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 int x; cin &amp;gt;&amp;gt; x; 7 cout &amp;lt;&amp;lt; 100 - x % 100 &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;; 8 return 0; 9}  B. uNrEaDaBlE sTrInG $$O(|S|)$$
1#pragma GCC optimization (&amp;#34;O3&amp;#34;) 2#include&amp;lt;bits/stdc++.h&amp;gt;3using namespace std; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 string s; 7 cin &amp;gt;&amp;gt; s; 8 int len = s.</description>
    </item>
    
    <item>
      <title>Hello, Kotlin!</title>
      <link>https://Luke2336.github.io/p/hello_kotlin/</link>
      <pubDate>Sun, 14 Feb 2021 17:14:36 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/hello_kotlin/</guid>
      <description>Learn Kotlin by Example (kotlinlang.org)  Output println() 1fun main() { 2 println(&amp;#34;Hello, World!&amp;#34;) 3} Function fun 1fun sum(x: Int, y: Int): Int { 2 return x + y 3} 4 5// Single-Expression 6fun mul(x: Int, y: Int) = x * y 7 8// Default Arguments 9fun printMSG (msg1: String = &amp;#34;Hello&amp;#34;, msg2: String) { 10 println(&amp;#34;$msg1, $msg2!&amp;#34;) 11} 12 13fun main() { 14 println(sum(1, 2)) 15 println(mul(2, 5)) 16 printMSG(&amp;#34;Hi&amp;#34;, &amp;#34;Jack&amp;#34;) 17 printMSG(msg2 = &amp;#34;Kelly&amp;#34;) 18} vararg 1fun sum(vararg a: Int): Int { 2 var ret = 0 3 for (x in a) ret = ret + x 4 return ret 5} 6 7fun main() { 8 println(sum(1, 0, -1, 2)) 9} Variable val var  val 一定要初始化  1fun main() { 2 val v = 1 // immutalbe 3 var x: Int // mutable 4 x = 1 5 println(x + v) 6} null  用 ?</description>
    </item>
    
    <item>
      <title>TIOJ 1214 樹同構</title>
      <link>https://Luke2336.github.io/p/tioj1214/</link>
      <pubDate>Mon, 08 Feb 2021 20:36:05 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/tioj1214/</guid>
      <description>ICPC 2020 Taipei 出了一題水母圖的同構，於是今天找了這題樹同構練習，採用括號字串的方法，而不是 Hashing。
 水母圖  對於環上每個點當 root 去生出樹字串。 串接起來後，用環狀字串的演算法去比較。    TIOJ 1214 - 樹論 之 樹同構測試 $$O(|G|^2 \log \Delta(G)) = O(n^2 \log n)$$
 n ≤ 100。給定兩棵樹的邊，問他們是否同構 &amp;ldquo;isomorphic&amp;rdquo; 先 DFS 找出所有的樹重心（最多 2 個）。樹重心的定義為，最大子樹大小最小的點。 從重心開始做 DFS，將每個點用 () 表示，中間夾括入他所有子樹字串，將他們排序後加入。每次排序為度數個，所以總共需要排序 deg - 1 個，所有點加起來為 n 個，再乘上字串比較的複雜度 O(n)。 最後再將重心們的字串排序後串接，比較兩棵樹是否相同。  1#pragma GCC optimization (&amp;#34;O3&amp;#34;) 2#include&amp;lt;bits/stdc++.h&amp;gt;3using namespace std; 4#define pb push_back 5int n; 6int dfs(int u, int p, int &amp;amp;mi, vector&amp;lt;vector&amp;lt;int&amp;gt; &amp;gt; &amp;amp;G, vector&amp;lt;int&amp;gt; &amp;amp;ret) { 7 int cnt = 0, mx = 0; 8 for (int uu : G[u]) { 9 if (uu == p) continue; 10 int r = dfs(uu, u, mi, G, ret); 11 mx = max(mx, r), cnt += r; 12 } 13 mx = max(mx, n - cnt - 1); 14 if (mx &amp;lt;= mi) { 15 if (mx &amp;lt; mi) ret.</description>
    </item>
    
    <item>
      <title>MacOS Command Line Note</title>
      <link>https://Luke2336.github.io/p/mac_cmd/</link>
      <pubDate>Sun, 07 Feb 2021 14:08:22 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/mac_cmd/</guid>
      <description>常用指令    command 用途     clear clear terminal window   ls list directory content   ls -a 將隱藏檔案也列出   cd change directory to home   cd .. change directory to parent   cd - change directory to last working directory   cd / change directory to root   pwd print working directory   rm file_name remove file   mkdir dir_name make directory   rmdir dir_name remove directory   rm -R dir_name remove the directory and all files in the directory   cp -R A B 將 A 資料夾的東西全部複製到 B   mv A dir_name 將 A 搬到資料夾   cat file_name 查看內容   grep text file_name 抓取內容    </description>
    </item>
    
    <item>
      <title>Longest Common Increasing Subsequence(LCIS)</title>
      <link>https://Luke2336.github.io/p/lcis/</link>
      <pubDate>Fri, 29 Jan 2021 12:05:24 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/lcis/</guid>
      <description>Codeforces 10 D. LCIS dp[i][j] 為 a[1&amp;hellip;i], b[1&amp;hellip;j] 結尾為 b[j] 的 LCIS 的長度。
$$dp_{i, j} := \begin{cases} \max_{p &amp;lt; j, b_{p} &amp;lt; b_{j}} dp_{i - 1, p} + 1 &amp;amp;, a_{i} = b_{j} \\ dp_{i - 1, j} &amp;amp;, \text{otherwise}. \end{cases}$$
複雜度：O(nm)，n, m 為兩序列長度。
1#pragma GCC optimization (&amp;#34;O3&amp;#34;) 2#include&amp;lt;bits/stdc++.h&amp;gt;3using namespace std; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 // INPUT 7 int L[2]; 8 vector&amp;lt;int&amp;gt; v[2]; 9 for (int i = 0; i &amp;lt; 2; i++) { 10 cin &amp;gt;&amp;gt; L[i]; 11 v[i].</description>
    </item>
    
    <item>
      <title>AtCoder Beginners Selection</title>
      <link>https://Luke2336.github.io/p/atcoder_abs/</link>
      <pubDate>Tue, 19 Jan 2021 17:00:49 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/atcoder_abs/</guid>
      <description>AtCoder Beginners Selection 用 AtCoder 的水題來練習 Kotlin 的基礎語法。
PracticeA - Welcome to AtCoder 1private fun readLn() = readLine()!! 2private fun readInt() = readLn().toInt() 3private fun readStrings() = readLn().split(&amp;#34; &amp;#34;) 4private fun readInts() = readStrings().map { it.toInt() } 5 6fun main() { 7 val a = readInt() 8 val(b, c) = readInts() 9 val s = readLn() 10 println(&amp;#34;${a + b + c}$s&amp;#34;) 11} ABC086A - Product 1private fun readLn() = readLine()!</description>
    </item>
    
    <item>
      <title>AtCoder Regular Contest 111</title>
      <link>https://Luke2336.github.io/p/atcoder_arc111/</link>
      <pubDate>Sat, 09 Jan 2021 22:03:11 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/atcoder_arc111/</guid>
      <description>因為 pA 卡住，所以慘慘的 QAQ
掉了 31 分到 1685。
AtCoder Regular Contest 111 A. Simple Math 2 題意 $$1 \leq n \leq 10^{18}, 1 \leq m \leq 10^4, \text{find }\lfloor \frac{10^n}{m}\rfloor \mod m.$$
解法  求 (10 ** n) % (m * m) // m。 紀錄餘數的循環節。 卡題原因：  忘記循環不一定從一開始。 用了 unordered_map 判斷餘數是否出現過導致 TLE，換成 array 就變很快了。    Code 1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long ll; 4#define pb push_back 5int s[100000008]; 6int main() { 7 ll n, m, mm; 8 cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m; 9 mm = m * m; 10 ll r, d = 1; 11 vector&amp;lt;int&amp;gt; v; // 紀錄餘數 12 for (int i = 0; i &amp;lt;= n; i++) { 13 r = d % mm; 14 if (s[r] || (i &amp;amp;&amp;amp; r == v[0])) break; 15 s[r] = i; 16 v.</description>
    </item>
    
    <item>
      <title>AtCoder Educational DP Contest</title>
      <link>https://Luke2336.github.io/p/atcoder_education_dp/</link>
      <pubDate>Mon, 04 Jan 2021 11:59:31 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/atcoder_education_dp/</guid>
      <description>AtCoder Educational DP Contest  [於 Feb, 2020 完成]
這套從簡到難的 DP 題組，有不少經典題，很適合照順序刷。 開始刷了之後，才發現自己實力的不足，有幾題想了很久還是想不出來，只好去翻別人的解答。刷完發現 code 都不長，狀態也不難列，但轉移式都要想很久。
 A. Frog 1 1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3int main() { 4 int N; scanf(&amp;#34;%d&amp;#34;, &amp;amp;N); 5 int dp[2] = {}, a[2] = {}; 6 scanf(&amp;#34;%d%d&amp;#34;, &amp;amp;a[1], &amp;amp;a[0]); 7 dp[0] = abs(a[1] - a[0]); 8 for (int i = 3; i &amp;lt;= N; i++) { 9 int x; scanf(&amp;#34;%d&amp;#34;,&amp;amp;x); 10 dp[i % 2] = min(dp[i % 2] + abs(x - a[i % 2]), 11 dp[(i + 1) % 2] + abs(x - a[(i + 1) % 2])); 12 a[i % 2] = x; 13 } 14 printf(&amp;#34;%d\n&amp;#34;, dp[N % 2]); 15 return 0; 16}  B.</description>
    </item>
    
    <item>
      <title>AtCoder Beginning Contest 186</title>
      <link>https://Luke2336.github.io/p/atcoder_abc186/</link>
      <pubDate>Sat, 19 Dec 2020 22:03:36 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/atcoder_abc186/</guid>
      <description>AtCoder Beginning Contest 186 pE 讓我卡了一下，於是就掉分了。pF 想到了一個假解，浪費了不少時間。可能是因為剛打完 CF，所以狀態不好。
A. Brick 1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3int main() { 4 int n, w; cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; w; 5 cout &amp;lt;&amp;lt; n / w &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;; 6 return 0; 7}  B. Blocks on Grid 1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3int main() { 4 ios_base::sync_with_stdio(0); cin.tie(0); 5 int h, w; cin &amp;gt;&amp;gt; h &amp;gt;&amp;gt; w; 6 int sum = 0, m = 105; 7 for (int i = 0; i &amp;lt; h; i++) { 8 for (int j = 0; j &amp;lt; w; j++) { 9 int x; cin &amp;gt;&amp;gt; x; 10 sum += x; 11 m = min(m, x); 12 } 13 } 14 cout &amp;lt;&amp;lt; sum - m * h * w &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;; 15 return 0; 16}  C.</description>
    </item>
    
    <item>
      <title>Codeforces Round 691 Div. 2</title>
      <link>https://Luke2336.github.io/p/cf_contest_1459/</link>
      <pubDate>Sat, 19 Dec 2020 19:07:58 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/cf_contest_1459/</guid>
      <description>Codeforces Round #691 (Div. 2) 因為 pC 找不到 bug，就一直亂丟，於是打得超爛。Rating 加了 43 到 1695。
pA. Red-Blue Shuffle 1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long ll; 4typedef pair&amp;lt;int, int&amp;gt; pii; 5#define pb push_back 6int main() { 7 ios_base::sync_with_stdio(0); cin.tie(0); 8 int T; cin &amp;gt;&amp;gt; T; 9 while (T--) { 10 int n; cin &amp;gt;&amp;gt; n; 11 string R, B; 12 cin &amp;gt;&amp;gt; R &amp;gt;&amp;gt; B; 13 int r = 0, b = 0; 14 for (int i = 0; i &amp;lt; n; i++) 15 if (R[i] &amp;gt; B[i]) r++; 16 else if (R[i] &amp;lt; B[i]) b++; 17 if (r &amp;gt; b) cout &amp;lt;&amp;lt; &amp;#34;RED\n&amp;#34;; 18 else if (r &amp;lt; b) cout &amp;lt;&amp;lt; &amp;#34;BLUE\n&amp;#34;; 19 else cout &amp;lt;&amp;lt; &amp;#34;EQUAL\n&amp;#34;; 20 } 21 return 0; 22}  pB.</description>
    </item>
    
    <item>
      <title>有向圖找負環 (Negative-Cycle)</title>
      <link>https://Luke2336.github.io/p/negative_cycle/</link>
      <pubDate>Sat, 05 Dec 2020 22:36:18 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/negative_cycle/</guid>
      <description>CSES - 1197 - Cycle Finding  卡車說可以從一個假點開始做 SSSP，也就是將所有點的距離都先設成 0。 我的寫法複雜度看起來不好，感覺假解了，但想不到該怎麼改，可能會 TLE。 想了一個確定複雜度是 O(VE) 的解，將整張圖做 SCC，形成一個 DAG，從每個 in-degree 為 0 的 SCC 選一個點做 DFS。  1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long ll; 4typedef pair&amp;lt;int, ll&amp;gt; pii; 5#define pb push_back 6vector&amp;lt;int&amp;gt; ans; 7vector&amp;lt;vector&amp;lt;pii&amp;gt;&amp;gt; G; 8vector&amp;lt;bool&amp;gt; visit; 9vector&amp;lt;bool&amp;gt; use; 10vector&amp;lt;ll&amp;gt; dis; 11int dfs(int v) { 12 use[v] = visit[v] = true, ans.pb(v); 13 for (pii e : G[v]) { 14 int u = e.</description>
    </item>
    
    <item>
      <title>CF GYM 100274</title>
      <link>https://Luke2336.github.io/p/cf_gym_100274/</link>
      <pubDate>Thu, 03 Dec 2020 23:56:03 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/cf_gym_100274/</guid>
      <description>CF-GYM100274 pA  問題：2 &amp;lt;= n &amp;lt;= 1e18，2 &amp;lt;= k &amp;lt;= 1e12，求 n! 是 k 的幾次方。 作法：將 k 做質因數分解，然後各自算出次方數後，再取最小值。 時間：$$O(\log n \sqrt k)$$  1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long ll; 4typedef pair&amp;lt;ll, int&amp;gt; pli; 5vector&amp;lt;pli&amp;gt; prime_factor (ll k) { 6 vector&amp;lt;pli&amp;gt; ret; 7 for (ll i = 2; i * i &amp;lt;= k; i++) { 8 if (k % i) continue; 9 pli p = pli(i, 0); 10 while (k % i == 0) k /= i, p.</description>
    </item>
    
    <item>
      <title>Codeforces Round #615 (Div. 3)</title>
      <link>https://Luke2336.github.io/p/cf_contest_1294/</link>
      <pubDate>Fri, 24 Jan 2020 11:26:38 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/cf_contest_1294/</guid>
      <description>Codeforces Round #615 (Div. 3) 第一次 CF 賽中破台，排名 +178，總算 1700 了。 pD 稍微想了一下子，pE 實作上卡了很久，有些邊界問題沒考慮清楚。pF 想了一下子才發現很好寫，但忘了考慮一直鏈的情況，所以 WA 了一次。
A. Collecting Coins 1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long LL; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 int t; cin &amp;gt;&amp;gt; t; 7 while (t--) { 8 LL a, b, c, n; 9 cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b &amp;gt;&amp;gt; c &amp;gt;&amp;gt; n; 10 LL sum = n + a + b + c; 11 if (sum % 3) { 12 cout &amp;lt;&amp;lt; &amp;#34;NO\n&amp;#34;; 13 continue; 14 } 15 sum /= 3; 16 if (sum &amp;lt; a || sum &amp;lt; b || sum &amp;lt; c) { 17 cout &amp;lt;&amp;lt; &amp;#34;NO\n&amp;#34;; 18 continue; 19 } 20 cout &amp;lt;&amp;lt; &amp;#34;YES\n&amp;#34;; 21 } 22 return 0; 23}  B.</description>
    </item>
    
    <item>
      <title>Zerojudge a813 - 城市觀測</title>
      <link>https://Luke2336.github.io/p/zj_a813/</link>
      <pubDate>Tue, 07 Aug 2018 09:52:33 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/zj_a813/</guid>
      <description>此篇是從舊 Blog 搬過來。
Zerojudge a813 - 4. 城市觀測 題目敘述 有 N 棟房子。對於任意 AB 兩棟房子，只要 AB 中間沒有房子的高度超過 A 或 B，則 A 可看見 B。求 1 ~ N 每棟房子可看見的房子總數。
 測資一，0 &amp;lt; N ≤ 300，0 &amp;lt; H[i] ≤ 1e5，3/17分 測資二，0 &amp;lt; N ≤ 5000，0 &amp;lt; H[i] ≤ 1e5，3/17分 測資三，0 &amp;lt; N ≤ 1e6，0 &amp;lt; H[i] ≤ 1e9，11/17分  範例測資  N = 2，H = {1,1}，ans = 1+1 = 2 N = 3，H = {1,2,3}，ans = 1+2+1 = 4 N = 5，H = {5,2,3,4,4}，ans = 4+2+3+3+2 = 14  參考解法 「A 可看見 B」和「B 可看見 A」等價，因此只要計算一半就好了，也就是可以將問題簡化成，計算每棟房子往左看的sum x 2。</description>
    </item>
    
    <item>
      <title>UVA 106 - Fermat vs. Pythagoras</title>
      <link>https://Luke2336.github.io/p/uva_106/</link>
      <pubDate>Wed, 04 Jul 2018 10:13:53 +0800</pubDate>
      
      <guid>https://Luke2336.github.io/p/uva_106/</guid>
      <description>UVA 106 - Fermat vs. Pythagoras 題目敘述 輸入 N (1 ≤ N ≤ 1000000)，求X² + Y² = Z²（0 &amp;lt; X &amp;lt; Y &amp;lt; Z ≤ N）的解中
 三數互質 gcd(X, Y, Z) = 1 的解有幾組 １ ~ Ｎ 中有幾個正整數沒被任何一組解包含  解法 原本想枚舉 Y 和 Z，但時間上會是 10¹¹ 等級，顯然不是一個好方法。
這時，突然想到了「畢式三元數」(Pythagorean triple)，畢竟每次數學培訓上數論都會講到，前幾天翻數學競賽的書也剛好看到，不過似乎只針對「互質畢式三元數」討論而已。
 「互質畢式三元數」性質如下：
X, Y, Z ∈ 𝚴，X² + Y² ＝ Z² 且 gcd(X, Y, Z) = 1，則可表示為
 X = m² - n² Y = 2mn Z = m² + n²  其中 m &amp;gt; n，gcd(m, n) = 1，m, n 為一奇一偶。</description>
    </item>
    
  </channel>
</rss>
