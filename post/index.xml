<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Luke&#39;s Blog</title>
    <link>https://luke2336.github.io/post/</link>
    <description>Recent content in Posts on Luke&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Jun 2022 03:46:07 +0800</lastBuildDate><atom:link href="https://luke2336.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dart 筆記</title>
      <link>https://luke2336.github.io/p/hello_dart/</link>
      <pubDate>Mon, 27 Jun 2022 03:46:07 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/hello_dart/</guid>
      <description>線上編譯器  DartPad  Hello World! dart Hello.dart
1// Hello.dart 2void main() { 3 print(&amp;#39;Hello World!&amp;#39;); 4} Comment 1// Inline Comment 2 3/* 4Comment 5*/ Data Type  int, double, num String bool List Map Set  Number 1void main() { 2 var num1 = 1; 3 print(num1); // 1 4 5 var num2 = 2.05; 6 print(num2); // 2.05 7 8 var num3 = int.parse(&amp;#39;1&amp;#39;); 9 print(num3); // 1 10 11 var num4 = double.</description>
    </item>
    
    <item>
      <title>記 2022</title>
      <link>https://luke2336.github.io/p/2022/</link>
      <pubDate>Mon, 20 Jun 2022 06:37:25 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/2022/</guid>
      <description>一月  參觀了辛志平校長故居。 Amazon 的 Online Assessment。 看完 Psycho Pass 第二季。 去桃園逛 IKEA。 多益的成績公佈了，拿到聽力 415 閱讀 380，總共 795 分。 開始看進擊的巨人。 處理了微學分承認的手續。 和導師和師母吃飯。 回去雙溪奔喪。 和 Google 談好了 Offer。 玩了 zsh 的設定。 自己留在新竹過年。  二月  和學長在愛買一樓的港式飲茶吃飯，聊了滿久的。 和台北來的朋友一起去逛新竹動物園和看電影。 打了第三劑疫苗（BNT），大約燒到 38.1 而已。 和一家叫 Jump Trading 的公司聊了一下。 生日和 Lin Lee 和卡車一起吃飯。 第一次裝 Docker。 跟隊友去吃拿坡里。 去金山泡溫泉。 去新竹台大醫院拔智齒。  8:30 到中醫門診前的採檢站做快篩。 10:40 在口腔外科門診做手術。  麻醉過後，上排的智齒沒多久就被拔起來了。 下排的可能因為長得有點彎，所以拔了很久。 只有縫下面的傷口，上面的沒有縫，下週三下午要去拆線。 11:30 結束。   原本約診的是女醫師，但實際拔牙的是一個男醫生？ 回去後一個小時把紗布拿掉還繼續在流血。   去清大圖書館逛了校史館。   看了神在月的孩子。 和 Lin Lee 去逛竹北新開的大遠百。  晚餐吃了藍屋日本料理，剛好有當月生日優惠，多贈送了一道甜點。Lin Lee 點了一堆毛豆吃。    三月  去台大醫院拆線。 在巴哈上看了 K-ON！輕音部。 跟 PCCA 去吃夜排檔。 申請提畢。 覺得高等 UNIX 的功課 lsof 很難寫。 去台中玩，吃了有點貴的火鍋。 去紀州庵，還有爬仙跡岩，從景美站爬到海巡署。晚餐在公館吃了初牛的牛橫膈丼。   開始用 Notion 寫筆記。  四月  把 markdown 筆記放到 Github 上，發現了 Chrome 一個方便的擴充 GitHub Math Display，讓 Github 的預覽能顯示數學式。 跟學長去竹北逛逛。 去新埔爬文山步道，原本是要跟 Hyperbola 和小凡一起去，但 Hyperbola 騎車前腳受傷，只好跟學弟兩個人去了。  來回是搭新竹客運的 5619，9:38 從新竹火車站出發，11:38 從遠東廠站上車。 地圖節自網路，大概是從 Ａ線上山，D 線下山，沿途的土石有些鬆落，部分路段需要拉著繩索，所以不適合帶小孩走到吧哩國山後面的路段。雖然是平日，還是有遇到三四群人。 風景大概就是竹北高鐵站一區。 午餐吃了巨城附近一家有素食的店八二親食。     羽球期中考拿了滿分。 讀完了《最強睡眠術》，學到了一些新的知識。 在巴哈上面看了大正処女御伽話。 買實名制快篩。 開始在 591 研究租屋。 又去台大醫院拔智齒。  這次拔了右上和右下兩顆智齒。 早上不到八點就去排快篩了。 這次一樣是個年輕的男醫生。 拔完後，下面的智齒牙根斷了一部分留在裡面，但醫生說會跟骨頭融合。如果硬要處理，高機率會傷到神經。   這次相對上次沒什麼腫。 去台北看房。  五月  又去台北看房，這次看到第三間就決定租了。 賣腳踏車。 去馬偕做體檢，覺得服務還算滿不錯的，但我下週還得去補檢體 QQ 公司的體檢項目比想像中少，大致上就是身高體重視力抽血驗尿照X光等等。 簽約後去逛了 IKEA。 5/10 下午手機的網路突然不能用，完全收不到訊號，到傍晚時才可以打電話，弟弟才告訴我是機房的問題，不是我手機壞掉。結果我半個下午都在研究要換 iphone SE3 還是 iphone 13 mini，浪費一堆時間。 買了些氣泡紙和紙箱，準備搬家。 第一次去博愛校區散步。 買了一些襯衫和白 T。 去退國光的回數票，16 張票得到了 1700 左右。 開始常跟 Lin Lee 去打羽球。 隊友們絕交，讓我有些擔心。 和導師還有他電機的導生吃 pizza。 買了一台除濕機，於是被舍監關注。 和小凡和 Lin Lee 在清交拍畢業照。  六月  和隊友們去吃燒肉、壽司郎、港式飲茶。 在 IKEA 線上訂了一些雜物。 學著坐亞聯來回新竹和大坪林。 房間的熱水器似乎壞了，於是讓房東換了個新的。 在線上看了《怪獸與鄧不利多的秘密》。 退宿後寫了一篇關於競程的心得文。 去系辦發現提前畢業沒有畢業紀念證書可以領。 8/26 ~ 8/29 有 Facebook Hacker Cup Qualification Round。 看完了動畫夏洛特，有空可能會補一下同作者的 Clannad。 學校寄信說 11 月底前要將雲端硬碟容量降到 5GB。 為了玩 Flutter 而開始研究 Dart。  搬家（交大 - 大坪林）  早上七點花了一個小時把東西分成六趟用手推車搬到女二一樓外面。然後在全家買了早餐吃。 九點前，搬家公司很準時的來了，他們大約十分鐘不到就把所有東西搬上車了。他們是開五噸的貨車來，因為我的量不到三點五頓，所以是收 7000，如果超過就會收 9500，這是學生價減 500 後的價格。 十一點前就到大坪林且把所有東西搬到公寓二樓了，非常的有效率，也幫我把東西排得很整齊。 這次找的搬家公司是大新竹搬家公司，覺得價錢比其他家估得便宜，大家有需要可以參考看看。 下圖分別是搬家前和搬完後的照片。  </description>
    </item>
    
    <item>
      <title>Codeforces Round 790 Div. 4</title>
      <link>https://luke2336.github.io/p/cf_contest_1676/</link>
      <pubDate>Sun, 19 Jun 2022 15:02:44 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/cf_contest_1676/</guid>
      <description>Codeforces Round #790 (Div. 4)  因為下午有些無聊，所以就 virtual 了一場 div. 4，體驗一下 div. 4，但打了 90 分鐘就覺得累到不想打了 QQ 半年多沒打競程，速度掉滿多的，專注力也有差。 pC 一直讀錯題意。  pA. Lucky? 1#pragma GCC optimization (&amp;#34;O3&amp;#34;) 2#include&amp;lt;bits/stdc++.h&amp;gt;3using namespace std; 4typedef long long ll; 5typedef pair&amp;lt;int, int&amp;gt; pii; 6#define pb push_back 7 8int count(int n) { 9 return n / 100 + n / 10 % 10 + n % 10; 10} 11 12int main() { 13 ios::sync_with_stdio(0), cin.tie(0); 14 int n; 15 cin &amp;gt;&amp;gt; n; 16 while (n--) { 17 int t; 18 cin &amp;gt;&amp;gt; t; 19 if (count(t % 1000) == count(t / 1000)) { 20 cout &amp;lt;&amp;lt; &amp;#34;YES\n&amp;#34;; 21 } else { 22 cout &amp;lt;&amp;lt; &amp;#34;NO\n&amp;#34;; 23 } 24 } 25 return 0; 26}  pB.</description>
    </item>
    
    <item>
      <title>USACO</title>
      <link>https://luke2336.github.io/p/usaco/</link>
      <pubDate>Thu, 16 Jun 2022 14:51:45 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/usaco/</guid>
      <description>Chapter 1 1.4 Wormholes  題意：有 12 個蟲洞，要配對成兩兩一組，一旦碰到蟲洞就會被傳送到另一端，且一直往 +X 方向移動，問有多少種組合能形成環？ 這題是很好的題目，能練習實作暴搜。首先要會 DFS 枚舉組合，方法是每次找到第一個沒被用到的點，然後枚舉能和他匹配的點。之後再檢查每個組合是否有環，採取 BFS，每次走兩步，先一步蟲洞，再走到下一個點。  1/* 2ID: whitech1 3TASK: wormhole 4LANG: C++14 5*/ 6#include &amp;lt;bits/stdc++.h&amp;gt;7using namespace std; 8typedef pair&amp;lt;int, int&amp;gt; pii; 9#define x first 10#define y second 11int n, ans = 0; 12vector&amp;lt;pii&amp;gt; p; 13vector&amp;lt;vector&amp;lt;bool&amp;gt; &amp;gt; G; 14vector&amp;lt;int&amp;gt; pr; 15bool check() { 16 vector&amp;lt;int&amp;gt; visit(n); 17 queue&amp;lt;int&amp;gt; q; 18 for (int i = 0; i &amp;lt; n; i++) q.push(i); 19 while (!</description>
    </item>
    
    <item>
      <title>Kattis</title>
      <link>https://luke2336.github.io/p/kattis/</link>
      <pubDate>Thu, 16 Jun 2022 09:32:03 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/kattis/</guid>
      <description>pJ. Inverse Factorial  給定一個長度不超過 1e6 的字串，代表 n!，求 n 是多少？ 答案的範圍不超過 1e6，所以可以直接 mod 一個夠大的質數  1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3#define mod 1000000007 4typedef long long ll; 5int main () { 6 ios_base::sync_with_stdio(0); cin.tie(0); 7 string s; cin &amp;gt;&amp;gt; s; 8 ll sum = 0; 9 for (int i = 0; s[i]; i++) 10 sum = (sum * 10 + s[i] - &amp;#39;0&amp;#39;) % mod; 11 for (ll i = 1, frac = 1; ; i++) { 12 frac = (frac * i) % mod; 13 if (frac == sum) { 14 cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;; break; 15 } 16 } 17 return 0; 18}  Tic Tac Toe 給定一個 3x3 的棋盤，問是不是合法的。</description>
    </item>
    
    <item>
      <title>CSES</title>
      <link>https://luke2336.github.io/p/cses/</link>
      <pubDate>Thu, 16 Jun 2022 09:29:58 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/cses/</guid>
      <description>1202 - Investigation  最短路徑水題 Dijkstra  1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3const int mod = 1000000007; 4typedef long long ll; 5typedef pair&amp;lt;ll, int&amp;gt; pii; 6#define pb push_back 7int main () { 8 ios_base::sync_with_stdio(0); cin.tie(0); 9 int n, m; cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m; 10 vector&amp;lt;vector&amp;lt;pii&amp;gt;&amp;gt; G(n + 1); 11 for (int i = 0; i &amp;lt; m; i++) { 12 int a, b, c; cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b &amp;gt;&amp;gt; c; 13 G[a].</description>
    </item>
    
    <item>
      <title>交大修課心得</title>
      <link>https://luke2336.github.io/p/course_nctu/</link>
      <pubDate>Tue, 14 Jun 2022 11:00:15 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/course_nctu/</guid>
      <description>目錄 這邊的分類不代表開課系所，只是用課的性質去歸納。
 物理  物理（一）、（二） 物理實驗（一）、（二）   數學  微積分甲（一）、（二） 離散數學 線性代數 微分方程 訊號與系統 機率   資工  程式  計算機概論與程式設計 物件導向與資料結構 基礎程式設計（GPE）   硬體、底層  數位電路設計 數位電路實驗 計算機組織 作業系統概論 編譯器設計   計算理論  基礎圖論 演算法概論 [清大] 隨機演算法 高等演算法 正規語言概論 隨機演算法 賽局理論及應用   其他  競技程式設計（一）、(二)、（三） 人工智慧概論 資料庫系統概論 計算方法之實務應用 數值軟體開發 資訊工程研討     電機、電子  電子學（一） 電子實驗（一） 電路學 電子設計自動化演算法與實作   通識  校基本  疾病知識與防治 幾何造型 統計方法與資料分析 認識語言   跨院  統計學   核心  政治學 教育學概論 [台大] 東亞儒家：人文精神     外文  大一英文（一） 德文（一） 德文（二） 進階英文寫作    筆記 Github</description>
    </item>
    
    <item>
      <title>template class 練習</title>
      <link>https://luke2336.github.io/p/template1/</link>
      <pubDate>Wed, 08 Jun 2022 14:13:30 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/template1/</guid>
      <description>簡單寫了一個幾何模板當作練習。
1#include &amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3 4template&amp;lt;typename T&amp;gt; 5class Point { 6 T x; 7 T y; 8public: 9 Point() {} 10 Point(const T &amp;amp;x, const T &amp;amp;y): x(x), y(y) {} 11 Point operator+(const Point &amp;amp;r) const { 12 return Point(x + r.x, y + r.y); 13 } 14 Point operator-(const Point &amp;amp;r) const { 15 return Point(x - r.x, y - r.y); 16 } 17 bool operator==(const Point &amp;amp;r) const { 18 return x == r.</description>
    </item>
    
    <item>
      <title>台北租屋經驗</title>
      <link>https://luke2336.github.io/p/rent-house/</link>
      <pubDate>Mon, 06 Jun 2022 16:50:54 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/rent-house/</guid>
      <description>今年暑假我就畢業了，工作是在 Google 的新店辦公室，因為不方便通勤，所以就得開始找房子。
租屋名詞解釋  獨立套房：有廁所的房間，有獨立的出入口。 出租套房：比起獨立套房而言，多了公共區域，但相對沒隱私。 雅房：需要和他人共用廁所的房間  用什麼工具找房子  591 租屋網 FB 社團 豬豬快租 APP IG 房仲帳號（我開了一個獨立的帳號用來看房子的貼文）  @taipei_rent_house_van @taipei_rent @taipei.rent @taipei_king_house @taipei_rent_house @taipei.rent.house @rent_a__house_du @taipei_renthouse2.0    找房子的時間  我自己是 7 月中旬開始工作，6 月下旬學校會要求搬宿舍。因為最後一個學期只修了一兩門課，於是有充分的時間可以研究，從 4 月上旬就開始在租屋網上研究。最後在 5 月上旬簽約，6 月上旬搬家。 被我塞進筆記裡的大約有超過 60 間房子。 每天早上都會看一下網站和 APP 有什麼新的物件，然後有空也會把筆記裡已出租的物件刪除。 另外，開始找之前，可以先研究個區域的通勤方式跟時間，這樣能比較快過濾出要找的區域。  整理找到的資訊  用 notion.so 建立資料庫，可以 sort 和建立 filter。  重視的東西  可以看到我重視的幾個點是有沒有垃圾代收和陽台，然後其次是電梯和廚房。價錢和交通也是決定性的因素。 多看幾間後就可以了解自己的需求要多少預算才可以滿足，邊看邊修正自己的預算。  看房要注意的地方 我大概看了 7 間房間就決定要租哪間了，當中有被放鴿子的經驗，大家最好出發前跟對方確定房子還沒被訂走，如果是找房仲可以請他一次多帶你看幾間同區域的房子。
 會不會漏水 房間、廁所有沒有對外窗 逃生動線是否寬敞 樓下是否有油煙 周遭區域晚上照明是否充足 熱水的溫度和水量 窗戶是否能救災  如何和房東相處  要有禮貌，最好表明自己有正當工作，但不要談價錢前就透露自己的薪水高低。 通常可以試著議價 500~1000 元，再多應該不可能了。 記得和房東要聯絡方式。  簽約  通常會先給個訂金，我自己是租 10000~15000，給了 3000 當訂金，記得這個時候要房東寫個字據代表他確實收到，也寫清楚雙方違約時訂金的處理方式。 台北的租屋市場流動還算快，正常的物件會要求你 1~2 個禮拜內簽約，可能給你 3 天的搬遷期。 如果房東說可以簽半年約，代表這房子可能有雷。可以先上租屋平台看同樣地點上次 po 文的時間，推算上一個房客住了多久。 合約的內容可以參考內政部的應記載及不得記載事項跟房東討論。 稅務及遷戶籍相關的內容可以詳細計算一下自己的所得稅扣繳方式後決定是否跟房東讓步，因為假設被政府知道是出租用屋，其地價稅會翻五倍。 水電的收費方式也要跟房東確認，還有傢俱電器的修繕責任最好也在合約中寫清楚。  </description>
    </item>
    
    <item>
      <title>實作 lsof</title>
      <link>https://luke2336.github.io/p/lsof/</link>
      <pubDate>Fri, 18 Mar 2022 18:49:31 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/lsof/</guid>
      <description>這篇是用來記錄 UNIX hw1 的實作坑。 實作時可能會因為不是 root 權限，而需要輸出 permission denied。 這份功課有點吃字串處理技巧。  Goal COMMAND PID USER FD TYPE NODE NAME
PID  先從 /proc 裡面撈出所有的 pid，然後再針對每個 pid 去撈剩下的資訊。  Command  從 /proc/[pid]/comm 讀寫。  User、UID  每個 pid 資料夾中的 user 都相同，於是只要用 stat() 去找 /proc/[pid] 的 st_uid 就行了，然後從 /etc/passwd 撈出對應的 username。  FD 分成以下幾種：
cwd  從 proc/[pid]/cwd 裡找，因為是 symbolic link，所以用 readlink() 讀出連接的檔名。  rtd  從 proc/[pid]/root 裡找，然後一樣用 readlink()。  txt  從 /proc/[pid]/exe 裡找，然後一樣用 readlink()。  mem  讀 /proc/[pid]/maps。  [0-9]+[rwu] 從 /proc/[pid]/fdinfo/[fd] 裡讀取 flag，然後用 &amp;amp; O_O_ACCMODE 去區分是讀或寫。</description>
    </item>
    
    <item>
      <title>野柳、金山</title>
      <link>https://luke2336.github.io/p/yehliu/</link>
      <pubDate>Sun, 13 Mar 2022 19:39:05 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/yehliu/</guid>
      <description> 今天總共走了 3 萬步。  野柳 金山  去泡硫磺泉 喝了一杯紫地瓜歐雷。  金山獅頭山公園 </description>
    </item>
    
    <item>
      <title>lex 筆記</title>
      <link>https://luke2336.github.io/p/lex/</link>
      <pubDate>Fri, 11 Mar 2022 10:18:20 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/lex/</guid>
      <description>什麼是 lex lex 是幫我們做 lexical analysis 的工具，它負責將 source code 切成一些 token。
Compile 方法 1lex rule.l 2gcc lex.yy.c -ll 3./a.out &amp;lt; input lex 的格式 利用 %% 將 code 切成三個區段，第一個和第二個是必須的。
1definition section 2%% 3rule section 4%% 5user subroutine 最簡單的 lex 程式 1%% Definition Section  寫在此區的 Ｃ 程式碼需要加上 %{ 和 %}，例如放 header 和全域變數等等。 可以給於一些定義。  1digit [0-9] 2letter [a-zA-Z] 3space [ \t]+ 4identifier {letter}({digit}|{letter})* 5integer 0|([1-9]{digit}*)  可以定義一些 State，用 %s 或 %x，預設的 State 稱為 INITIAL。  1%s state1 state2 state3 Rule Section  前面那一項是要寫正規表示法。 比對的規則是先找最長的 rule，遇到一樣長的時候，找最前面的 rule。  1/* 以下這份 code 可以將程式的空白和換行移除。 */ 2{space} { ; } 3\n { ; } 4.</description>
    </item>
    
    <item>
      <title>軍艦岩</title>
      <link>https://luke2336.github.io/p/nycu-taipei/</link>
      <pubDate>Fri, 11 Mar 2022 10:17:51 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/nycu-taipei/</guid>
      <description>   時間 地點     12:15 校車   13:20 陽明校門口   13:30 登山口   13:40 大學亭   13:50 軍艦岩    原路折返   16:30 校車   17:40 交大校區    </description>
    </item>
    
    <item>
      <title>談文 - 鄭漢步道</title>
      <link>https://luke2336.github.io/p/tanwen/</link>
      <pubDate>Sun, 06 Mar 2022 09:34:13 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/tanwen/</guid>
      <description>談文車站、鄭漢步道 16:01 談文車站 16:28 登山步道口 16:40 紀念碑、觀景台 17:51 區間車 晚餐 - 晶品城 B2 水月 豬排飯 </description>
    </item>
    
    <item>
      <title>Hello, Kotlin!</title>
      <link>https://luke2336.github.io/p/hello_kotlin/</link>
      <pubDate>Sun, 27 Feb 2022 10:14:36 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/hello_kotlin/</guid>
      <description>Learn Kotlin by Example (kotlinlang.org)  Output println() 1fun main() { 2 println(&amp;#34;Hello, World!&amp;#34;) 3} Function fun 1fun sum(x: Int, y: Int): Int { 2 return x + y 3} 4 5// Single-Expression 6fun mul(x: Int, y: Int) = x * y 7 8// Default Arguments 9fun printMSG (msg1: String = &amp;#34;Hello&amp;#34;, msg2: String) { 10 println(&amp;#34;$msg1, $msg2!&amp;#34;) 11} 12 13fun main() { 14 println(sum(1, 2)) 15 println(mul(2, 5)) 16 printMSG(&amp;#34;Hi&amp;#34;, &amp;#34;Jack&amp;#34;) 17 printMSG(msg2 = &amp;#34;Kelly&amp;#34;) 18} vararg 1fun sum(vararg a: Int): Int { 2 var ret = 0 3 for (x in a) ret = ret + x 4 return ret 5} 6 7fun main() { 8 println(sum(1, 0, -1, 2)) 9} Variable val var  val 一定要初始化  1fun main() { 2 val v = 1 // immutalbe 3 var x: Int // mutable 4 x = 1 5 println(x + v) 6} null  用 ?</description>
    </item>
    
    <item>
      <title>2021 簡記</title>
      <link>https://luke2336.github.io/p/news_2021/</link>
      <pubDate>Fri, 25 Feb 2022 09:54:10 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/news_2021/</guid>
      <description> 又在疫情下度過了一年。  大事件    Date News     2021/01/06 拜登就職   2021/01/12 部桃事件   2021/02/01 合併為陽明交通大學   2021/02/06 黃捷罷免案不通過   2021/03/17 鮭魚之亂   2021/03/23 長榮蘇伊士運河事件   2021/04/02 太魯閣出軌   2021/05/13 分區供電   2021/07/23 東奧開幕   2021/07/27 降為二級警戒   2021/09/11 美軍從阿富汗撤軍   2021/10/14 城中城火災   2021/12/18 公投    </description>
    </item>
    
    <item>
      <title>交大交換申請</title>
      <link>https://luke2336.github.io/p/exchange/</link>
      <pubDate>Wed, 09 Feb 2022 16:35:46 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/exchange/</guid>
      <description> 給大家參考一下交大的申請交換經驗。 官網。  申請過程及結果  於 109 上學期末申請交換，預計 110 下學期。 申請的志願排序為：  北京大學 復旦大學 上海交大   計分比例：  成績 60% 自傳 15% 讀書計畫 20% 其他有利審查資料 5%   獎學金  於 109 下學期申請。 獲得 13 萬元。   自傳：  製作簡歷，展示大學期間競賽成績。 說明自己能妥善地利用資源，舉例來說充分利用了交大和清大的資源。   研修計畫：  說明自己的選課計畫。 簡單帶過文化交流的部分。   成績單：  只需要到二下的資料，平均成績約為 87.7。   因為是大陸地區，所以不需要英檢證明。 需繳交 1 萬元保證金，但只要是因疫情放棄即可全退。 放棄：  考量到疫情及無法完整接種兩劑疫苗到生效，決定放棄資格。    </description>
    </item>
    
    <item>
      <title>AtCoder Beginning Contest 237</title>
      <link>https://luke2336.github.io/p/atcoder_abc237/</link>
      <pubDate>Sun, 30 Jan 2022 20:51:14 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/atcoder_abc237/</guid>
      <description>https://atcoder.jp/contests/abc237/tasks。 很早就放棄掙扎的一場。 很久沒打 ABC 了，難度似乎提升很多。  A. Not Overflow 1#pragma GCC optimization (&amp;#34;O3&amp;#34;) 2#include&amp;lt;bits/stdc++.h&amp;gt;3using namespace std; 4typedef long long ll; 5typedef pair&amp;lt;int, int&amp;gt; pii; 6#define pb push_back 7 8int main() { 9 ios::sync_with_stdio(0), cin.tie(0); 10 ll N; 11 cin &amp;gt;&amp;gt; N; 12 ll min = -(1ll &amp;lt;&amp;lt; 31); 13 ll max = (1ll &amp;lt;&amp;lt; 31) - 1; 14 if (min &amp;lt;= N &amp;amp;&amp;amp; N &amp;lt;= max) { 15 cout &amp;lt;&amp;lt; &amp;#34;Yes\n&amp;#34;; 16 } else { 17 cout &amp;lt;&amp;lt; &amp;#34;No\n&amp;#34;; 18 } 19 return 0; 20}  B.</description>
    </item>
    
    <item>
      <title>Google Taiwan 實習轉正</title>
      <link>https://luke2336.github.io/p/google-return/</link>
      <pubDate>Fri, 28 Jan 2022 21:26:20 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/google-return/</guid>
      <description>主要是分享一下折騰三個月的轉正過程。
 在提供 Resume 的階段，會要求提供認識的 Googler 名字（有點作為推薦人的概念）（要是 Host 和 Co-Host 以外的人）。 Recruiter 整個流程都安排得很有效率且會提醒一些注意事項，算是體驗良好。 因為暑假的 Code 量有點少，於是被加了兩場面試。 面試 Recruiter 提醒我是英文的之後，向他詢問可不可以換成中文的，於是就換成跟上海和新店辦公室的人面試。 雖然 Recruiter 建議刷一下 Leetcode，但我這半年刷不到 20 題。 通過 Hiring Committee 後，被通知之前成功的 Team Match 被取消。 原本到第四場都是 ChromeOS 的 Team，但一直失敗，於是最後就請 Recruiter 也幫忙找看看新店或板橋的 Team，所以最後就到新店的 Pixel Team。 Team Match 主要是和 Manager 聊半個小時後，雙方再向 Recruiter 確認喜不喜歡對方。 滿多場 Team Match 都被問到「對 Linux 熟不熟悉」「對 Kernel 熟不熟悉」。 因為沒有 Competing Offer，所以 Offer 就沒有討論空間了。 有聽到一些朋友是先簽 Offer 才 Team Match。 如果不是 Intern 轉正的話，聽說是至少要面試 6 回合。 Recruiter 會要求 Onboard 的日期是星期一，而且是要拿到畢業證書。  日程    Date Status     2021/09/28 收到 email 要求提供 Resume 和 Transcript   2021/10/19 Team Match 1   2021/10/20 Team Match 2   2021/10/28 Team Match 3   2021/12/08 被要求加面試 2 場   2021/12/23 Interview 1   2021/12/24 Interview 2   2022/01/18 通過 Hiring Committee   2022/01/19 Team Match 4   2022/01/25 Team Match 5   2022/01/27 Team Match 6   2022/01/28 Verbal Offer    Offer 會討論到一下幾種東西。</description>
    </item>
    
    <item>
      <title>多益準備</title>
      <link>https://luke2336.github.io/p/toeic_prepare/</link>
      <pubDate>Mon, 10 Jan 2022 17:11:16 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/toeic_prepare/</guid>
      <description>目標  通過交大換修標準 785 分。  準備過程  考了 2021/12/19 的多益，拿到聽力 415 閱讀 380。上一次考是高中畢業時，只考五百多。 整體來說大約花了三週準備。 用書都是從交大圖書館借。  單字：牛津英語大師用THINKING MAP教你多益單字 閱讀：NEW TOEIC 新制多益 : 閱讀5回 全真模擬試題+詳盡解析   準備方法是把單字書裡不熟的字抄下來，然後考前複習，覺得這本書依照場合來整理單字還滿方便的。 閱讀寫了三回，大致上是對 80 題上下，主要是用來練習答題速度。 聽力則是完全裸考，但有擬定好策略。  策略  Part 1  注意 5W1H   Part 2  同樣注意 5W1H 注意放慢語速處、加重音、停頓處   Part 3, Part 4  聽之前盡量先看完題目 注意相似字、反義字   Part 5, Part 6  高中文法 搭配詞   Part 7  先看首段首句 先看題目再找答案 快速掃過文章即可 注意文章種類，分為書信、徵人、廣告&amp;hellip;&amp;hellip;    考試當天  聽力有幾題跟不上，但就直接果斷放棄，往後看。 閱讀剛剛好在最後五分鐘寫完。  </description>
    </item>
    
    <item>
      <title>2021 回顧</title>
      <link>https://luke2336.github.io/p/review2021/</link>
      <pubDate>Mon, 03 Jan 2022 14:54:11 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/review2021/</guid>
      <description>春天去清大賞梅。 球拍第一次打到斷線，學會剪線。比了小梅竹，也參加久違的體育週比賽。 面試了 Google 的實習，最後上了，整個暑假都在實習。 決定不讀研究所。看著身邊的人都在申請中煩惱，但自己置身事外的感覺很奇妙，有著不順應潮流的焦慮，但也很開心自己很早就下定決心，沒花太多力氣猶豫。 年底則是面臨轉正、找工作的壓力。 參加 ICCAD，但因為實習的關係，最後沒有做完。 Github 上漸漸有些東西出現。 上半年陸續把欠的醫生看完，看了牙醫、外科、神經內科、婦科&amp;hellip;開學後打了兩劑 AZ。 比了台清交程式比賽。年度賽拿了第三名，但後面的比賽都打得爛爛的。尤其是最後一場 ICPC 直接大爆炸，只拿了銅牌，很不甘心。 英檢還是考不過 QQ 下半年沒有繼續修德文，之前學的東西就很快忘光了，希望近期可以複習起來。 開始練習煮東西，也開始叫 UberEat。 重新開始寫書法。 逛了竹東夜市、慈雲路夜市。去了苗栗、台中、高雄等地方玩，開始會自己一個人出門玩。    2021 Spring 修了正規、EDA、計算方法之實務應用、進階英文寫作、教育學概論、德文二，還旁聽了難解問題。覺得是個很累很充實的學期，不知道是怎麼撐過去的。算是寫了很多作業，讓寫程式的能力進步不少。英文寫作也是收穫很大的一門課。 2022 Fall 修了 NSD、賽局理論、隨機演算法、競技羽球，然後跟葉老師做專題。    看了很多動畫，大部分都是在巴哈上面看的。  半妖的夜叉姬（覺得跟犬夜叉的風格差很多，有點失望） 舞伎家的料理人（每個月只出一集，多當作打發時間看） 我們仍未知道那天所看見的花名 本田小狼與我（最後沒看完） 天地創造設計部（覺得題材滿有趣的一部作品） 白沙的 Aquatope 來自深淵 隱瞞之事 花開物語 不愉快的妖怪庵 妖怪旅館營業中 寶石商人理察的謎鑑定 重啟咲良田 只有我不存在的城市 死亡筆記本 月與萊卡與吸血公主     2021 過完了，覺得離畢業更近了些，有些徬徨，不確定未來的路要怎麼走。但能開始規劃未來也算是一件好事，有些猶豫畢業後要留在新竹還是在台北工作，有些不知道怎麼從家裡獨立出去，想著想著，卻也會開始想像自己未來的房間長怎樣，生活長怎樣，怎樣跟伴侶相處等等，不知不覺有了些藍圖。</description>
    </item>
    
    <item>
      <title>2022 新年願望</title>
      <link>https://luke2336.github.io/p/newyear2022/</link>
      <pubDate>Sat, 01 Jan 2022 22:10:34 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/newyear2022/</guid>
      <description> 在暑假順利畢業。 在畢業前找到工作。 考過英檢。 喜歡的人和自己都身體健康。 每週花一點時間學德文。 能維持好現有的人際關係。 能經濟獨立，有一定的自由。 能更成熟獨立。 家裡一切平安順遂。  </description>
    </item>
    
    <item>
      <title>記 2021</title>
      <link>https://luke2336.github.io/p/2021/</link>
      <pubDate>Fri, 31 Dec 2021 06:37:20 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/2021/</guid>
      <description>一月  新年第一天就決定分手了。 含羞草開花了。 校門的招牌要被換掉了，一堆人去拍照。 看了爺爺與貓（ねことじいちゃん）。 PCCA 去海水屋聚餐。 去台中玩，喝了春水堂的紅茶凍飲。然後去了第一市場附近，走了電子街，去了幸發亭吃蜜豆冰，覺得這種冰很特別，加了很多種水果。之後去了台中都會公園看夕陽，晚上去文心路吃港式飲茶，覺得油雞和葡式蛋塔超級好吃。 交換申請結果出來了，上了第一志願北京大學。  二月  去館前路的台灣銀行開戶。  雙證件、印章、$1000。 大概花 30 分鐘，官方說法是 40 分鐘。我隔壁的先生連 email 都沒有，感覺就要弄很久。 量完體溫後，保全會問你要辦什麼，說要開戶，就直接拿到號碼牌，完全不用等，就直接被叫號了。 會問職業，還有確認是否要在那家分行開戶，之後就一直簽名。 要下載兩個手機 app（強迫推銷），「台灣銀行」和「台灣行動支付」，行員會讓你在製作卡片時自己做這件事。結果行員聽到我沒用過行動支付，她似乎很訝異。   去北一女找老師，等老師下班的時間，看了樂儀旗的練習。之後一起去了館前路的「咖啡弄」吃了午餐，覺得還滿棒的！之後我們到北門附近散步，逛了一些歷史建築。 去木柵動物園玩。 去金山萬里。 去七堵友蚋、石公潭。 去龜吼漁港吃了巧晏漁坊，第一次吃，覺得相對別家價格較低，口味也不錯，雖然生意有點好，位子很小。點了油雞、蝦、海瓜子，都覺得不錯。 跟外婆去黃金瀑布和三貂角燈塔。 第一次去大湖公園，順便去南港車站的蔦屋書店逛逛。 新聞：Google無限空間雲端掰了！明年起校園免費上限100TB。 公園裡的貓，大黃，走了。 淒慘的開學日，NYCU Portal 轟轟烈烈的爆炸了半天。 羽球拍第一次打到斷線。 去台中後站的泉源公園看了生態湖和帝國製糖廠。  三月  Google SWE Intern 線上面試。 去清大吃空堂咖啡。 看了動畫かくりよの宿飯、不機嫌なモノノケ庵。 和老師們吃了 LaLa Kitchen。 交換獎學金的文件。 參加跟清大電機的小梅竹！ 寫 ICCAD Probelm B。 去一餐吃了新開的 10 元壽司。 吃了導聚，去了建功中學對面的芙歐，點了煙燻鮭魚義大利麵，加上套餐，覺得滿飽的，味道還行，但價位大概都 300 左右，平常應該不太會去吃。 去公館跟弟弟吃 pizza。 找了外籍生當室友。 跟學長去逛了竹東夜市。  四月  去台大打台清交程式競賽，拿了第八名。 去桃園逛了 IKEA。 Google Code Jam 1A 晉級到 Round 2。 寫 SAT solver。 吃了好吃的天婦羅。 吃了好吃又很有飽足感的韓式料理，有很多免費小菜可以選，主菜量也夠大份，低消 $170 還能接受。 開始用 Typora 這個 markdown app。  五月  去了橋頭糖廠和西子灣。晚上買了起司配蘋果酒，覺得很棒。 收到了 Google 的 team match 結果，隔天談好了 offer。 參加高一同學會。 疫情升級到第二級警戒。 興達電廠運轉停擺，於是全台分區供電，很幸運的是交大未受此影響。 重新開始玩貓咪大戰爭。 改離散作業，超殺時間的。  六月  期末考。 寫英文寫作課的 Portfolio。 宿舍的盆栽太久沒管他了，似乎被丟掉了，有些難過。 讀教育學概論期末報告的書《受壓迫者教育學》。 因為頭暈和發燒去看了一般內科，剛好是輪到感染科，因為燒了 10 天，現場也量到 37.</description>
    </item>
    
    <item>
      <title>TOEIC 單字準備</title>
      <link>https://luke2336.github.io/p/toeic1/</link>
      <pubDate>Sat, 18 Dec 2021 20:11:46 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/toeic1/</guid>
      <description>   English Chinese     impede 妨礙   counteroffer 還債   distributer 經銷商   contingency plan 應急計劃   adjourn 體會   remorse 懊悔   dissension 意見不合   conform 遵照   criteria 標準   inferior 下級的   intended 未來的   cistern 儲水器   podium 講台   aggregate 集結   tackle 處理、交涉、抓住   compliance 遵行、承諾   transcend 勝過   out of stack 無現貨的   retial 零售   tailor 修改   consensual 一致同意的   liability 債務   impose 徵稅   mandatory 義務的   evasion 逃避   scrutinize 檢閱   reconcile 核對   audit 查帳   bounced check 空頭支票   deficit 赤字   recession 衰退   mortagage 抵押貸款   promissory note 本票   capitalization 資本額   commission 佣金   transaction 交易   triumph 獲得成功   accredit 授權   delegate 委派   jurisdiction 權力   configuration 框架   ascertain 確信   indispensable 不可或缺的   sidestep 迴避   subsidiary 隸屬的   franchiser 加盟授權者   concession 執照   detrimental 不利的   prestigious 有聲望的   recognition 表彰   unanimous 一致通過的   concur with 同 &amp;hellip; 一致   controversial 有爭議的   consent 同意   preside 主持   disputable 有爭議的   nonsensical 荒謬的   minutes 會議紀錄   concierge 管理員   courier 快遞員   epistle 訊息   alineated 不合群的   intangiable 無形的   amiable 友好的   aesthetics 美學   ergonomic 人體工學   pantry room 茶水間   reinforce 加深   streamline 使效率更高   complication 困難   stipulate 規定   drawn 疲憊的   salient 顯著的   commensurate 相稱的   expertise 專長   subsidize 補助   subsidy 補助金   absurd 不合理的   abundant 大量的   eloquent 有說服力的   lay off 解僱   dedicated 盡責的   freelancer 自由業者   despise 鄙視   compensate 賠償   reimburse 退款   perk 額外補助   industrious 勤勞的   merit 功績   resignation 辭職   abdicate 放棄   valedictory 告別的   severance pay 資遣費   boycutt 杯葛   preclude 阻止   protest 抗議   steppage 停工   strike 罷工   forestall 預先制止   lay out 解釋清楚   memorandum 備忘錄   hypnotize 著迷於   imminent 即將發生的   haggle 討價還價   amicable 友善的   obligatory 強制的   merchandise 商品   manifest 明顯的   dispatch 遞送   integral 不可缺的   spacious 寬敞的   amplify 增強   unveil 使公諸於眾   imminent 逼近的   apparatus 設備   gadget 裝置   aptitude 才能   evacuate 撤空   confined 不能外出的   ventialation 通風   procure 取得   succinct 簡明的   comply 依從   lease 租用   controversy 爭議   seclude 使隔離   imperative 迫切的   conversant 熟悉的   quote 報價   possesion 財產   takeover 收購   down payment 頭期款   flat 公寓   deductible 可扣除的   depreciation 貶值   lease 租約   tenant 房客   landload 房東   overhaul 檢修   appeal 上訴   civil 民事的   legitimate 合理的   litigation 訴訟   recreational 娛樂的   amenity 便利設施   aethetic 美感的   adorn 裝飾   entitle 給予權利   deluxe 豪華的   lecomotive 火車頭   peddle 叫賣   excursion 短程旅行   dispatch 派遣   dawdle 拖拖拉拉   articulated 鉸接式的   double-decker 雙層公車   voucher 票券   vessel 船   embark 上船   obligatory 必須的   ambience 情調   steward 管家   reluctant 不願意的   engage beforehand 預定   call off 取消   renowned 有名的   appetizing 開胃的   cater 承辦   lavish 奢華的   sumptuous 豪華的   cordial 友好的   diplomatic 圓滑的   solicitation 招攬   tender 遞交   attive 服裝   etiquette 禮儀   couteously 有禮貌的   modest 端莊的   scatterbrained 糊裡糊塗的   delicacy 美食   obsolete 淘汰的   broker 協商   sanitary 乾淨的   rehearse 排練   fragile 易碎的   prehistoric 史無前例的   curator 館長   effusive 十分熱情的   inaugural address 就職演說   enthuse 使感興趣   alleviate 減輕   physician 內科醫生   irritate 使疼痛   distraction 娛樂   practice 診所   prescription 處方   pertinent 相關的   surgeon 外科醫生   unequalled 出類拔萃的   recuperate 復原   depressnat 鎮定劑   tranquillizer 鎮定劑   jeopardize 危及   dispense 配藥   herbal 草木的   mishap 不幸事故    </description>
    </item>
    
    <item>
      <title>造橋 - 口山步道</title>
      <link>https://luke2336.github.io/p/zaoqiao/</link>
      <pubDate>Sat, 04 Dec 2021 20:55:15 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/zaoqiao/</guid>
      <description> 中午在市區的大遠百吃飯。 下午去造橋爬口山步道。 回去後累到直接睡死，然後七點半才爬起來吃拉麵。  口山步道  從造橋國中旁的登山口上山，全長大約 40 分鐘，人不多的一條路線。 中間有一些小岔路，所以最好還是看著 OpenSteetMap 比較保險。 其他人都跟我走反方向，可能是我這個方向有不少下坡，覺得很陡，需要小心走。 可以看得到海邊和竹南市區，還有高速公路。  造橋車站  只有停區間車的無人車站。 有一些日治時代留下的宿舍。  </description>
    </item>
    
    <item>
      <title>紗帽山</title>
      <link>https://luke2336.github.io/p/yang-ming/</link>
      <pubDate>Sun, 10 Oct 2021 09:39:05 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/yang-ming/</guid>
      <description> 和高中同學約去陽明山爬山，九點半從劍潭站出發，要上山的人比想樣中多。 中午爬完山後在劍潭站附近吃了麵店，在公園散步，之後整個下午泡在路易莎聊天。 晚上去逛了士林夜市。  紗帽山  坐紅 5 到陽明山公車總站，然後從北面登山口爬到太子亭後折返，約爬了不到兩小時。 沿途遇到四隻鍬形蟲和兩隻石龍子。 步道只有接近山頂處沒有遮蔭，但風很大很涼爽，坡度算是滿陡的，戴著口罩爬滿喘的。 山頂可看到中山堂，及七星山和大屯山。  </description>
    </item>
    
    <item>
      <title>新豐 - 鳳崎落日登山步道</title>
      <link>https://luke2336.github.io/p/xinfeng/</link>
      <pubDate>Sat, 02 Oct 2021 13:32:08 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/xinfeng/</guid>
      <description> 位於新竹新豐，靠近西濱。 從蓮花寺的入口上山，到觀景平台的咖啡店看夕陽後折返，下山跟著別人的路線走稜線，因此不到半小時就下山了，中途有看到碉堡。 有一些岔路，可能會需要先查好地圖再開始爬。 步道整理的不錯，但有些路段沒有石階，只有原始的石頭和沙地，走起來就會滑。今天全程幾乎都有遮蔭，因此不算太熱，風景也很不錯。 晚餐去了南寮新的市集，但人很多，消費也偏高。  </description>
    </item>
    
    <item>
      <title>AtCode Library Practice Contest</title>
      <link>https://luke2336.github.io/p/atcoder-practice2/</link>
      <pubDate>Mon, 20 Sep 2021 10:03:41 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/atcoder-practice2/</guid>
      <description>A - Disjoint Set Union 1#pragma GCC optimization (&amp;#34;O3&amp;#34;) 2#include&amp;lt;bits/stdc++.h&amp;gt;3using namespace std; 4typedef long long ll; 5typedef pair&amp;lt;int, int&amp;gt; pii; 6#define pb push_back 7 8class UnionTree { 9private: 10 vector&amp;lt;int&amp;gt; par, sz; 11public: 12 UnionTree(int n) { 13 par.resize(n); 14 for (int i = 0; i &amp;lt; n; i++) { 15 par[i] = i; 16 } 17 sz.resize(n, 1); 18 } 19 int findPar(int x) { 20 return par[x] = (x == par[x] ?</description>
    </item>
    
    <item>
      <title>Google Intern Experience</title>
      <link>https://luke2336.github.io/p/google-intern/</link>
      <pubDate>Fri, 10 Sep 2021 13:18:58 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/google-intern/</guid>
      <description>整體來說我都是在 WFH，只有在剛二級時回台北體驗 4 天的 Office 生活。我的 Team 的辦公室是在 101 的 73 樓，其他像是板橋和新店的實習生數量就比較多。
期間認識了滿多人，有一部分是在國外留學，暑假在台灣實習的朋友，有一部分是台大的朋友，當然清交也有少部分的人，剛好自己的學妹和直屬學姊都有申請上。STEP 女生收得滿多的，於是有時候就會遠端一起聊天，互相認識。比較有趣的是，台灣的 Intern 在中間自己辦了一次互相認識的活動。不然今年遠端，intern 們就比較沒機會了解互相的 project。
如果不是明年要畢業了，真的很希望能有機會實體 intern 一次。
申請  請看這篇。  時間  20210621～20210910。 每週五天，每天八小時，但其實時間很彈性，不用像某些公司還得打卡。 每個人的時間大約都是 12 週以上，時間是配合放暑假和開學的時間自己決定的。  內容  每個人都會分到一個 host 跟一個 co-host，然後會 weekly 或 biweekly 開會。 我的 project 大致上是用 Python 寫 unit test 相關的東西。 有機會參與到 Team 裡的會議，但印象中不是強制的。 內部有各種課程影片或演講，都可以自由觀看和參加。 除了自己 Team 內的會議，大部分的活動都是用英文進行。 比較喜歡的部分是，Google 內部有很多短網址可以使用，也有自己內部的 search engine。 幾乎可以看到內部大部分的 code，有一套還不錯用的 code review 系統，對 code review 也很講究。 midpoint 和 final 各有一次自我評量，還有 host 的評價，也會開會討論進度，覺得是很有幫助的制度，會讓自己知道哪裡還需要改善。 最後結束的時候會有一次 presentation 的機會。  自我成長  覺得體驗了 Software Engineer 的生活，讓我能更清楚的考慮自己未來升學和就業的方向。有機會和內部的工程師聊天，讓我多了一些新的價值觀，也漸漸學會要如何調適工作和生活。 對 Python 和 Git 等工具變得比較熟悉，原本真的有點像一張白紙，只能說自己平常技能樹點得太 Theoretical 了。整體來說，碰到了不少偏底層的東西，體會到為什麼學校的基礎課程有演算法、計算機組織、作業系統等等了。 了解 Design Doc.</description>
    </item>
    
    <item>
      <title>AtCoder Beginning Contest 216</title>
      <link>https://luke2336.github.io/p/atcoder_abc216/</link>
      <pubDate>Sun, 29 Aug 2021 21:51:11 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/atcoder_abc216/</guid>
      <description>AtCoder Beginning Contest 192 A. Signed Difficulty 1#pragma GCC optimization(&amp;#34;O3&amp;#34;) 2#include &amp;lt;bits/stdc++.h&amp;gt;3using namespace std; 4typedef long long ll; 5typedef pair&amp;lt;int, int&amp;gt; pii; 6#define pb push_back 7int main() 8{ 9 ios::sync_with_stdio(0), cin.tie(0); 10 int X, Y; 11 char c; 12 cin &amp;gt;&amp;gt; X &amp;gt;&amp;gt; c &amp;gt;&amp;gt; Y; 13 if (Y &amp;lt;= 2) 14 cout &amp;lt;&amp;lt; X &amp;lt;&amp;lt; &amp;#34;-\n&amp;#34;; 15 else if (Y &amp;lt;= 6) 16 cout &amp;lt;&amp;lt; X &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;; 17 else 18 cout &amp;lt;&amp;lt; X &amp;lt;&amp;lt; &amp;#34;+\n&amp;#34;; 19 return 0; 20}  B.</description>
    </item>
    
    <item>
      <title>交大資工轉系經驗</title>
      <link>https://luke2336.github.io/p/transfer/</link>
      <pubDate>Sat, 21 Aug 2021 20:31:26 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/transfer/</guid>
      <description>原因  因為不想修原系的電子學和電子實驗。 在三上時決定要轉系，三下就修資工的課為主。 看到下一屆的修業規定較適合自己，不用修計網概、編譯器、微處理機等等，於是決定降轉。 自己的成績滿足提畢需求，因此降轉不影響畢業。  準備  上機考前三名。 平均成績高於 85 分，系排 25~50%。 自傳及動機著重在自己不適合原系，強調自己能準時畢業（差 4 門專業選修即符合畢業標準）。 有利資料為選出自己專業科目的優異成績及演算法競賽成績。  審查標準  轉系名額上限為教育部核定名額的兩成 第一志願必須為資工系，操行須在82分以上。 申請文件  歷年成績單（含排名） 自傳及轉系動機說明（兩頁內） 其他有利審查之資料   就學業成績、上機考成績、重點科目（如：計算機概論、基礎程式設計、微積分等）與課外競賽表現擇優錄取。  心得  這屆資工和電機收的名額都很多，但建議還是要將專業科目修到 80 分以上，且上機考有基本的分數，證明自己能適應資工系。 因為原系有選課權，所以才會已經修了很多課，不至於延畢。 等待的時間很焦慮，因為突然發現電機系不開英文班的電子學和實驗，於是無法用原系的修業規定畢業，需要提出申訴之類的手段。  </description>
    </item>
    
    <item>
      <title>Chrome Themes 推薦</title>
      <link>https://luke2336.github.io/p/chromethemes/</link>
      <pubDate>Sun, 01 Aug 2021 16:25:52 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/chromethemes/</guid>
      <description> Floksiki  黃綠的配色很好看！   Momentum  Plugin，每天會換一張風景照，覺得很有趣。    </description>
    </item>
    
    <item>
      <title>Google Internship Application</title>
      <link>https://luke2336.github.io/p/google-intern-apply/</link>
      <pubDate>Fri, 07 May 2021 14:49:37 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/google-intern-apply/</guid>
      <description>因為沒有找內推，所以整個過程非常漫長。因為 12 月在忙交換的申請，所以就直接拿上一個年度的履歷去投。原本等到 2 月沒下文，以為不會上了，但開學時卻突然收到面試通知。面試算是裸考，沒有準備，幸好是中文面試，兩場連續。因為第一場 HR 弄反連結，於是有點 Delay 到第二場，所以兩場都有點緊張，於是表現的並沒有很好。覺得自己去年面得比較好，但不幸因為疫情被取消。原本以為無望時，3 月底又接到 HR 的通知，說 4 月底開始 team match。之後超怕 match 不到 team，但這幾天終於接到通知了。福利比想像中高，因為疫情也可以選擇 remote 或 on-site，還有不少津貼。
因為我完全沒有準備，所以沒辦法寫一篇「第一次面試就上手」。全都是靠打比賽的知識撐場，平常和隊友討論的習慣算是有稍微發揮到吧。
謠傳說，履歷愈早丟，被面試到的機會愈高，後面的日程也比較不會被卡到。
日程表    Date Status     2020/12/16 Invitation Mail   2020/12/17 Summit Resume   2021/02/23 Interview Information   2021/03/03 2 Online Interview   2021/03/11 Hiring Committee Information Form   2021/03/24 Hiring Committee Approved   2021/05/06 Team Match Result &amp;amp; Offer Get    需要的資料  English Resume 1 Page Transcript  </description>
    </item>
    
    <item>
      <title>大學是不是職業訓練所？</title>
      <link>https://luke2336.github.io/p/pedagogy-report/</link>
      <pubDate>Wed, 14 Apr 2021 19:25:34 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/pedagogy-report/</guid>
      <description>以下是我寫的教育學概論期中報告，想說既然寫了，也順便放上來。
這次作業有兩種選項，一種是寫參考書籍的閱讀報告，另一種是寫「我所關心的教育議題」，我選了後者撰寫。字數限制是 2000~2500 字，我寫了 2100 字。
因為是通識報告，所以寫的時候並不想只針對自己的科系去舉例，但最後還是有點針對電機資訊相關科系。寫這份報告除了是作業以外，也是在認真思考為什麼現在的制度，大部分的人都有所抱怨。
這個標題是參考之前網路新聞的標題。
 大學是不是職業訓練所？ 在資工系，我常常聽到同學們抱怨說，「線性代數、微積分、自動機語言等數學課對於未來沒有太大的幫助」「作業都是手寫證明導致就業時都拿不出像樣的作品集」「讀大學只是為了學歷，平常應該多接 case和做 side project，不應該把時間花在考試和寫作業」。這些言論讓我開始思考了一個問題「工程學院只是為了培養業界需要的工程師嗎？」而這個問題可以延伸到「大學是不是職業訓練所？」以及「大學能不能作為職業訓練所？」
如果以政治學的角度來看，「大學等同職業訓練所」誰可以獲利，很明顯的，業界能將訓練員工的成本轉嫁到所有納稅人身上，也能更方便的挑選需要的員工；而利益損失的則有學界以及想往學界發展的學生。由這個角度，我想探討究竟是什麼原因讓台灣的大學漸漸變得像職業訓練所，還有我認為哪些是大學應提供的基本能力及大學的社會責任。
首先，誰真正決定了大學的走向？我認為既不是政府，也不是企業家，而是填志願的學生。像是醫藥、電機、資工、法律等第一志願，都是學生們以就業後的薪水做考量做出的決定，像是數學、哲學、中文、社會學等系，則基於出路的原因較不受歡迎，由此可見，多數人認為大學的科系和未來就業的選擇高度相關。
再者，為什麼高等教育無法和技職教育獨立並行呢？我認為這受到台灣的社會觀念影響，受過大學、碩士教育的薪水普遍較高，導致多數人認為唸大學是必須的。當大學生們普遍為了文憑而唸大學時，大學就需要去最大化所有大學生的利益，也就是它需要去維護文憑的價值。文憑價值的評量又牽扯到了企業對於那間大學人才的評量，因此最後導致大學需要培養企業需要的人才。
我認為這會導致一些嚴重的教育議題，大學的課程都是為了培養企業所需的人才而設計的，而不是為了讓學生有獨立思考、發現問題、解決問題等能力，那再過幾代，是不是研究會漸漸枯竭，技術會達到極限，或是沒有足夠多的人才被培養成能傳播知識的人。那假設產業結構出現變化，其他產業興起，過去培養的人是不是都無能去跟上時代呢？
除此之外，我常聽到同學們抱怨說「學校在教的技術早就退流行了，完全派不上用場」。是的，假若學校都是在教技術，而不是創造技術的基本功或是基礎推理能力，學生們無法舉一反三，那他們學到的知識就永遠停留在他們的二十歲，但他們的下半輩子顯然不能只靠那些知識生活，因此培養自學能力是必須的，像是如何尋找需要的資料，如何檢驗資料的正確性，如何將已經會的知識應用在遇到的問題上，這些都是我認為大學應該培養的技能。
綜合以上幾點後，我們可以思考，對於只渴望學習就業相關技術的人，大學能帶給他哪些文憑以外的收穫，是否能透過在業界的實務經驗來達到更有效率的學習。以下，我想說明大學其實並不是一個好的職業訓練環境。
仔細檢視我們的大學制度，假設要四年畢業，一個學期需要修 16 學分，而對於每一個學分，上課、複習、寫作業的時間，平均需要花三小時，再加上體育課或導師時間等零學分的課程，少說一週要花 50 小時上課和讀書，也就是平均一天要花到 8 小時。但請注意到，以上僅僅是完成基本的教師要求，也就是根本就沒有多餘的時間，去針對自己有興趣的部分深入的研究。因此，期待大學生有自主學習甚至研究的能力，其實是不可能的。另外，以大學部的課程來說，扣掉加退選、考試，一門三學分的課，實際一學期也就 45 小時，是無法培養學生的實務能力的。舉例來說，以程式設計課程為例，教師往往是出作業，然後讓學生回去做，然後交完作業後，並不會告訴學生可以怎樣改進等等。反之，在業界，員工只需要專研他負責的部分，而能體驗完整去將一個主題做到最優的情況，不是像在學校裡，必須去最大化所有科目的分數總和，而犧牲了試著去將學習做到最好的機會。在業界，實務的成果也是會受到客戶較多檢驗及要求的，能實際理解怎樣的能力是業界真正需要的。
總結上段所敘述的幾點，我認為大學中的學習，對於只是想要在業界生存的人其實是沒效率的，他想在大學中獲得的技術，在業界能更有效率地取得並檢驗學習成果。因此，這些人與其抱怨，xx課是他們未來工作不需要學習的，不如說，他們對大學本身的期待是不切實際的，大學不應該被期待是個好的職業訓練所。
最後，我想提出幾點在大學制度中，受到「職業訓練」這個概念影響的缺陷。首先，我認為「必修學分」這個制度其實是可以被討論的，當我詢問系上教授我們為何需要修必修時，他給我的回應是，xx系畢業的學生應該得學會這些。其實，反過來想，為什麼我們是強制規定學生要會這些東西，而不是讓他們去探索他們想要的生涯規劃中，他們需要哪些能力，需要如何安排自己的學習。第二點，很多科系設定「實習」為必修學分，我認為這個本意是好的，但實務上並沒有好的配套措施，像是實習生為了學分被資方剝削的新聞層出不窮，實際上沒得到學習，而只是被當作廉價勞力的新聞層出不窮。
總結我對大學與職業教育的看法，我認為大部分的大學科系不應該和職業訓練綁定，大學應該是教導學生學習的能力，由企業給予員工職業的訓練，這樣能讓人們獲得更有效率的學習，也不會被一些東拼西湊的政策影響，造成不管是想走學術或是想去業界的學生，都被強迫學習自己無興趣的東西，或是無時間學習自己更有興趣的東西，讓課堂的學習品質上升，使得教育資源能得發揮最大效益。</description>
    </item>
    
    <item>
      <title>正規語言 Lec 5 筆記</title>
      <link>https://luke2336.github.io/p/fl5/</link>
      <pubDate>Fri, 02 Apr 2021 11:43:34 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/fl5/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Heap&#39;s Algorithm</title>
      <link>https://luke2336.github.io/p/heaps_algorithm/</link>
      <pubDate>Tue, 02 Mar 2021 19:19:58 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/heaps_algorithm/</guid>
      <description> 難解問題課的一個演算法，覺得滿喜歡的。  1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3void heaps(int k, vector&amp;lt;int&amp;gt; &amp;amp;s, int n) { 4 if (k == 1) { 5 for (int i = 0; i &amp;lt; n; i++) 6 cout &amp;lt;&amp;lt; s[i] &amp;lt;&amp;lt; &amp;#34; \n&amp;#34;[i == n - 1]; 7 return; 8 } 9 for (int i = 0; i &amp;lt; k - 1; ++i) { 10 heaps(k - 1, s, n); 11 if (k &amp;amp; 1) swap(s[i], s[k - 1]); 12 else swap(s[0], s[k - 1]); 13 } 14 heaps(k - 1, s, n); 15} 16void permutation(int n) { 17 vector&amp;lt;int&amp;gt; v(n); 18 for (int i = 0; i &amp;lt; n; i++) v[i] = i; 19 heaps(n, v, n); 20} 21int main() { 22 int n; cin &amp;gt;&amp;gt; n; 23 permutation(n); 24 return 0; 25}  </description>
    </item>
    
    <item>
      <title>AtCoder Beginning Contest 192</title>
      <link>https://luke2336.github.io/p/atcoder_abc192/</link>
      <pubDate>Sat, 20 Feb 2021 21:11:32 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/atcoder_abc192/</guid>
      <description>AtCoder Beginning Contest 192 pD 被卡了很久，pF 沒靈感，只好掉分。
A. Star $$O(1)$$
1#pragma GCC optimization (&amp;#34;O3&amp;#34;) 2#include&amp;lt;bits/stdc++.h&amp;gt;3using namespace std; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 int x; cin &amp;gt;&amp;gt; x; 7 cout &amp;lt;&amp;lt; 100 - x % 100 &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;; 8 return 0; 9}  B. uNrEaDaBlE sTrInG $$O(|S|)$$
1#pragma GCC optimization (&amp;#34;O3&amp;#34;) 2#include&amp;lt;bits/stdc++.h&amp;gt;3using namespace std; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 string s; 7 cin &amp;gt;&amp;gt; s; 8 int len = s.</description>
    </item>
    
    <item>
      <title>2020 簡記</title>
      <link>https://luke2336.github.io/p/news_2020/</link>
      <pubDate>Wed, 10 Feb 2021 19:01:18 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/news_2020/</guid>
      <description>很混亂的一年，所有的事情都受到疫情影響。
國內事件    Date News     2020/01/06 蘇花改通車   2020/01/11 蔡英文當選總統   2020/01/24 陳時中擔任 CECC 指揮官   2020/01/31 北捷環狀線通車   2020/02/06 7 天 2 片口罩   2020/03/02 大學延後開學   2020/03/19 限制入境   2020/04/09 14 天 9 片口罩   2002/05/29 通姦除罪化釋憲   2002/05/31 敦南誠品熄燈   2020/06/06 罷免高雄市長韓國瑜、議長跳樓   2020/07/01 5G   2020/07/30 前總統李登輝過世   2020/08/28 宣布萊豬進口   2020/11/07 清大前校長劉炯朗過世   2020/12/12 中天關台   2020/12/12 北一女校慶聊天擺攤事件   2020/12/25 民法下修 18 歲成年三讀通過   2021/01/20 部桃事件   2021/02/01 陽明交大合校   2021/02/06 高雄市議員黃捷罷免案   2021/02/09 趙少康宣布代表國民黨參選總統     交大學聯會於罷韓時的「返鄉專車」具政治立場，我認為不妥。 2020 這波韓流令人感慨台灣新聞媒體的力量，媒體能造神，也能把一個人轟下台，台灣的民意主要還是靠媒體炒作，還有靠網民帶風向。  國外新聞    Date News     2019/12/30 李文亮對華南海鮮市場疫情發出警告   2020/01/08 烏航於伊朗空域解體   2020/01/22 武漢封城   2020/01/31 英國正式脫歐   2020/02/04 公主號停靠橫濱   2020/02/11 WHO 命名 Covid 19   2020/02/20 韓國新天地教會事件   2020/03/24 東京奧運宣布停辦   2020/04/05 英國女王發布演說   2020/04/16 日本發布緊急事態   2020/06/30 香港國安法正式生效   2020/08/04 黎巴嫩港口爆炸   2020/11/03 美國大選，拜登獲勝   2021/01/20 拜登就任   2021/01/27 華爾街 Gamestop 散戶事件   2021/02/01 緬甸政變     香港議題在台灣大選後就被國內媒體淡化。 美中衝突不斷擴大，華為等中國企業被封殺。 美國大選爭議很多。  </description>
    </item>
    
    <item>
      <title>TIOJ 1214 樹同構</title>
      <link>https://luke2336.github.io/p/tioj1214/</link>
      <pubDate>Mon, 08 Feb 2021 20:36:05 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/tioj1214/</guid>
      <description>ICPC 2020 Taipei 出了一題水母圖的同構，於是今天找了這題樹同構練習，採用括號字串的方法，而不是 Hashing。
 水母圖  對於環上每個點當 root 去生出樹字串。 串接起來後，用環狀字串的演算法去比較。    TIOJ 1214 - 樹論 之 樹同構測試 $$O(|G|^2 \log \Delta(G)) = O(n^2 \log n)$$
 n ≤ 100。給定兩棵樹的邊，問他們是否同構 &amp;ldquo;isomorphic&amp;rdquo; 先 DFS 找出所有的樹重心（最多 2 個）。樹重心的定義為，最大子樹大小最小的點。 從重心開始做 DFS，將每個點用 () 表示，中間夾括入他所有子樹字串，將他們排序後加入。每次排序為度數個，所以總共需要排序 deg - 1 個，所有點加起來為 n 個，再乘上字串比較的複雜度 O(n)。 最後再將重心們的字串排序後串接，比較兩棵樹是否相同。  1#pragma GCC optimization (&amp;#34;O3&amp;#34;) 2#include&amp;lt;bits/stdc++.h&amp;gt;3using namespace std; 4#define pb push_back 5int n; 6int dfs(int u, int p, int &amp;amp;mi, vector&amp;lt;vector&amp;lt;int&amp;gt; &amp;gt; &amp;amp;G, vector&amp;lt;int&amp;gt; &amp;amp;ret) { 7 int cnt = 0, mx = 0; 8 for (int uu : G[u]) { 9 if (uu == p) continue; 10 int r = dfs(uu, u, mi, G, ret); 11 mx = max(mx, r), cnt += r; 12 } 13 mx = max(mx, n - cnt - 1); 14 if (mx &amp;lt;= mi) { 15 if (mx &amp;lt; mi) ret.</description>
    </item>
    
    <item>
      <title>MacOS Command Line Note</title>
      <link>https://luke2336.github.io/p/mac_cmd/</link>
      <pubDate>Sun, 07 Feb 2021 14:08:22 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/mac_cmd/</guid>
      <description>常用指令    command 用途     clear clear terminal window   ls list directory content   ls -a 將隱藏檔案也列出   cd change directory to home   cd .. change directory to parent   cd - change directory to last working directory   cd / change directory to root   pwd print working directory   rm file_name remove file   mkdir dir_name make directory   rmdir dir_name remove directory   rm -R dir_name remove the directory and all files in the directory   cp -R A B 將 A 資料夾的東西全部複製到 B   mv A dir_name 將 A 搬到資料夾   cat file_name 查看內容   grep text file_name 抓取內容    </description>
    </item>
    
    <item>
      <title>Longest Common Increasing Subsequence(LCIS)</title>
      <link>https://luke2336.github.io/p/lcis/</link>
      <pubDate>Fri, 29 Jan 2021 12:05:24 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/lcis/</guid>
      <description>Codeforces 10 D. LCIS dp[i][j] 為 a[1&amp;hellip;i], b[1&amp;hellip;j] 結尾為 b[j] 的 LCIS 的長度。
$$dp_{i, j} := \begin{cases} \max_{p &amp;lt; j, b_{p} &amp;lt; b_{j}} dp_{i - 1, p} + 1 &amp;amp;, a_{i} = b_{j} \\ dp_{i - 1, j} &amp;amp;, \text{otherwise}. \end{cases}$$
複雜度：O(nm)，n, m 為兩序列長度。
1#pragma GCC optimization (&amp;#34;O3&amp;#34;) 2#include&amp;lt;bits/stdc++.h&amp;gt;3using namespace std; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 // INPUT 7 int L[2]; 8 vector&amp;lt;int&amp;gt; v[2]; 9 for (int i = 0; i &amp;lt; 2; i++) { 10 cin &amp;gt;&amp;gt; L[i]; 11 v[i].</description>
    </item>
    
    <item>
      <title>AtCoder Beginners Selection</title>
      <link>https://luke2336.github.io/p/atcoder_abs/</link>
      <pubDate>Tue, 19 Jan 2021 17:00:49 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/atcoder_abs/</guid>
      <description>AtCoder Beginners Selection 用 AtCoder 的水題來練習 Kotlin 的基礎語法。
PracticeA - Welcome to AtCoder 1private fun readLn() = readLine()!! 2private fun readInt() = readLn().toInt() 3private fun readStrings() = readLn().split(&amp;#34; &amp;#34;) 4private fun readInts() = readStrings().map { it.toInt() } 5 6fun main() { 7 val a = readInt() 8 val(b, c) = readInts() 9 val s = readLn() 10 println(&amp;#34;${a + b + c}$s&amp;#34;) 11} ABC086A - Product 1private fun readLn() = readLine()!</description>
    </item>
    
    <item>
      <title>清大梅園</title>
      <link>https://luke2336.github.io/p/plum/</link>
      <pubDate>Fri, 15 Jan 2021 10:34:07 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/plum/</guid>
      <description>清華踏青 天氣很好，於是就搭小紅巴出去走走。
第二招待所 去二招吃印度料理，被老闆娘說很久沒看到我，今天生意相對比較好的樣子。
梅園 第一次在梅花開的時候過去，上次去是秋天某次滿月和電資系羽的一個學長去夜遊。梅花開的很茂盛，賞花的人也絡繹不絕，剛剛在二招吃飯的一桌老人們也在這邊。有很多蜜蜂在採蜜，有一株有結了三顆梅子，看起來很好吃。
相思湖 蝴蝶園 台積館 發現了一條蝴蝶園通往台積館的小徑，就從南大門走回交大，然後在石園發現了三隻五色鳥。之後買了蛋捲冰淇淋就回宿舍休息了。</description>
    </item>
    
    <item>
      <title>AtCoder Regular Contest 111</title>
      <link>https://luke2336.github.io/p/atcoder_arc111/</link>
      <pubDate>Sat, 09 Jan 2021 22:03:11 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/atcoder_arc111/</guid>
      <description>因為 pA 卡住，所以慘慘的 QAQ
掉了 31 分到 1685。
AtCoder Regular Contest 111 A. Simple Math 2 題意 $$1 \leq n \leq 10^{18}, 1 \leq m \leq 10^4, \text{find }\lfloor \frac{10^n}{m}\rfloor \mod m.$$
解法  求 (10 ** n) % (m * m) // m。 紀錄餘數的循環節。 卡題原因：  忘記循環不一定從一開始。 用了 unordered_map 判斷餘數是否出現過導致 TLE，換成 array 就變很快了。    Code 1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long ll; 4#define pb push_back 5int s[100000008]; 6int main() { 7 ll n, m, mm; 8 cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m; 9 mm = m * m; 10 ll r, d = 1; 11 vector&amp;lt;int&amp;gt; v; // 紀錄餘數 12 for (int i = 0; i &amp;lt;= n; i++) { 13 r = d % mm; 14 if (s[r] || (i &amp;amp;&amp;amp; r == v[0])) break; 15 s[r] = i; 16 v.</description>
    </item>
    
    <item>
      <title>AtCoder Educational DP Contest</title>
      <link>https://luke2336.github.io/p/atcoder_education_dp/</link>
      <pubDate>Mon, 04 Jan 2021 11:59:31 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/atcoder_education_dp/</guid>
      <description>AtCoder Educational DP Contest  [於 Feb, 2020 完成]
這套從簡到難的 DP 題組，有不少經典題，很適合照順序刷。 開始刷了之後，才發現自己實力的不足，有幾題想了很久還是想不出來，只好去翻別人的解答。刷完發現 code 都不長，狀態也不難列，但轉移式都要想很久。
 A. Frog 1 1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3int main() { 4 int N; scanf(&amp;#34;%d&amp;#34;, &amp;amp;N); 5 int dp[2] = {}, a[2] = {}; 6 scanf(&amp;#34;%d%d&amp;#34;, &amp;amp;a[1], &amp;amp;a[0]); 7 dp[0] = abs(a[1] - a[0]); 8 for (int i = 3; i &amp;lt;= N; i++) { 9 int x; scanf(&amp;#34;%d&amp;#34;,&amp;amp;x); 10 dp[i % 2] = min(dp[i % 2] + abs(x - a[i % 2]), 11 dp[(i + 1) % 2] + abs(x - a[(i + 1) % 2])); 12 a[i % 2] = x; 13 } 14 printf(&amp;#34;%d\n&amp;#34;, dp[N % 2]); 15 return 0; 16}  B.</description>
    </item>
    
    <item>
      <title>記 2020</title>
      <link>https://luke2336.github.io/p/2020/</link>
      <pubDate>Thu, 31 Dec 2020 06:37:15 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/2020/</guid>
      <description>十一月 Blog  用 hugo 架了新的 Blog。  ICPC 報帳  幫 Hyperbola 處理了報帳的事情。  十二月  選課。 某天練完題後，去吃了和味。 電路學的期末專題有點隨便地做完了。 久違的和學長去風雲四樓吃了飯。 用三倍券買了第一雙羽球鞋。 PCCA 試著改了練習方式，每 30 分鐘一輪，換一次隊友解題。 寫交換的備審資料。 和學長第一次去蒙民偉樓四樓吃甜點喝茶。 回去北一參加校慶。 北一女校慶擺攤事件  倫子老師的貼文   開始用 Toggl 這款 APP 計時。 聖誕節悅庭來找我玩，送了我瑪露連。 家教的學生有其他事要做，於是我就失業了。 認識語言的報告寫完，中午就交出去了，傍晚便收到評語，得到了 94 分，覺得很開心，因為有幾個問題被認為提得不錯，主要是對於演化的部分。 在資電館 124 跨年。  </description>
    </item>
    
    <item>
      <title>電路學第 14 章</title>
      <link>https://luke2336.github.io/p/circuit_ch14/</link>
      <pubDate>Wed, 30 Dec 2020 15:29:08 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/circuit_ch14/</guid>
      <description>CH14 這章用 Frequency Domain 來討論電路學，主要的重點有以下幾個：
 Frequency &amp;amp; Magnitude Responce Bode Plots Resonance, Half-Power Freq., Quality Factor Filter: Lowpass, Highpass, Bandpass, Bandstop Magnitude &amp;amp; Frequency Scaling  </description>
    </item>
    
    <item>
      <title>OS CH5 複習</title>
      <link>https://luke2336.github.io/p/os_ch5/</link>
      <pubDate>Mon, 28 Dec 2020 14:40:40 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/os_ch5/</guid>
      <description>CH5 - Process Synchronization The Critical-Section Problem 有些資源只能同時被一個 process 使用。
do { entry_section(); // critical section  exit_section(); // remainder section while (true);  Mutual Excusion Progress (Freedom from Deadlock) Bounded Wait (Freedom from Starvation)   preemptive: 資源被使用時可以被打斷 non-preemptive  Peterson&amp;rsquo;s Solution class PetersonLock { // shared var.  bool flag[2]; int victim; public: void lock() { int i = ThreadID.get(); int j = 1 - i; flag[i] = true; victim = i; while (flag[j] &amp;amp;&amp;amp; victim == i); } void unlock() { int i = ThreadID.</description>
    </item>
    
    <item>
      <title>德文（一）筆記</title>
      <link>https://luke2336.github.io/p/german1/</link>
      <pubDate>Mon, 28 Dec 2020 10:19:18 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/german1/</guid>
      <description>方向 / 方位    中文 German     上 über   下 unter   左 links   右 rechts       中文 German     東 der Osten   西 der Westen   南 der Süden   北 der Norden     Berlin liegt im Osten von Deutschland. in die Mitte  數字用法    Zahlen German Zahlen German Zahlen German     0 null 10 zehn 20 zwanzig   1 eins 11 elf 21 einundzwanzig   2 zwei 12 zwölf     3 drei 13 dreizehn     4 vier 14 vierzehn     5 fünf 15 fünfzehn     6 sechs 16 sechzehn     7 sieben 17 siebzehn     8 acht 18 achtzehn     9 neun 19 neunzehn         Zahlen German     20 zwanzig   30 dreißig   40 vierzig   50 fünfzig   60 sechzig   70 siebzig   100 (ein)hundert   101 hunderteins   1.</description>
    </item>
    
    <item>
      <title>認識語言 期末報告</title>
      <link>https://luke2336.github.io/p/understanding_language_final_report/</link>
      <pubDate>Mon, 28 Dec 2020 10:09:29 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/understanding_language_final_report/</guid>
      <description>「認識語言」期末報告 以下介紹五個我在「認識語言」下半學期學到的重點。
1. Chomsky 和行為主義 (Behaviorism) 的對立 語言的學習是後天的 (nurutre)，還是天生就有的 (nuture) 學習能力？
行為主義興起的背景，要從佛洛伊德的時代開始談起，當時心理學是立足於潛意識等無法觀測的東西，因此很多科學家無法認同心理學屬於科學的一支。
在 Parlov、Skinner 和 Waston 等人的努力下，產生了行為主義學派。他們透過設計實驗來研究人或動物的行為模式，像是古典制約的實驗中，Parlov 的狗被制約，每次接收到搖鈴刺激 (stimulus)，就會不由自主的流口水。而 Skinner 進一步提出了操作制約，透過食物來讓老鼠自己學會按開關。
行為主義者宣稱，他們可透過制約，也就是給予 positive/negative reforcement，使人類學習，這屬於 stimulus-response learning。他們認為母語的學習也可以透過同樣的管道。
對此，Chomsky 有不同的看法，他認為語言的習得無法僅僅透過後天的經驗，先天的能力是必須的，因此他提出了 Universal Grammar。&amp;ldquo;What you know exceeds what you were taught.&amp;quot;，舉例來說，小孩子會犯一些大人不會犯的錯誤，像是 &amp;ldquo;holded&amp;rdquo;，這是他們無法透過模仿習得，可以推論出他們先天具備一些學習語言的能力，像是統計、歸納等等。
Chomsky 說明了在語言的學習上，本能和經驗都是重要的。我認為他的想法是重要且具有突破性的，因為他不只影響了語言學的發展，更對心理學造成了重大的影響，他證明了行為主義是無法解釋所有現象的，讓心理學研究慢慢走出行為主義的框架。
2. Universal Grammar (UG) Universal Grammar 是 Chomsky 的理論，為了描述所有語言的共同點。Universal Grammar 是由 principles 和 parameters 共同組成。
由於孩童學習語言的時間是有限的，且他們能得到的資訊量也是有限的，但他們能表達的語句，卻是無限的。可見，這些語句不僅僅是藉由經驗而習得，而需要藉由人類天生就有的 Universal Grammar，將得到的句子提取出一些共通的 principles。像是人們能判斷句子中的代名詞或是反身代名詞是在指誰，都是我們在學習時無法直接解釋的，這些天生就具備的能力，就是屬於 Universal Grammar。
但這些 principles 卻只能解釋語言具有共通性，而無法解釋語言的差異性，因此他在理論中加入了 parameters 的想法。
在英語中，是先表達動詞，然後才是受詞。然而，在日語中，兩者卻是相反的。又或是在英文中，我們會將 Where/Who 等疑問詞放在句子開頭，而在中文中，我們卻會任意擺放哪裡/誰/何時在句子的其他位置。這些現象無法被 principles 概括，因此我們有了 parameters。parameters 提供了孩童在學習時，能藉由聽到的資訊，將母語中沒有的 parameters 捨棄，讓他們能專注於學習母語中有的文法或發音。</description>
    </item>
    
    <item>
      <title>AtCoder Beginning Contest 186</title>
      <link>https://luke2336.github.io/p/atcoder_abc186/</link>
      <pubDate>Sat, 19 Dec 2020 22:03:36 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/atcoder_abc186/</guid>
      <description>AtCoder Beginning Contest 186 pE 讓我卡了一下，於是就掉分了。pF 想到了一個假解，浪費了不少時間。可能是因為剛打完 CF，所以狀態不好。
A. Brick 1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3int main() { 4 int n, w; cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; w; 5 cout &amp;lt;&amp;lt; n / w &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;; 6 return 0; 7}  B. Blocks on Grid 1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3int main() { 4 ios_base::sync_with_stdio(0); cin.tie(0); 5 int h, w; cin &amp;gt;&amp;gt; h &amp;gt;&amp;gt; w; 6 int sum = 0, m = 105; 7 for (int i = 0; i &amp;lt; h; i++) { 8 for (int j = 0; j &amp;lt; w; j++) { 9 int x; cin &amp;gt;&amp;gt; x; 10 sum += x; 11 m = min(m, x); 12 } 13 } 14 cout &amp;lt;&amp;lt; sum - m * h * w &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;; 15 return 0; 16}  C.</description>
    </item>
    
    <item>
      <title>Codeforces Round 691 Div. 2</title>
      <link>https://luke2336.github.io/p/cf_contest_1459/</link>
      <pubDate>Sat, 19 Dec 2020 19:07:58 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/cf_contest_1459/</guid>
      <description>Codeforces Round #691 (Div. 2) 因為 pC 找不到 bug，就一直亂丟，於是打得超爛。Rating 加了 43 到 1695。
pA. Red-Blue Shuffle 1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long ll; 4typedef pair&amp;lt;int, int&amp;gt; pii; 5#define pb push_back 6int main() { 7 ios_base::sync_with_stdio(0); cin.tie(0); 8 int T; cin &amp;gt;&amp;gt; T; 9 while (T--) { 10 int n; cin &amp;gt;&amp;gt; n; 11 string R, B; 12 cin &amp;gt;&amp;gt; R &amp;gt;&amp;gt; B; 13 int r = 0, b = 0; 14 for (int i = 0; i &amp;lt; n; i++) 15 if (R[i] &amp;gt; B[i]) r++; 16 else if (R[i] &amp;lt; B[i]) b++; 17 if (r &amp;gt; b) cout &amp;lt;&amp;lt; &amp;#34;RED\n&amp;#34;; 18 else if (r &amp;lt; b) cout &amp;lt;&amp;lt; &amp;#34;BLUE\n&amp;#34;; 19 else cout &amp;lt;&amp;lt; &amp;#34;EQUAL\n&amp;#34;; 20 } 21 return 0; 22}  pB.</description>
    </item>
    
    <item>
      <title>CPTC</title>
      <link>https://luke2336.github.io/p/cptc/</link>
      <pubDate>Wed, 16 Dec 2020 10:20:38 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/cptc/</guid>
      <description>CPTC 001    Problem Coder Topic     A Hyperbola Binary Search   B Kelly Greedy, Sort   C Hyperbola Enumerate, Prefix Sum   D Hyperbola 互動題, DP   E Kelly 數位 DP    今天難得全都 1AC。讀完題後也有迅速抓出水題，兩題都在正常速度開完。pD 被曲線通靈出來，他邊寫我邊聽 LinLee 講題目。我決定把 pE 拿去做，pC 則留給他們想。pE 算是定義好狀態就很好寫的題目，之前常在 AtCoder 看到類似的題目。
pB 1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long ll; 4int main() { 5 int n, m; 6 scanf(&amp;#34;%d%d&amp;#34;, &amp;amp;n ,&amp;amp;m); 7 vector&amp;lt;int&amp;gt; deg(n); 8 for (int i = 0; i &amp;lt; m; i++) { 9 int a, b; 10 scanf(&amp;#34;%d%d&amp;#34;, &amp;amp;a, &amp;amp;b); 11 deg[a-1]++, deg[b-1]++; 12 } 13 vector&amp;lt;int&amp;gt; h(n); 14 for (int i = 0; i &amp;lt; n; i++) 15 scanf(&amp;#34;%d&amp;#34;, &amp;amp;h[i]); 16 sort(h.</description>
    </item>
    
    <item>
      <title>有向圖找負環 (Negative-Cycle)</title>
      <link>https://luke2336.github.io/p/negative_cycle/</link>
      <pubDate>Sat, 05 Dec 2020 22:36:18 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/negative_cycle/</guid>
      <description>CSES - 1197 - Cycle Finding  卡車說可以從一個假點開始做 SSSP，也就是將所有點的距離都先設成 0。 我的寫法複雜度看起來不好，感覺假解了，但想不到該怎麼改，可能會 TLE。 想了一個確定複雜度是 O(VE) 的解，將整張圖做 SCC，形成一個 DAG，從每個 in-degree 為 0 的 SCC 選一個點做 DFS。  1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long ll; 4typedef pair&amp;lt;int, ll&amp;gt; pii; 5#define pb push_back 6vector&amp;lt;int&amp;gt; ans; 7vector&amp;lt;vector&amp;lt;pii&amp;gt;&amp;gt; G; 8vector&amp;lt;bool&amp;gt; visit; 9vector&amp;lt;bool&amp;gt; use; 10vector&amp;lt;ll&amp;gt; dis; 11int dfs(int v) { 12 use[v] = visit[v] = true, ans.pb(v); 13 for (pii e : G[v]) { 14 int u = e.</description>
    </item>
    
    <item>
      <title>Codeforces GYM 100274</title>
      <link>https://luke2336.github.io/p/cf_gym_100274/</link>
      <pubDate>Thu, 03 Dec 2020 23:56:03 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/cf_gym_100274/</guid>
      <description>CF-GYM100274 pA  問題：2 &amp;lt;= n &amp;lt;= 1e18，2 &amp;lt;= k &amp;lt;= 1e12，求 n! 是 k 的幾次方。 作法：將 k 做質因數分解，然後各自算出次方數後，再取最小值。 時間：$$O(\log n \sqrt k)$$  1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long ll; 4typedef pair&amp;lt;ll, int&amp;gt; pli; 5vector&amp;lt;pli&amp;gt; prime_factor (ll k) { 6 vector&amp;lt;pli&amp;gt; ret; 7 for (ll i = 2; i * i &amp;lt;= k; i++) { 8 if (k % i) continue; 9 pli p = pli(i, 0); 10 while (k % i == 0) k /= i, p.</description>
    </item>
    
    <item>
      <title>Codeforces Round #615 (Div. 3)</title>
      <link>https://luke2336.github.io/p/cf_contest_1294/</link>
      <pubDate>Fri, 24 Jan 2020 11:26:38 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/cf_contest_1294/</guid>
      <description>Codeforces Round #615 (Div. 3) 第一次 CF 賽中破台，排名 +178，總算 1700 了。 pD 稍微想了一下子，pE 實作上卡了很久，有些邊界問題沒考慮清楚。pF 想了一下子才發現很好寫，但忘了考慮一直鏈的情況，所以 WA 了一次。
A. Collecting Coins 1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3typedef long long LL; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 int t; cin &amp;gt;&amp;gt; t; 7 while (t--) { 8 LL a, b, c, n; 9 cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b &amp;gt;&amp;gt; c &amp;gt;&amp;gt; n; 10 LL sum = n + a + b + c; 11 if (sum % 3) { 12 cout &amp;lt;&amp;lt; &amp;#34;NO\n&amp;#34;; 13 continue; 14 } 15 sum /= 3; 16 if (sum &amp;lt; a || sum &amp;lt; b || sum &amp;lt; c) { 17 cout &amp;lt;&amp;lt; &amp;#34;NO\n&amp;#34;; 18 continue; 19 } 20 cout &amp;lt;&amp;lt; &amp;#34;YES\n&amp;#34;; 21 } 22 return 0; 23}  B.</description>
    </item>
    
    <item>
      <title>2019 ICPC Yokohama Regional</title>
      <link>https://luke2336.github.io/p/icpc-yokohama/</link>
      <pubDate>Sun, 12 Jan 2020 16:13:01 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/icpc-yokohama/</guid>
      <description>這篇是遊記＋比賽紀錄，所以就寫得很零碎了。 本來就很想寫這篇，但一直拖到寒假才有空～～
為什麼去日本呢？ 因為去日本高機率會被電爆，假如要去確實不應該在我們想拿票時去。外國隊名額有限，交大只能派一隊，但剛好沒人要跟我們搶。
我亂分析了一下，日本是實作、數學、幾何題比較多，我們隊有實作大師，似乎還行。日本似乎沒有東南亞那麼多模板題，對我們這種剛開始打的菜鳥似乎比較沒那麼虧。
日本雖然沒有官方旅遊行程，但自己玩也很棒，雖然物價有點高。
行前 暑假一知道可以出國就去辦了台北辦護照，順便回北一女逛了一下。
出國前三天去旅行社弄了 48hr 的東京地鐵券。
因為懶得排行程，排行程似乎變因過多，我們決定第四天自由行，第五天去淺草逛逛。
因為我們原本想住的旅館看起來很不恰當，於是被教練說服比賽期間都跟他住商務旅館（鶴見東橫Inn）。
日本賽制是不限參考資料頁數，但我們還是決定帶彩色的 25 頁 codebook 和一本字典。
賽前有練習或討論了超過 5 年的考古。
DAY1 因為怕打太爛，比賽前不敢排旅遊行程，於是搭 18:25(+8)-22:05(+9) 的飛機。
跟教練搭計程車，所以提早了不少到機場，但因為我不到20歲，搞保險搞了好久。然後就是人生第一次搭飛機了，幸好我不是一個人出國。
我們在機場還很認真的研究考古題，上飛機後就開始研究飛機餐了，隊友超愛吃奶油。
下飛機後，領完行李後，我花了三分鐘弄了張免費網卡，詳請請參考這篇，結果最後只用了 100/500MB。
然後就搭京急去旅館睡覺了，氣溫雖然不到 15 度，但因為濕度很低，所以感覺不冷，隊友直接只穿一件 T-shirt＋超薄外套。
DAY2（測機日） 本來這天下午應該要在台灣考演算法概論上機考，有兩個選項，一個是期末算兩倍，另一個是在日本考。我們選擇在日本的 7:00-11:00 考，當作練手感。毫無意外地，小爆炸了一下。
中午在橫濱市區吃 KFC，日本的 KFC 超好吃的！
然後準時的抵達賽場，教練似乎跟日本人很熟，我們報到完他就去外交了。台大 wa&amp;hellip;123 坐在我們背後兩組，他們NPSC坐在我們左邊，真是有緣啊！
他們的系統教學示範超生動的，讓我們好想再去日本比一次。
桌子的佈局是兩張長桌，放成L型。
然後就是測機了，全部都是考古題，有幾題上飛機前看過。有一題是暴力枚舉，但我隊友不會寫遞迴枚舉，於是我只好去摸鍵盤了（鍵盤手感不錯）。
之後是自我介紹時間，事前會叫你交一頁投影片，另外還會給一本印有各隊介紹的本本，很多好玩的ascii圖。清大比我們早了幾天到日本，他們先去寶可夢樂園血拼，於是就全套寶可夢上去介紹。
牆上有先放隔天的氣球，於是知道總共有11題。有提供點心區和餐盒，於是我很認真的研究了隔天要吃什麼點心。（我們是離點心最近的位置）
晚上，教練請我們吃燒肉，牛橫膈超好吃的！然後去車站逛了超市。
DAY3（比賽日） 我雷我抱歉，我鬧鐘又設到晚上了，幸好教練發現我沒出現，就直接 morning call，不然就慘了。然後匆匆忙忙的吃了早餐，隊友也一副沒睡飽的樣子。
我們即時抵達賽場，教練忙台北站忙到快掛了，就先回去旅館休息。進去後，桌面佈局維持我們前一天調好的樣子。
比賽提早了五分鐘開始，主席倒數的好嗨好可愛。
開場就按照策略先把該抄的東西抄好，雖然他們本身很貼心的有提供一些快速編譯的指令。
然後因為日本有確定 pApB 一定是最水的，於是我們 pB 在 00:23 先AC，pA 有點卡，於是 00:32 才 AC。
然後 pH 是括號匹配，搭上刪除操作，因為我們把他想成可以用 map 或線段樹之類的弄，想的有點複雜，但感覺做得掉，就交給學弟先寫。</description>
    </item>
    
    <item>
      <title>交大 2019 年度賽</title>
      <link>https://luke2336.github.io/p/nctu_annual_contest_2019/</link>
      <pubDate>Wed, 04 Sep 2019 11:13:48 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/nctu_annual_contest_2019/</guid>
      <description>NCTU_Pusheen的第一場ICPC賽制比賽。 （角色：我、隊友H、隊友U） 好像有點太早到了，9:30開始，我們8:05就全到了。 然後就開始討論選課的事，還有推廣了「貼圖大戰」。 似乎三個人還是有點緊張，隊友U算是最淡定的一個，於是就讓他坐電腦前了。只有九隊而已，真的很怕墊底。（明明前一天的新生賽才拿第一，但就是莫名沒自信QQ）
解題 M很水，於是隊友H就用接近首殺的速度把M殺了。然後我發現K很水，然後就讓隊友U把他殺了，然後過程中順便想出了K的構造題 Ｉ，原本差點就傳了，但剛好發現範圍到10^32，於是改用python寫掉，於是K和Ｉ都拿到首殺，這時大致過了半小時。
然後，我發現F似乎是簡單的DP建表，於是就丟給隊友U寫。 因為G明顯是我不擅長的幾何題，於是丟給隊友H，隊友H就想出了一個假解，因為我懶得驗證正確性，也不覺得有其他簡單的作法，於是就丟上去讓他WA了。
E是一題矩陣題，賽中我覺得高斯消去能解，但隊友U阻止了我，提醒我高斯做出來不一定是整數。賽後這題似乎是能用高斯加一些處理弄過。
因為ABC的題序一樣，然後都沒靈感，於是就先擺著。J看得出來是DP，但以為沒這麼簡單，就擺一邊了，事後證明是個錯誤決定。
此時沒有人解出其他題目，於是就決定去開D和L。
D一開始以為是Dijkstra，後來WA了之後，證出等號成立時轉移會出事，於是我就想出了一個二分搜解，但因為複雜度卡卡的，於是繼續在Dijkstra上繞圈圈。然後在最後三十分鐘，隊友U想出了一個具體的二分搜＋BFS作法，但因為搜的東西不對，無法剪枝，於是常數太大，吃了TLE。
L大概是解出來最爽的一題，花了超過一小時。隊友H先推出大致的規律，然後我用了類似前綴和的東西，把空間和時間壓到lgN，然後交給隊友H和U寫。但賽後證實我們賽中想過本機跑分塊的作法也能喇過。
A後來有兩隊解出來，於是也稍微想了一下，猜是要建圖，但真的想不出來。
嗯，看到最後會發現我好像沒碰過鍵盤呢！！
L的題解 題目是將L到R(0~1e9)的二進位字串接起來，然後求這個字串的1和0共有幾段。例如1~5，表示成11011100101，答案為7。
隨手寫了一篇題解：2019交大年度賽pL非官方題解</description>
    </item>
    
    <item>
      <title>Zerojudge a813 - 城市觀測</title>
      <link>https://luke2336.github.io/p/zj_a813/</link>
      <pubDate>Tue, 07 Aug 2018 09:52:33 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/zj_a813/</guid>
      <description>此篇是從舊 Blog 搬過來。
Zerojudge a813 - 4. 城市觀測 題目敘述 有 N 棟房子。對於任意 AB 兩棟房子，只要 AB 中間沒有房子的高度超過 A 或 B，則 A 可看見 B。求 1 ~ N 每棟房子可看見的房子總數。
 測資一，0 &amp;lt; N ≤ 300，0 &amp;lt; H[i] ≤ 1e5，3/17分 測資二，0 &amp;lt; N ≤ 5000，0 &amp;lt; H[i] ≤ 1e5，3/17分 測資三，0 &amp;lt; N ≤ 1e6，0 &amp;lt; H[i] ≤ 1e9，11/17分  範例測資  N = 2，H = {1,1}，ans = 1+1 = 2 N = 3，H = {1,2,3}，ans = 1+2+1 = 4 N = 5，H = {5,2,3,4,4}，ans = 4+2+3+3+2 = 14  參考解法 「A 可看見 B」和「B 可看見 A」等價，因此只要計算一半就好了，也就是可以將問題簡化成，計算每棟房子往左看的sum x 2。</description>
    </item>
    
    <item>
      <title>UVA 106 - Fermat vs. Pythagoras</title>
      <link>https://luke2336.github.io/p/uva_106/</link>
      <pubDate>Wed, 04 Jul 2018 10:13:53 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/uva_106/</guid>
      <description>UVA 106 - Fermat vs. Pythagoras 題目敘述 輸入 N (1 ≤ N ≤ 1000000)，求X² + Y² = Z²（0 &amp;lt; X &amp;lt; Y &amp;lt; Z ≤ N）的解中
 三數互質 gcd(X, Y, Z) = 1 的解有幾組 １ ~ Ｎ 中有幾個正整數沒被任何一組解包含  解法 原本想枚舉 Y 和 Z，但時間上會是 10¹¹ 等級，顯然不是一個好方法。
這時，突然想到了「畢式三元數」(Pythagorean triple)，畢竟每次數學培訓上數論都會講到，前幾天翻數學競賽的書也剛好看到，不過似乎只針對「互質畢式三元數」討論而已。
 「互質畢式三元數」性質如下：
X, Y, Z ∈ 𝚴，X² + Y² ＝ Z² 且 gcd(X, Y, Z) = 1，則可表示為
 X = m² - n² Y = 2mn Z = m² + n²  其中 m &amp;gt; n，gcd(m, n) = 1，m, n 為一奇一偶。</description>
    </item>
    
    <item>
      <title>2018 資訊之芽 算法班 心得</title>
      <link>https://luke2336.github.io/p/sprout-2018/</link>
      <pubDate>Mon, 02 Jul 2018 11:33:59 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/sprout-2018/</guid>
      <description>為什麼會去資芽？ 會知道這個好活動真心感謝學校的老師和學姊宣傳XD
第一次參加台大的資芽是在高一下時，那時是參加 python 語法班，原本也有想報名算法班，但是報名門檻有要寫題目，我好像離門檻還差半題的分數。但說真的，語法班的二階就已經讓忙碌的小高一吃不消了&amp;hellip;&amp;hellip;
高二沒去資芽則是因為入芽考的時間剛好撞到社團寒訓。
高三想說學測考得沒有很糟糕，六日也沒什麼事，就把握最後的機會報名了。
資芽的內容 建議直接去 google 課程網比較清楚。
課程形式 先在家看影片預習（1 ~ 1.5 hr），上課時討論及補充細節及更深的技巧，回家寫手寫作業（1 ~ 2 hr）和上機作業（3 ~ 5 題 + 1 ~ 2 題加分題，2 ~ 3 hr）。總之，每週在家至少要花4小時，但花到8小時也不是不可能。
課程內容 大致上分成兩階段，第一階段其實不算太困難，有基本的資料結構（stack、queue、linked list、heap）、複雜度、圖論（tree、DFS、BFS）、Greedy、Binary search、Divide &amp;amp; Conquer、DP。 第二階段，每年的內容都不太一樣，固定會有的主題是 DP，其他主題有線段樹、字串匹配（KMP、Trie、Hash、Z-value&amp;hellip;&amp;hellip;）、shortest path。大部分都是我有聽過但不太敢碰的主題，但既然都花時間來了，就硬著頭皮學吧！反正總有一天要面對。個人是認為難度真的比一階難很多（其實一階結束就已經有 1/3 的人退了）。
手寫作業 我覺得內容很廣泛，但大多是課程相關和一些常用到的知識，例如 hash、disjoint-set、NP-complete，有很大一部分都是證明題，需要一些數學或是強大的構造靈感，我到後面好像有點混，都在亂寫，一階時也是靠平安的幫忙。
上機作業 每週 3 ~ 5 題，另外還有 1 ~ 2 題的加分題。有一半會是講過的範例，但還是有點難度。不會寫就去用FB私訊講師，他們人都不錯，而且提示都給得剛剛好，不會破壞你想題目的機會。
課堂討論 這是我最喜歡資芽的原因，討論的過程可以讓你練習把自己的想法講得讓別人聽得懂，過程中和別人互相確認想法發現彼此的 bug，確認自己有真的聽懂，也能聽到很多不錯的想法。但我覺得大家好像都不太會主動找不熟的人討論，算是美中不足之處。
兩次認證考 都是 3 小時 5 題，我覺得和上課教的東西相關性高但難度卻很高，建議盡量多拿部份分，我自己是兩次都拿不到 100 分（滿分500），但我認為拿 250 分左右是有機會的。
歡樂團體賽 三個人一組，我跟裘莉和哆啦一組。7 題裡面，我們寫了 5 題。題目跟課程內容不太相關，我覺得裘莉很可憐，丟給他的題目都是不太好寫的題目。哆啦更可憐，她寫出來卻一直無法 AC，因為測試的程式出包&amp;hellip;&amp;hellip;我算是有貢獻吧，雖然其中一題其實是矇到，整個是錯的剛好沒被卡掉。歡樂的點可能是我們拿第二名吧！</description>
    </item>
    
    <item>
      <title>TOI 2018 選訓營一階 心得</title>
      <link>https://luke2336.github.io/p/toi-2018/</link>
      <pubDate>Fri, 22 Jun 2018 11:17:06 +0800</pubDate>
      
      <guid>https://luke2336.github.io/p/toi-2018/</guid>
      <description>寫這篇文其實是害怕自己某天忘了這段日子的美好回憶，那時很認真的每天寫日記，不過因為太累了，所以好像漏記了不少，就順便補上吧！
DAY 1 四點半在師大本部報到，應該是前十個到的，發現自己看起來超與眾不同。
穿著北一體育服：對！我很乖，請了公假還一早拖著行李箱上學，三點半才離開學校。南部來的早上翹課挺合理，但建中生表示他們已經請了好幾週公假了！！
唯二的女生：我比較早到，所以剛開始就放下行李，去認識一群聊得挺嗨的男生。 Yunn 到的時候，互相打量了好一會，於是我決定主動去認識她，這選擇真的太對了，她其實不太怕生 XD
沒帶大鍵盤：哇！大家除了筆電外都帶著大鍵盤耶！其實我入營考測機時就被某人的鍵盤聲弄到快崩潰，所以看到一堆鍵盤真的好可怕！！
行李箱好迷你：我有第二小的行李箱，除了某遲到的人只背著書包外？
報到完，就去吃飯了～我和Yunn選了一個大桌坐。男生似乎都想離我們遠遠的，但訂的位子有限，晚來的只好跟我們坐囉！等餐等超久的，於是我這個傻瓜就開始想認識別人了，印象中，同桌的有復旦、南一中、延平*２，我對他們的評價是一群不喜歡說話的人&amp;hellip;&amp;hellip;一吃飽他們就急著問輔導員可不可以先回房間。隔壁桌則比較歡樂，開心的打程式，應該是老朋友了！
回房間後，我猜我是最早睡的，九點多就先睡了～（Yunn 認真讀化學）
DAY 2 習慣性的早起，好像不到五點半吧！！
睡不著就開始打理自己，想說寫個幾題熱身，於是就抱著書和筆電出去了！這時已經開始過敏，一定是因為被窩不夠暖 QQ不知為何我居然在寫 TIOJ！逆序數對怎麼樣都寫不出來（之後資芽有這題，原來要分治！）
七點四十搭專車到分部，享用了早餐，每天都是三明治和漢堡交替，星期日吃飯糰，Yunn 真的超討厭早餐店的茶，於是之後晚點名的鋁箔包成了她的救星。
這天的課表是「Graph basics」，早上是 flow，下午上 matching，我一整天都在流鼻水，雖然大致聽得懂，但實作上我真的有點障礙，心情一整個blue。
中午到學七餐廳吃，有了北市賽的經驗，我馬上捨棄了自助餐這個選項，去吃豬排咖哩飯，90 元的餐卷真棒！！（據說從前只有 80 元，但因為去年那家店的價格是 89，釀成民怨，於是就加碼了！！但似乎有人吃自助餐吃到一百四？）
傍晚時，有人來看我&amp;hellip;&amp;hellip;（略）安慰了我很受傷的心。
晚上，自主練習&amp;hellip;&amp;hellip;八點半就放我們離開分部了。（累倒）
DAY 3 是邦一的課，開心的一天！！
早上在師大會館就遇到邦一了，Yunn 似乎早就認識他了～
早上是 greedy，下午表定是 Interval，其實參雜了不少 DP。
作業有 8 題，好像是開到星期天&amp;hellip;&amp;hellip;
先寫了一題 FCFS 排程（Greedy），然後試著寫帶權LIS，但真的寫不出來 QQ
晚上終於發了 I2A，今年特別高級，是硬殼版的！！
DAY 4 早上是自主練習，於是我就多次請教背後的 map 大神 wLIS，他救了我，超感激！還讓我認識了 map 的很多用法。其他人似乎忙著打 JOI，但我還是繼續嘗試邦一的題目，AC 了 independent tree（tree DP）、interval domination、給一堆線性函數求和的最大值（二分搜），總算跟上大部分人的進度了。
表定下午和晚上是 MST 和 Shortest Path，但香港人教授似乎聽說我們很強，於是上很快，拓樸排序、SSSP、MST、APSP，似乎上了兩小時他就走了。晚上只好變成自主練習，但我真的好累，於是就和男生們去玩拉密了（開啟耍廢狀態），但至少稍微和周柏宇和陳冠宇他們熟了一點點～</description>
    </item>
    
  </channel>
</rss>
