[{"content":" https://atcoder.jp/contests/abc237/tasks。 很早就放棄掙扎的一場。 很久沒打 ABC 了，難度似乎提升很多。  A. Not Overflow 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8int main() { 9 ios::sync_with_stdio(0), cin.tie(0); 10 ll N; 11 cin \u0026gt;\u0026gt; N; 12 ll min = -(1ll \u0026lt;\u0026lt; 31); 13 ll max = (1ll \u0026lt;\u0026lt; 31) - 1; 14 if (min \u0026lt;= N \u0026amp;\u0026amp; N \u0026lt;= max) { 15 cout \u0026lt;\u0026lt; \u0026#34;Yes\\n\u0026#34;; 16 } else { 17 cout \u0026lt;\u0026lt; \u0026#34;No\\n\u0026#34;; 18 } 19 return 0; 20}  B. Matrix Transposition 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8int main() { 9 ios::sync_with_stdio(0), cin.tie(0); 10 int H, W; 11 cin \u0026gt;\u0026gt; H \u0026gt;\u0026gt; W; 12 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; A(H, vector\u0026lt;int\u0026gt;(W)); 13 for (int i = 0; i \u0026lt; H; i++) { 14 for (int j = 0; j \u0026lt; W; j++) { 15 cin \u0026gt;\u0026gt; A[i][j]; 16 } 17 } 18 for (int i = 0; i \u0026lt; W; i++) { 19 for (int j = 0; j \u0026lt; H; j++) { 20 cout \u0026lt;\u0026lt; A[j][i] \u0026lt;\u0026lt; \u0026#34; \\n\u0026#34;[j == H - 1]; 21 } 22 } 23 return 0; 24}  C. kasaka 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8bool ispal(string s) { 9 for (int i = 0; i \u0026lt; s.length() / 2; i++) { 10 if (s[i] != s[s.length() - 1 - i]) { 11 return false; 12 } 13 } 14 return true; 15} 16 17int main() { 18 ios::sync_with_stdio(0), cin.tie(0); 19 string s; 20 cin \u0026gt;\u0026gt; s; 21 int cnt = 0; 22 for (int i = 0; s[i]; i++) { 23 if (s[i] == \u0026#39;a\u0026#39;) cnt--; 24 else break; 25 } 26 for (int i = s.length() - 1; i \u0026gt;= 0; i--) { 27 if (s[i] == \u0026#39;a\u0026#39;) cnt++; 28 else break; 29 } 30 string str = \u0026#34;\u0026#34;; 31 for (int i = cnt; i \u0026gt; 0; i--) { 32 str += \u0026#34;a\u0026#34;; 33 } 34 str += s; 35 if (ispal(str)) { 36 cout \u0026lt;\u0026lt; \u0026#34;Yes\\n\u0026#34;; 37 } else { 38 cout \u0026lt;\u0026lt; \u0026#34;No\\n\u0026#34;; 39 } 40 return 0; 41}  D. LR insertion  Linked List。  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8int main() { 9 ios::sync_with_stdio(0), cin.tie(0); 10 int N; 11 cin \u0026gt;\u0026gt; N; 12 string s; 13 cin \u0026gt;\u0026gt; s; 14 vector\u0026lt;int\u0026gt; left(N + 1, -1), right(N + 1, -1); 15 for (int i = 0; s[i]; i++) { 16 if (s[i] == \u0026#39;L\u0026#39;) { 17 left[i + 1] = left[i]; 18 if (left[i] != -1) right[left[i]] = i + 1; 19 right[i + 1] = i; 20 left[i] = i + 1; 21 } else { 22 right[i + 1] = right[i]; 23 if (right[i] != -1) left[right[i]] = i + 1; 24 left[i + 1] = i; 25 right[i] = i + 1; 26 } 27 } 28 int head = 0; 29 for (int i = 0; i \u0026lt;= N; i++) { 30 if (left[i] == -1) head = i; 31 } 32 for (int i = head; i != -1; i = right[i]) { 33 cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34; \u0026#34;; 34 } 35 return 0; 36}  E. Skiing  Dijkstra。  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;ll, int\u0026gt; pii; 6#define pb push_back 7 8#define INF 1000000000000000000ll 9 10int main() { 11 ios::sync_with_stdio(0), cin.tie(0); 12 int N, M; 13 cin \u0026gt;\u0026gt; N \u0026gt;\u0026gt; M; 14 vector\u0026lt;int\u0026gt; h(N); 15 for (int i = 0; i \u0026lt; N; i++) 16 cin \u0026gt;\u0026gt; h[i]; 17 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; edge(N); 18 for (int i = 0; i \u0026lt; M; i++) { 19 int u, v; 20 cin \u0026gt;\u0026gt; u \u0026gt;\u0026gt; v; 21 u--, v--; 22 edge[u].push_back(v); 23 edge[v].push_back(u); 24 } 25 vector\u0026lt;ll\u0026gt; dis(N, -INF); 26 ll ans = 0; 27 dis[0] = 0; 28 priority_queue\u0026lt;pii\u0026gt; pq; 29 pq.emplace(0, 0); 30 while (!pq.empty()) { 31 int u = pq.top().second; 32 pq.pop(); 33 for (int uu : edge[u]) { 34 int value; 35 if (h[u] \u0026gt;= h[uu]) { 36 value = h[u] - h[uu]; 37 } else { 38 value = 2 * (h[u] - h[uu]); 39 } 40 if (dis[u] + value \u0026gt; dis[uu]) { 41 dis[uu] = dis[u] + value; 42 pq.emplace(dis[uu], uu); 43 ans = max(dis[uu], ans); 44 } 45 } 46 } 47 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 48 return 0; 49}  ","date":"2022-01-30T20:51:14+08:00","image":"https://Luke2336.github.io/post/Other/AtCoder_ABC237/Standing.png","permalink":"https://Luke2336.github.io/p/atcoder_abc237/","title":"AtCoder Beginning Contest 237"},{"content":" 睡不著，3:30 就醒來了，然後躺到 5 點多起來吃早餐。 作業系統看到第 23 集。 用這篇文章配置了 GDB。 打了一場 AtCoder ABC237。  ","date":"2022-01-30T05:51:56+08:00","permalink":"https://Luke2336.github.io/p/20220130/","title":"2022/01/30 日記"},{"content":" 下午將 shell 從 bash 改成 zsh。 作業系統看到第 18 集。  設定 zsh 把 shell 換成 zsh chsh -s /bin/zsh\n安裝 Oh-My-Zsh sh -c \u0026quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\u0026quot;\nTerminal 顏色  改成 sublime 的底色，字型改成白色。  設定 ~/.zshrc  為了讓之前的 .bashrc 可以運作，於是要加上 source ~/.bashrc。 主題選用 gozilla。 選用了一些有趣的 plugins，例如 colored-man-pages、sublime、sudo、web-search、copydir、copyfile。 改完後記得跑 source ~/.zshrc。  source ~/.bashrc source ~/.bash_profile # If you come from bash you might have to change your $PATH. # export PATH=$HOME/bin:/usr/local/bin:$PATH # Path to your oh-my-zsh installation. export ZSH=\u0026#34;$HOME/.oh-my-zsh\u0026#34; # Set name of the theme to load --- if set to \u0026#34;random\u0026#34;, it will # load a random theme each time oh-my-zsh is loaded, in which case, # to know which specific one was loaded, run: echo $RANDOM_THEME # See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes ZSH_THEME=\u0026#34;gozilla\u0026#34; # Set list of themes to pick from when loading at random # Setting this variable when ZSH_THEME=random will cause zsh to load # a theme from this variable instead of looking in $ZSH/themes/ # If set to an empty array, this variable will have no effect. # ZSH_THEME_RANDOM_CANDIDATES=( \u0026#34;robbyrussell\u0026#34; \u0026#34;agnoster\u0026#34; ) # Uncomment the following line to use case-sensitive completion. # CASE_SENSITIVE=\u0026#34;true\u0026#34; # Uncomment the following line to use hyphen-insensitive completion. # Case-sensitive completion must be off. _ and - will be interchangeable. # HYPHEN_INSENSITIVE=\u0026#34;true\u0026#34; # Uncomment one of the following lines to change the auto-update behavior # zstyle \u0026#39;:omz:update\u0026#39; mode disabled # disable automatic updates # zstyle \u0026#39;:omz:update\u0026#39; mode auto # update automatically without asking # zstyle \u0026#39;:omz:update\u0026#39; mode reminder # just remind me to update when it\u0026#39;s time # Uncomment the following line to change how often to auto-update (in days). # zstyle \u0026#39;:omz:update\u0026#39; frequency 13 # Uncomment the following line if pasting URLs and other text is messed up. # DISABLE_MAGIC_FUNCTIONS=\u0026#34;true\u0026#34; # Uncomment the following line to disable colors in ls. # DISABLE_LS_COLORS=\u0026#34;true\u0026#34; # Uncomment the following line to disable auto-setting terminal title. # DISABLE_AUTO_TITLE=\u0026#34;true\u0026#34; # Uncomment the following line to enable command auto-correction. ENABLE_CORRECTION=\u0026#34;true\u0026#34; # Uncomment the following line to display red dots whilst waiting for completion. # You can also set it to another string to have that shown instead of the default red dots. # e.g. COMPLETION_WAITING_DOTS=\u0026#34;%F{yellow}waiting...%f\u0026#34; # Caution: this setting can cause issues with multiline prompts in zsh \u0026lt; 5.7.1 (see #5765) # COMPLETION_WAITING_DOTS=\u0026#34;true\u0026#34; # Uncomment the following line if you want to disable marking untracked files # under VCS as dirty. This makes repository status check for large repositories # much, much faster. # DISABLE_UNTRACKED_FILES_DIRTY=\u0026#34;true\u0026#34; # Uncomment the following line if you want to change the command execution time # stamp shown in the history command output. # You can set one of the optional three formats: # \u0026#34;mm/dd/yyyy\u0026#34;|\u0026#34;dd.mm.yyyy\u0026#34;|\u0026#34;yyyy-mm-dd\u0026#34; # or set a custom format using the strftime function format specifications, # see \u0026#39;man strftime\u0026#39; for details. # HIST_STAMPS=\u0026#34;mm/dd/yyyy\u0026#34; # Would you like to use another custom folder than $ZSH/custom? # ZSH_CUSTOM=/path/to/new-custom-folder # Which plugins would you like to load? # Standard plugins can be found in $ZSH/plugins/ # Custom plugins may be added to $ZSH_CUSTOM/plugins/ # Example format: plugins=(rails git textmate ruby lighthouse) # Add wisely, as too many plugins slow down shell startup. plugins=(git) plugins=(colored-man-pages) plugins=(sudo) plugins=(sublime) plugins=(web-search) plugins=(copyfile) plugins=(copydir) source $ZSH/oh-my-zsh.sh # User configuration # export MANPATH=\u0026#34;/usr/local/man:$MANPATH\u0026#34; # You may need to manually set your language environment # export LANG=en_US.UTF-8 # Preferred editor for local and remote sessions # if [[ -n $SSH_CONNECTION ]]; then # export EDITOR=\u0026#39;vim\u0026#39; # else # export EDITOR=\u0026#39;mvim\u0026#39; # fi # Compilation flags # export ARCHFLAGS=\u0026#34;-arch x86_64\u0026#34; # Set personal aliases, overriding those provided by oh-my-zsh libs, # plugins, and themes. Aliases can be placed here, though oh-my-zsh # users are encouraged to define aliases within the ZSH_CUSTOM folder. # For a full list of active aliases, run `alias`. # # Example aliases # alias zshconfig=\u0026#34;mate ~/.zshrc\u0026#34; # alias ohmyzsh=\u0026#34;mate ~/.oh-my-zsh\u0026#34; 安裝 bat  改成上色的 cat brew install bat 在 .bashrc 加入 alias cat=bat  ","date":"2022-01-29T18:00:31+08:00","image":"https://Luke2336.github.io/post/Diary/20220129/zsh.png","permalink":"https://Luke2336.github.io/p/20220129/","title":"2022/01/29 日記"},{"content":"主要是分享一下折騰三個月的轉正過程。\n 在提供 Resume 的階段，會要求提供認識的 Googler 名字（有點作為推薦人的概念）（要是 Host 和 Co-Host 以外的人）。 Recruiter 整個流程都安排得很有效率且會提醒一些注意事項，算是體驗良好。 因為暑假的 Code 量有點少，於是被加了兩場面試。 面試 Recruiter 提醒我是英文的之後，向他詢問可不可以換成中文的，於是就換成跟上海和新店辦公室的人面試。 雖然 Recruiter 建議刷一下 Leetcode，但我這半年刷不到 20 題。 通過 Hiring Committee 後，被通知之前成功的 Team Match 被取消。 原本到第四場都是 ChromeOS 的 Team，但一直失敗，於是最後就請 Recruiter 也幫忙找看看新店或板橋的 Team，所以最後就到新店的 Pixel Team。 Team Match 主要是和 Manager 聊半個小時後，雙方再向 Recruiter 確認喜不喜歡對方。 滿多場 Team Match 都被問到「對 Linux 熟不熟悉」「對 Kernel 熟不熟悉」。 因為沒有 Competing Offer，所以 Offer 就沒有討論空間了。 有聽到一些朋友是先簽 Offer 才 Team Match。 如果不是 Intern 轉正的話，聽說是至少要面試 6 回合。 Recruiter 會要求 Onboard 的日期是星期一，而且是要拿到畢業證書。  日程    Date Status     2021/09/28 收到 email 要求提供 Resume 和 Transcript   2021/10/19 Team Match 1   2021/10/20 Team Match 2   2021/10/28 Team Match 3   2021/12/08 被要求加面試 2 場   2021/12/23 Interview 1   2021/12/24 Interview 2   2022/01/18 通過 Hiring Committee   2022/01/19 Team Match 4   2022/01/25 Team Match 5   2022/01/27 Team Match 6   2022/01/28 Verbal Offer    Offer 會討論到一下幾種東西。\n Base Bonus：一個 % 數 Stack：會拆成四年 交通津貼 年假  找工作的心得  除了 Google 以外，還投了以下幾間公司，全都沒有內推。  MediaTek：無聲卡。 Synopsys：無聲卡。 Cadence：無聲卡。 Microsoft：無聲卡。 Siemens：感謝信。 Ring：OA、無聲卡。   只能說自己履歷上能看的東西只有 ICPC 的成績還有 Google 的實習經驗，沒有 side project，然後沒有碩班學歷可能也有影響。  ","date":"2022-01-28T21:26:20+08:00","permalink":"https://Luke2336.github.io/p/google-return/","title":"Google Taiwan 實習轉正"},{"content":" 傍晚和 Google 的 Recruiter 談 offer，因為沒有 competing offer，所以其實也沒有商量的餘地，主要就只有拿到 base, bonus, stack，還有一些交通津貼，不像網路上流傳的有簽約金。Onboard 的日期我挑了 7/11，不知道到時候是否已經順利畢業了？ 晚上吃了 pizza。 作業系統看到第 13 集。  ","date":"2022-01-28T14:04:26+08:00","permalink":"https://Luke2336.github.io/p/20220128/","title":"2022/01/28 日記"},{"content":" 下午是 Google 的 Team Match，這次總算成功了。  ","date":"2022-01-27T13:05:31+08:00","permalink":"https://Luke2336.github.io/p/20220127/","title":"2022/01/27 日記"},{"content":" 看到隨機演算法的成績拿了 A，看來被調了很多分。 今天作業系統看到第 10 集。 晚上買了雞排吃。  ","date":"2022-01-26T11:18:52+08:00","permalink":"https://Luke2336.github.io/p/20220126/","title":"2022/01/26 日記"},{"content":" 下午是和 Pixel Team 的 Team match talk。 把作業系統看到第 7 集。 晚上突然想吃剉冰，就去吃了雪花冰。  ","date":"2022-01-26T11:18:42+08:00","permalink":"https://Luke2336.github.io/p/20220125/","title":"2022/01/25 日記"},{"content":" 整理了清大的隨機演算法筆記放到 Github 上。 看了清大 OCW 的作業系統概論，希望過年期間能看完。覺得他們出的作業比交大的有內容。  目前看到第 5 集。   和媽媽說要留在新竹，不回去過年和參加喪事。  ","date":"2022-01-24T13:45:14+08:00","permalink":"https://Luke2336.github.io/p/20220124/","title":"2022/01/24 日記"},{"content":" 一早起來就把昨天的衣服洗掉味道。 寫修課心得。  ","date":"2022-01-23T12:55:21+08:00","permalink":"https://Luke2336.github.io/p/20220123/","title":"2022/01/23 日記"},{"content":" 一早自己一個人就搭高鐵到北車，然後換復興號到雙溪。 一直弄到晚上七點才結束今天所有的儀式。 晚上自己搭客運回新竹。  ","date":"2022-01-23T12:55:15+08:00","permalink":"https://Luke2336.github.io/p/20220122/","title":"2022/01/22 日記"},{"content":"目錄 這邊的分類不代表開課系所，只是用課的性質去歸納。\n 物理  物理（一）、（二） 物理實驗（一）、（二）   數學  微積分甲（一）、（二） 離散數學 線性代數 微分方程 訊號與系統 機率   資工  程式  計算機概論與程式設計 物件導向與資料結構 基礎程式設計（GPE）   硬體、底層  數位電路設計 數位電路實驗 計算機組織 作業系統概論   計算理論  基礎圖論 演算法概論 [清大] 隨機演算法 高等演算法 正規語言概論 隨機演算法 賽局理論及應用   其他  競技程式設計（一）、(二)、（三） 人工智慧概論 資料庫系統概論 計算方法之實務應用 數值軟體開發 資訊工程研討     電機、電子  電子學（一） 電子實驗（一） 電路學 電子設計自動化演算法與實作   通識  校基本  疾病知識與防治 幾何造型 統計方法與資料分析 認識語言   跨院  統計學   核心  政治學 教育學概論 [台大] 東亞儒家：人文精神     外文  大一英文（一） 德文（一） 德文（二） 進階英文寫作    筆記 Github\n修課建議  微積分 → 微分方程、訊號與系統 → 電路學、電子學 → 電子實驗\n微積分 → 機率 → 統計\n數位電路設計 → 數位電路實驗 → 計算機組織 → 作業系統\n離散數學、資料結構、機率 → 演算法 → GPE\n 物理 物理（一）、（二）榮譽班（英文班）  授課老師：電物系 籔下篤史 評分方式：功課 20%、期中 4 x 20% 授課方式：  每次教一個章節，平均一節半就下課放人。上課就投影片唸過，一點點公式推導而已，老師很日本腔，所以大多數人還是選擇自己念。 考試基本上是填充加計算，填充是有點配合題加背公式，百分之九十九考古，計算題半考古半作業吧，反正考古背熟就拿 A 了。 我對這門課真的沒有任何興趣，加上星期五兩節課後來都被我拿去準備專題的meeting，所以上課不是打瞌睡，就是隨便聽聽。大家分數都不錯，所以完全沒調分。很後悔沒有認真背考古題，最後分數淒慘，卻賭一把期末沒退選。下學期決定翹課看簡紋斌的 OCW 就好，加上把考古背好。 結果下學期全部翹課，只去考試。一樣很考古，但計算的比例似乎比上學期重了一些。我真的對物理沒啥興趣，就很乾脆的拿了個 B。    物理實驗（一）、（二）  完全看助教開心來給預報和結報的分數，考驗妳的 Excel 能力，來決定你哪時候下課。我覺得一學分真的投資報酬率低，但因為他會公開每次報告的分數，讓人不由自主花很多時間只為了多拿五分，所以我最後調到 A+。 下學期以光學和電學實驗為主，所以報告相對上學期的力學變得難寫。完全看助教開心來給預報和結報的分數。我期末忘記帶計算機，就爛掉了。 要注意「有效位數」！  數學 微積分甲（一）、（二）（英文班）  授課老師：應數系 符麥克 評分方式：功課 10%、期中 25%、期末 25%、大會考 30% 授課方式：  每週四 inclass homework 開書考 10 分鐘 2 題，每週 homework 課本習題 2 題、老師自己出的 4 題。 老師是奧地利人，英文帶了點德國腔，剛開始聽會超不習慣，加上他的字小且帶個人風格，上課速度很快，所以剛開始會跟不上。個人是認真的把板書抄下來，但這麼做基本上你就很難認真聽懂他在講什麼，所以抄筆記和聽課可能得取捨一下吧！最好還是課前預習一下。 他的期中是偏證明大約 7 題，期末 6 題，計算要快、觀念要熟，和偏計算的大會考真的方向不同。老師會按規定調到平均 79 左右，今年是調 3 分。 下學期計算量較多，不像上學期那麼多證明，期中考比大會考多了osculating plane的部分。大會考爆難，我算了五年的考古，還只拿70，總成績調分滿多的。感覺班上來上課的人比上學期又更少了。    離散數學  授課老師：資工系 楊武 評分方式：功課 15%、期中 40%、期末 40%、平時表現 5% 授課內容：簡單的數論（質數講很久）、集合、數學歸納法、遞迴、排組、鴿籠、Relation。 授課方式：  老師教得很隨性，上課只是抄一抄板書。 偶而會有小考十分鐘兩題，會先提醒，千萬別遲到。小考蠻過分的，不是滿分 10 分就是鴨蛋 0 分。 期中期末，三成考古，和上課內容不會差太遠，滿分超過一百，平均落在 60 左右，最高 99，基本上就是高於全班平均就能拿 A，期末調分超過 15 分。 老師偶而會一直重複上節課講過的東西，記得點醒他，不然他一直講同一型的題目進度很慢。然後他的麥克風雜音超吵，勇者請把它關小聲。個人覺得他還算是個好玩的老師，不過證明有時不太嚴謹，是小小的缺點。    線性代數（英文班）  授課老師：電控 林源倍 評分方式：平時 15%、小考 2 x 10%、期中 30%、期末 35% 上課方式：翻轉教學，回家看 OCW，上課時發作業，大約四大題，四人一組，抽籤上去用英文講解，可以找其他人的 bug 加分。是一門需要有組員 Carry 的課。助教和老師人都很好。 成績：考試大約都是七成基礎定義和計算，三成偏證明，確認是否有把線代融會貫通。認真讀書拿九十分以上不難，雖然我都粗心掉基本分（例如問 row space 我看成 col. space… ），最後就沒有拿到 A+。會調分就是了，而且線代通常對於有些人滿抽象的，所以拿高分的人並不會太多。 啟發：這門課給我的收穫算是還滿大的。首先，我們這個班主要是電資班和電機系的學生，所以算是能和系上同學多多互動，也能認識外系的機會。再來也是養成自己規劃讀書進度的習慣，看影片的速度也能慢慢修正。最後，很重要一點是，能增進用英文上台發表看法的能力，同時也會在過程中不斷練習去找同學解法的 bug。是一門規劃得很不錯的反轉教學，讓我回憶起以前去台大上資芽的過程。  微分方程（英文班）  授課老師：電機 李冕 評分方式：  12 次小考取 10 次平均 期中期末小組報告   授課方式：  不會點名。老師是義大利人，口音不算太難懂。講投影片為主，老師上課會一直點人上台做題。每週小考，一週手寫，一週 Matlab，題目都是從課本出為主，但我覺得題目選得很爛。助教雷雷的，是印度人，我們不太知道怎麼跟她溝通。 期中期末各一個專題，是 3 人小組報告，選一個數學或物理現象用微方解釋。報告會要求解釋物理和數學原理，以及用 Matlab 模擬，還有動手實作的影片，還有放幾個小笑話。期末因為我看到了「Harmonograph」這個主題很有趣，然後剛好懶得找組員，就自己做了，老師給了 100 分，不小心就對到他的胃口了。    訊號與系統（英文班）  授課老師：資工 黃敬群 評分方式：  作業 6 次 40% 期中期末各 30% 一次加分考 5%   授課內容：  LTI System Convolution Fourier Series Fourier Transform Sampling   授課方式：  很早就變成非同步線上授課了，主要是用書商的投影片上課，然後在旁邊手寫補充。 上了不少例題，上課速度偏慢，所以 Laplace 和 Z Transofrm 都沒有上到。 後來覺得自己應該去 YouTube 看陳永平的 OCW 比較有效率。   作業和考試：  作業是每個單元勾課本習題 5~10 題，我自己花了很多時間寫，常常要算 5~15 個小時。原本有說要出 Matlab 作業，但大概就只有一題而已… 考試和作業題目類型有點像，大約 5 題，但還是會有比較不一樣的題目，基本上時間很充裕，不用擔心寫不完，助教給分還算寬鬆。 總分只有調了一分，但作業分數都給很高，所以覺得會比其他班輕鬆。   附註：這是老師第一年在交大開課，因為是英授，所以不到十個人選課，之後也不會再開這門課了。老師人很好，但是我覺得教學上仍有待改進。  機率（英文班）  授課老師：電機 高榮鴻 評分方式：作業 6 次共 20%、期中期末各 40%、加分程式作業一次 授課內容：  高中範圍內容（快速帶過） Independence、Expectation、Variance、Covariance Total Probability Theorem、Bayes’ Rule、Union Bound Discrete/Continuous Random Variable、Transform（Fourier、Laplace、Linear） Markov Inequality、Chebyshev Inequality Weak Law of Large Numbers、Convergence in Probability、Central Limit Theorem Discrete-Time Markov Chain Some Matlab Simulation   授課方式：  純版書，證明定理，然後帶幾題課本例題。 個人覺得期中考前的某些東西教得有點慢，可能是因為很多時間在寫板書。 老師習慣先寫完整個黑板，然後再開始講，但通常抄完黑板後，就大概了解他要講的東西了…   作業和考試：  作業是勾課本上的，通常不到 5 題，難度中等，網路上也可以找到解答。 考試難度也不高，滿分 110，基本上看一份考古，然後稍微看一下上課和作業的題目，考到 90 很簡單。期中考班平均 72，標準差 25，但還是有約三成的人不及格。期末考班平均 77，標準差 24。良心建議考完多檢查，計算過程要寫多一點點，分數會比較好看。   附註：不知道是因為疫情，老師沒有給加簽的名額。個人對這門課沒有太多的感覺，只覺得要拿學生證簽名點名很煩，然後神奇的是考試時反而沒檢查學生證。總成績感覺是沒有調分，也完全不知道點名到底有沒有分數。  資工 - 程式 計算機概論與程式設計（英文授課）  授課老師：資工系 張永儒 Stanley 評分方式：  Lab、HW 各佔 20%，有 demo 就滿分。 期中筆試上機各 12.5%。 期末專題，書面計畫和最終書面報告各佔 8.75%，demo 佔17.5%。   授課方式：  上課都用投影片，偶爾會開 IDE 打幾行程式，但 bug 一堆。前 8 週上 C，但作業我還是偷用 C++寫，進度跳很快，我原本就會寫了所以沒認真聽，其他人大部分就 Lab 時間找大神救，投影片內容很豐富。   考試方式：  期中分為選擇和上機，選擇我們這些原本就會寫程式的人大概可以拿 90～100，滿分大約 110，可以 openbook，所以不少人印前一年的考古題，拿滿分，換句話說，完全考古嘔死你。 上機四題選三題，我是拿 95，賽後人工評測，寫不出來寫註解也有分，但那天好死不死，想提早交時當機，只好換一台重打一次，快被系計中的冷氣凍死，難度大概不當機一小時打完收工。   期末專題：  後面幾週教 python，有教到爬網站、BeautifulSoup、正規表達式等東西。 期末專題就是要用「一個爬網站 + 兩個 API」，湊出一個實用的東西。我是用 openCV，但它不用傳 key 之類的東西，導致我分數沒有預期的高，這點可以注意一下，原本有打算加臉書的 API，但它的權限真的很難搞，反正有創意、難度高、實用性都兼顧到應該分數可以到 95 以上。    物件導向與資料結構（英文班）  授課老師：資工 黃世強 評分方式：  不調分，真的有不少人被當。 Lab 10%：  基本上會前一天就放上 e3，所以大多數人都滿分   程式作業 10% x 3：  給一些老師寫好的 project 挖空，需把一些重點函式填上，主要是用 OpenGL 的方式呈現，但這部分不需要理解。 我自己寫起來大致上每次需要花 10~20 小時，通常會給一個月左右的時間完成。   期中上機 15% x 2：  可帶紙本資料，第一次需要熟悉基本的 OOP 語法，第二次需要會寫一些基礎的資料結構（BST之類的）。 第一次爆簡單，結果第二次就很難，據說第二次平均低於 40。   期末筆試 20%：  我這學期成績爆掉的主因，上機和作業都有拿到 90 以上，但忘記筆試佔很重，只考了 60 幾 QQ 除了基礎的 OOP 和資料結構外，上課有教到的檔案處理和除錯用的語法也要背。   期末上機 10%：  從三次作業去改，可從 e3 上下載作業去改，拿 100 不難。     感想：  老師是香港人，所以英文有點口音。 上課進度我有點不喜歡，前三週都在複習計概教過的東西（迴圈、陣列、指標），然後資料結構的部分，紅黑樹也只講到定義而已，前面一些基礎的資料結構都重複上好幾次，但每次都講得亂亂的，我覺得自己在上課學會的東西極少。 功課的部分算是培養我們寫大型專案的能力吧，但有些註解及說明資料寫得不夠具體，變數的名字好像讓我誤解了不少，讓我實作上花了很多時間。   附註：  上機考的部分公平性極低，出場後補交可拿到 60 分。而且抄襲應該也沒有抓得很認真。 成績往往都是好幾週後公布，有可能超過退選截止日期。 沒有筆電或沒灌 windows 建議不要修，因為功課需要用 vs，不然就得像我一樣窩在計中一整天。然後 vs 老師不知道為什麼不採用 2007 版，造成大家寫功課時花了很多時間把環境搞定。第一次作業時，我因為計中電腦無法用 vs2007 開作業的檔案花了很久嘗試，計中助教也花了幾天才把問題解決。    基礎程式設計  不用上課，只要去考 GPE。 一個學期可以考很多場，但每場有人數限制。總共 6 題，3 小時。 這門課沒有過的話，會擋修專題和一些實作類課程，所以早點考一考比較好。 有提供官方題庫，內容以 UVA 題目為主，但是測資品質普遍沒有 UVA 好。建議考前先熟悉系統，能用的語言就只有 C/C++、JAVA，沒有 Python。 難度每次有些落差。雖然只要通過 2.4 題（大概就是有一定的實作能力，拿完部分分就有的分數，不用會太多演算法或資料結構），但聽老師們建議為了讓成績單上成績好看，不要影響到升學、就業等等，就算 0 學分不列入 GPA，還是要考高一點。  資工 - 硬體、底層 數位電路設計  授課老師：資工系 范倫達 評分方式：小考20%、期中兩次25%、期末30% 授課內容：內容是課本 1～7 章，算是不需要什麼基礎知識，從邏輯二進位教到 latch、flip-flop、counter，會帶一些 verilog，但不需要上機，只要看得懂就好了。 授課方式：上課都是用投影片，上課速度時快時慢。小考和期中期末以課本題為主，有練拿 A+ 很簡單，小考是前一週的範圍。老師人很好，很愛關心學生。  數位電路實驗（英文班）  授課老師：資工 范倫達 評分方式：  Lab 10 次取 8 次 40% 期中上機 20%、期末上機 20% 期末小組專題 20%   授課方式：  不會點名。作業每週一晚上 demo，10 天前公佈。基本上上課內容以硬體架構為主，講了一些 FPGA 的東西，還有合成的過程，會有幾堂請業界的人講課，但我真心覺得聽課很無趣，且對作業幫助不大。 打分數全由 TA 負責，TA 主要是前一年的修課學生。 期中上機剛好是我高二用 Arduino 寫過的東西，所以就拿了 100 分。期末則出 UART，剛好那次Lab碰上日本比賽，所以沒寫，之後沒補，只帶了同學的模板，電腦剛好選到一台無敵爛的，就考 0 分。總之，上機跟選電腦的運氣成分有很大關聯。 FPGA 不能帶出實驗室，環境 Vivado 不支援 mac，所以每次都得去實驗室做，後來幾次幾乎都寫超過 10 小時，很崩潰。 專題最後我組員退選退光，於是我就一個人做，大概弄了 25~30 小時。期末成績因為調分有拿到A+。 板子是用 Arty，有遇過有錢的同學自己買一個玩，就不用假日窩在實驗室合成了。畢竟到後面有時候燒一次就要 20 分鐘，這時候建議多霸佔幾台電腦，這樣就可以同時跑很多版本的 code 了（應該沒有人像我一樣這樣節省時間的吧）。   課程內容：  Lab1 乘法器 Lab2 ALU Lab3 矩陣乘法 Lab4 Button \u0026amp; LED Lab5 LCD Lab6 UART Lab7 矩陣乘法(用 SRM，空間優化) Lab8 SD card Lab9 暴力解MD5（用 Pipeline，時間優化） Lab10 VGA 顯示 期末專題 VGA 小遊戲 2 選 1（貪吃蛇、皮卡丘打排球）    計算機組織  授課老師：資工 蔡文錦 評分方式：  我討厭 Verilog 所以選了 B Plan A  考試 20% * 3 小考 20% Verilog HW 20%   Plan B  考試 25% * 3 小考 25%     課程範圍  Ch 1: Computer Abstractions and Technology Ch 2: Instructions: Language of the Computer Ch 4: The processor Ch 3: Arithmetic for Computers Ch 5: Memory Hierarchy Ch 6: Multiprocessor   覺得教得很清楚，讓我沒那麼討厭計組了。重點主要放在第四章。第五、六章和 OS 重疊率很高。  作業系統概論  授課老師：資工 吳育松 評分方式：  大考 2 x 30% 作業 4 x 10%  HW1 Multitasking: Python HW2 Memory: C, Linux HW3 File System: Linux cmd HW4 Meltdown: Linux cmd     授課方式  用投影片上課，但投影片很多有的沒的東西，不容易抓到重點。 覺得很催眠的一堂課，只好自學。 作業覺得沒學到太多東西。 期中期末平均都 60 幾，學期分數調了 7 分左右。    資工 - 計算理論 基礎圖論  授課老師：應數系 傅恆霖 評分方式：期中40%、期末60%，滿分約115左右，不調分。 授課方式：老師人超好，因為開在早八，所以會晚十分鐘開始上課（我下堂還有課，結果就因為晚下課搶不到位子），有時會在開始上課前給早到的講點小故事。內容還算滿豐富的，上課全是板書，老師的字大小適中且整齊，上課速度也不會太快，老師手寫筆記和考古題也會公開到網路上。 授課內容：主要是簡單圖為主，從圖的定義，到一些基本性質，還有介紹一些經典問題，尤拉路徑、中國郵差問題、七橋問題之類的，最小生成樹、最短路徑的演算法也有提一下下，最大流最小割，四色定理等等。 會選這門課，主要是因為系上開的離散數學完全跳過圖論這塊，加上以前聽過很多上述的經典問題，卻都不太清楚證明，想說不需要什麼基礎就修修看。 考試內容：以上課範圍為主，證明和定義要記清楚，還有一些簡單的構造題，平常上課聽之外，還需要考試前念一點書。老師偶爾會出作業，寫出證明的話，直接總成績加一分，不過我都在忙東忙西，就都沒有寫了。  演算法概論（英文班）  授課老師：資工 蔡孟宗 評分方式：max ( (2 max(A + B) + min(A, B) + C + D) / 5, 99)  A. 3 次手寫作業 + 2 次小考 B. 3 次程式作業(5題) + 2 次上機 C. 期中筆試 D. 期末筆試   不會點名，某程度上不會被當的課，大神很容易刷分的課，修到 A+ 不難，拿 99 也不無可能，因為每次作業考試都滿分 125。 程式作業和考試題目質感高，手寫作業和筆試難度略高，但基本分很好拿。上課是投影片，老師自己做的，所以品質很好。會先英文授課 7 成的時間，然後再用中文講一次。 該上的內容都有上，還會自己加一些好玩的題材，像是隨機演算法、近似演算法，還有 Treap、Quake heap 這種比傳統的紅黑樹和費波那契堆好實作且好懂的平衡樹。  隨機演算法（英文班）  授課老師：清華 韓永楷 評分方式：5作業（最低 2.5%，其他 37.5%）、3考試60% 授課內容：  Basic Probability, Discrete Random Variable Verify Matrix Multiplication Random Min-Cut Random Median Poisson Trial Markov Inequality, Chebyshev Inequality, Chernoff Bounds Balls and Bins Probability Methods Markov Chain   課程資料 授課方式：  板書。老師是香港人，但口音聽久就習慣了。 老師人很好，會問大家問題，答錯沒關係。上課氣氛非常愉快，然後不需要太多基礎，可能會一點離散數學就夠了。 這門課大概讓我喜歡上了機率，然後機率變得滿熟悉的 XD   附註：加簽沒上限？  高等演算法  授課老師：資科碩 蔡孟宗 評分方式：小考 5 x 20% 授課內容：Graph Orientation, Color Coding, Connectivity, Spanner, Decomposition, Cuckoo Hash, Monge Matrix, Matroid, Submodularity, Epsilon Net, Derandomization, Distributed Algorithm, Streaming Algorithm, Dynamic Algorithm, …… 連續上兩個多小時有點累以外，其實滿喜歡這門課的。每個星期都花不少時間複習，但考試就是難到 Open Internet 還是寫不出來。不知不覺就在一學期學了很多東西，算是看到更廣闊的世界……？用到不少機率，所以現在看到再多機率都不怕了 www  正規語言概論  授課老師：資工 曾文貴 評分方式：5 作業 25%、考試 3 x 25% 授課內容：Finite State Machine, Regular Language, Pushdown Automata, Context-free Language, Turing Machine, Hierarchy of Formal Language and Automata, Limits of Computation 作業和考試多來自課本習題，考試平均大約都五六十分。可能是因為用平板上課，上課會很仔細得寫範例題，上的內容有些少，沒有上到 Reduction 的部分，有些失望。  隨機演算法  授課老師：資工 蔡錫鈞 評分方式：作業 x 6、期中（一張小抄）、期末（take home） 授課內容：幾乎整本第二版的 Probability and Computing、一部分 The Probabilistic Method 上課會有投影片，會補充一些書上沒有的內容，回家複習時最好跟書搭配看。強烈建議一定要去上課，不然自己讀會很難抓到精髓。作業多是勾課本習題，每次大約十天五題，但通常網路上找不到答案，應該多和同學討論。期中考的範圍到機率方法，平均落在五十幾分，但其實老師改的算是滿鬆的，題型其實也和作業滿相似的。  賽局理論及應用（英文）  授課老師：資工 嚴力行 評分方式：程式作業 x 2、小考 x 4、期中 30%、期末 30% 授課內容：沒有用教科書。  Non-cooperative game Coordination game, Potential game and Congestion game Network Problem Graph Problem Coaliction Auction Matching   上課的投影片量很大，建議去聽課，不然抓不到重點。整學期的課都有錄影放到雲端，所以去上課的人大概不到七成。這門課第一次開英文授課，老師的語速算慢，所以英文不好還是能聽得很懂，而且老師還滿會教課的。小考完都會現場檢討，雖然老師常常答案被打臉，但還是覺得能把不熟的部分補起來。期中期末其實不難，跟小考很相近，但有些名詞的定義還是要搞清楚才能回答問題。程式作業主要是 Graph 那個單元，都不用 100 行就能搞定，只需要交報告，用 C++ 或 Python 都行，算是研究所課中相對涼的一門課。  資工 - 其他選修 競技程式設計（一）、(二)、（三）  授課老師：謝旻錚 算是競賽用演算法課吧，因為這年有勾題目，所以大家期中期末都比往年高。這學期放了很多假，因此課程的內容比預期少了不少。 很開心在競程一找到 ICPC 的隊友。 競程二是要在任一場比賽打敗清大第四名或台大第六名的隊伍才能 PASS。競程三就只要賽季時一週練 10 小時就解決了。  人工智慧概論  授課老師：資工 王才沛 評分方式：  原本  程式 50%（個人3次小組1次） 大考＋小考＋手寫作業 50%   實際  手寫作業 2% x 3 小考 2% x 2 段考 23% x 2 個人程式作業報告 13% x 2 小組程式作業報告 10% ＋對戰排名 8％ 點名額外加分 1% x 2     授課方式：平常上課以投影片為主。主要是以概論的方式來上。  介紹 AI 的大致種類。 State Space Search：有教基本的 DFS、BFS、A*、IDA* 等。 Constraint Satisfaction Problem：教 AC3、MRV、LCV、Degree heuristic、Forward checking 等。 Adversarial Search：以 0-sum 遊戲為主介紹，教 Min-max pruning、MCTS 等經典算法。 介紹 Learning 的種類：介紹 Learning 相關的概念（Bias-Variance Dilemma、Cross validation等）。 Supervised Learning：教 Decision Tree、CART 的具體實現，神經網路相關的概念、SVM。 Unsupervised Learning，k-means、SOM、VQ 等算法簡介。 Reinforcement Learning：Q-Learning 為主、TD。 Logic：Propositional Logic、First-Order Logic 這兩種，結合了一些Searching 類的演算法。   其他：  手寫作業和小考段考題型都是一樣，投影片讀熟應該考個 90 是沒問題的，但我期中題目沒看仔細，分數跌了不少。 個人程式作業以報告評分，大致描述實踐分法、實驗結果就行了，以 C++、python、java、matlab 都行，小組作業就限 C++ 和 python。 第一次程式作業是給幾個圖及 3000 個單字，用 AC3、Forward checking 等算法，選幾種去寫，去完成填字遊戲。我自己大約寫了 350 行的 C++，把有教的東西都實踐出來，Forward checking、AC3、Degree hueristic、MRV 都有做效果還不錯。 第二次程式作業是實作 Random Forest，可以直接用網路上別人寫好的 code 去改，但我還是選擇自己寫一個出來，也是用 C++寫了 350 行左右，花了很多時間，但一開始對於attritbute bagging的部分理解錯了，到最後一天才在重寫，資料就沒有跑很多，但報告不知道為什麼還拿滿高分的。 整體來說很吃寫實驗報告能力，但因為有修過物理實驗，所以這部分就還算能抓個方向，加上一些專題 meeting 時訓練出的做圖表能力，所以報告都拿 90+，助教給分的 Range 從 50~98 都有，這部分電資班的成績普遍比資工系的高，顯然物理實驗和專題對寫報告的能力增進不少。看了一下同系學長姐的成績，似乎程式不怎麼樣，但報告卻拿很高就是了，所以修這門課好像寫報告能力重於程式能力。 小組作業是 1~3 人一組，針對 Game 那個單元出一個對戰作業，給定一個黑白跳棋的規則（四方棋盤，可以跳或是直接走一步，跳過對方棋子可以吃掉，看遊戲結束時到對面的棋子數量決定勝負）。總共 51 組，我們拿第 7 名，我們是大概以兩步的結果去評估，加上一些 hueristic 的調整。其他朋友則是真的去做 min-max 和 MCTS 之類的實踐，普遍成績都不錯，我在 PCCA 的隊友，也是同門課中和我唯二的大一生，好像用這個方法拿到第一名。    資料庫系統概論  授課老師：資工系 彭文志 評分方式：由於疫情，調整成只有作業和期末專題，在討論區發言或回答同學問題能加分。 授課方式：修課人數很多，開學就用 Microsoft Teams 遠端，沒上過實體課，原本是一週三堂課，但因為改成線上就只有兩堂。講投影片，投影片的份量有點重，可能因為是線上的，所以覺得老師講起來沒什麼吸引力。加上有時候還沒敲鐘就開始上，前面常常沒聽到，後面就跟不上。 作業：我退掉這門課的原因。HW1 我就決定退選了，因為助教給了一份 LOL 的遊戲紀錄，然後搞不懂規則，加上第一次學 mySQL 的狀態下，實在不想在期中考月花時間寫作業，寫了 8 小時左右就放棄了。聽說總共出了四份作業，然後期末專題是三人一組，寫一個應用程式或網頁之類的（類似口罩地圖之類的），主題自訂。據說總共有 4 次 HW，第二次是 B+ Tree，後面我就不清楚了。 原本期末專題找隊友兩人一組，他還很認真的陪我寫作業。但因為那陣子忙著算係好與系統，還有讀專題的東西，於是最後就早早停修了，至少不會拖累他。總之，這是一門每年都上靠北交大的課，請慎選，個人覺得今年似乎比往年少一點點雷了。  計算方法之實務應用  授課老師：資科工碩 吳凱強 評分方式：作業 4、期中專題 (3 milestone)、期末專題  HW1: 10%, HW2: 10%, HW3: 10%, HW4: 10%, Milestone1: 15%, max(Milestone2, Milestone3): 20%, Fin: 15%, Other: 10%: (1/50) * min(Milestone2, Milestone3) * [(HW1 \u0026gt; 0 ) ? 1 : 0 + (HW2 \u0026gt; 0 ) ? 1 : 0 + (HW3 \u0026gt; 0 ) ? 1 : 0 + (HW4 \u0026gt; 0 ) ? 1 : 0 + (Milestone1 \u0026gt; 0 ) ? 1 : 0] HW1. 用 minisat 解數獨 HW2. 用 BDD 算數獨解的數量 HW3. Viterbi Algorithm HW4. 給 BDD，求 satisfied 的機率 Minterm: SAT solver Final: Metaheuristic   這門課主要偏實作，期中作業號稱要 1500 行 c++。時間大多給兩到三週，期中專題可能會做得很趕。理論的部分基礎不需要太多，因為講得很仔細。我覺得我不喜歡老師上課一直講有的沒的冷笑話，讓上課步調偏慢。評分方式都說得不仔細，成績出來，跟助教反應也沒用。 課程內容：比課綱少不少，通常上不到 3 小時就下課了。  SAT solver \u0026amp; application Binary Decision Diagram Hidden Markov Model \u0026amp; Viterbi Algorithm Google\u0026rsquo;s PageRank Pipeline \u0026amp; Retiming Introduction to NLP Metaheuristic    數值軟體開發（英文）  授課老師：陳永昱 評分方式：作業 6 x 5%、期中考 30 %、Proposal 8%、Presentation 32% 授課內容：課程網站 歷年作業都可在老師的 Github 上看到，所以作業量在修課前就可以評估。老師會分享一些業界的事，很喜歡和學生互動。主要會學到的東西是 Script、Makefile、Pybind11 和 Smart Pointer 等 C++ 的細節。Project 會規定用 Python 及 C++，Proposal 基本上很簡單拿滿分，主題建議選一些運算上可以做優化的，期末報告會比較有東西講（要講 18 分鐘）。期中考則是像在考計概，可能要複習一些 float 的表示法之類的東西。作業則是都用 Github 交，一週需要花五個小時左右，有些環境參數的配置會搞很久。整體來說算是很好及格的一門課，也可以學到很多東西。  資訊工程研討  授課老師：資工 莊榮宏 評分方式：最多缺席兩次，每週書面報告 150 字。 整學期都是用 Microsoft Meet 上課。會請一些業界的人來演講，大部分都在講創業的事。也會請一些中研院的人或是新進教授，通常這部分比較有內容。  電機 電子學（一）  授課老師：電工 陳龍英（逝） 評分方式：3次大考100%、作業一次1%、點名加分 雖然老師是電子學名師，但真的老到講話有氣無力，上課常常東跳西跳，品質據說比以前低。我對這門課真的沒興趣，加上很早就發現跟老師對不到拍，於是很果斷的開始翹課 。 第一次期中剛好在 NCPC 完，比完賽隔天病懨懨沒空讀書，於是只讀了第一章就上場考試，然後就低於 40 分。最後去日本比賽完，發現沒空準備第二次期中，就果斷退選了。  電子學（一）（英文班）  授課老師：電子 吳介琮 評分方式：六次考試 課程網站 需要自己先預習課本作者 Razavi 的影片，和其他班用的 Smith 課本不一樣。 老師教的很好，考古題也都有給，但課本實在太少人用了，連解答都找不到，所以也不好準備。三週考一次試實在來不及準備。  電子實驗（一）  授課助教：電工 陳建安 評分方式：  小考 8% 結報 24% 專題 26% 實驗 26% 期末考 20%   課程網頁 授課內容：基本儀器操作（示波器、電源供應器、訊號產生器、三用電錶）、基本元件（電阻、電容、電感、二極體）、LTspice。 授課方式：  無故缺席兩次會被當，請假要補做。每週上課要先小考，要先看影片預習。小考結束助教會講解實驗內容，要在10點半前做完，大多數人為了早點離開，會直接開始做，不聽助教說明。 專題就是有焊接的部分，分別是直流供電器、音源播放器，但美觀完全不影響分數。期末考實驗內容和電子電路學知識大概一半一半，所以我拿41分（平均48）。 結報雖然我什麼都不會，但寫認真點，也能拿到70分（平均66）。小考平均也70左右，所以就算不會電子電路學，認真預習，不要翹實驗，照著規則，基本上很難被當，雖然有可能是電工系有些人太混。 實驗做不完想繼續完成，或是有事請假，可以跟助教約平日下午補做。    電路學（英文班）  授課老師：生醫 蔡德明 評分方式：  小考 15% 作業 10% 大考 25% x 3 期末專題加分   課本：Fundamentals of Electric Circuits, 7th  作業是從最新版的課本出，但可以跟助教借課本拍照。 Exam 1: 1, 2, 3, 4, 5, 6 Exam 2: 7, 8, 9, 10 Exam 3: 11, 13, 14, 15, 16   授課內容：  KCL, KVL, Nodal Analysis, Mesh Analysis Theorem: Norton, Thevenin, Superposition, Source Transformaion op-amp, Capacitor, Inductor First/Second-Order Circuit Phasor Magnetically Coupled Circuits Frequency Response, Bode Plot Laplace Transform   授課方式：  每個章節會出一次作業，作業會公布詳解。 交作業時會小考，小考只有一題，通常不難，考完會馬上講解。 講解的很清楚，覺得可以只要會一點微積分就可以了，但有學過線性代數、微分方程、訊號與系統，應該會比較有概念。 整個學期大致上是從 t-domain, w-domain, s-domain 去認識電路。 上課時會講很多範例，老師強調應該要先把觀念搞懂再寫作業，作業是用來檢驗自己是否有熟習觀念，不應該一邊寫一邊翻課本。 老師英文語速不快，私下聊天時可以跟他用中文，很鼓勵學生跟他聊職涯相關問題。 每次大考都有提供補考，但最高只能 60 分。 週二晚上會有一個小時的助教課，助教會選和作業相似的習題演算，助教們人都很好，偶而可以跟他們聊天。    電子設計自動化演算法與實作  授課老師：電工 陳宏明、趙家佐 評分方式：期中考 30%、4 作業 45%、final project 25% 作業：由不同實驗室各出一個，所以評分方式也有所不同。測資常常沒說明大小，問助教也並沒有清楚的回覆，這點有些不習慣。  2-way Partition Grid Routing Binary Decision Diagram SAT-Based Path-Delay-Fault ATPG   上課內容  Introduction to EDA Partitioning: KL, FM, Simulated Annealing Floorplanning: Slicing Tree, B* tree Placement: cluster groth, min-cut, force-directed, simulated annealing, genetic algorithm Routing: global (Lee, line-search), detailed (channel, clock, power/ground) Logic synthesis \u0026amp; verification: ROBDD, \u0026hellip; Testing   期中考因為疫情被延到期末，考試範圍只有 Physical Design 和 Logic Synthesis \u0026amp; Verification。 個人比較喜歡 Physical 的部分，後面就沒有認真學了。如果討厭 Heuristic 的人，EDA 這個領域可能不適合你。 期末專題是選一篇 Paper 寫報告，或是參加 ICCAD contest（會拿 alpha test 計分），參加比賽分數會高個 5~10 分。  通識 校基本 - 疾病知識與防治  授課老師：黃元惠（新竹台大醫院的外科醫生） 評分方式：上課參與與發問 30%（全勤80，問一次約加 2分）、分組討論報告 20%、個人書面報告 20%、期末考 30% 上課是用投影片，老師非常認真回答同學問題。就算你高中不是三類組，也保證能聽得懂。 一學期大概點三次名，會挑人數有點少又不會太少。 報告最好不要第一組，你比較知道準備方向，五個人一組其實負擔很小，小心不要遇到很雷的人就是了。個人和分組報告都是自己選擇主題，很自由，書面報告大約期末倒數第三週交。 期末筆試，可用網路查，兩題申論，一題會是和上課內容有關「冬天需注意的疾病、防治方法」，一題時事題「同婚公投」。反正不翹課應該就能拿 80 分以上，算是甜了。  校基本 - 幾何造型  授課老師：陳明璋 評分方式：隨堂作業 8 次 65%、期末作業 25%、作業每次超過 90 分 + 0.9%、85分 + 0.5% 作業會分成課堂操作歷程呈現的部分，還有課後自己練習及成品彙整的部分（5頁以上）。老師作業改得有點慢，所以我有些做的不錯的圖放在歷程的部分，而不是放在彙整的部分，老師就沒有仔細留意，作業分數就落在 87 左右，因此沒到 90 很虧。 課堂上由老師帶著做一遍，用老師研發的 AMA 軟體（PPT外掛）進行造型繪製。內容包含對稱、碎形、錯覺等等，上課教的很扎實，設計的過程不只對圖形構造的方法更了解，也能學到如何利用工具提升自己的工作速度，避免一再重複一樣的操作，是一門滿有意義的課。老師準備要退休了，真難過。 期末專題是以繪本的方式呈現，至少 25 頁，我做了大約 30 小時，但最後總成績卻還是 A 而已。平常的作業我花的時間大約 5 小時，但認識某資工大神每次花 10 小時做作業，自認不如人家。  校基本 - 統計方法與資料分析  授課老師：唐麗英 網路課程很涼，給分很甜。 有三堂面授，有小組報告，每堂老師都會遲到。 考試可以帶小抄，期中期末各一。  校基本 - 認識語言  授課老師：  上半學期：盧郁安 下半學期：周昭廷   評分方式：  上半學期  課堂參與 15%：每堂課結束會玩 Kahoot。 作業 15%：Praat、\u0026hellip; 期中影片 30%：選一個主題做「60 秒懂 xxx」   下半學期  下課前 Kahoot 小考 2% x 8 Google 表單小考 2% x 7：每週會給一篇文章回去閱讀、題目也會先公布 期末報告 20%：5 important ideas in the course 每週可針對閱讀或語言學提出一個問題 0.5% 上課回答問題 0.5%     上課內容  上半學期：聲音的結構與測量、發音部位、語言感知、句法學\u0026hellip; 下半學期：認知科學、Universal Grammar、母語的學習歷程、嬰兒的認知能力、Finite State Grammar\u0026hellip;   上半學期的內容著重在音韻學，但也有上到一些句法學，期中專題一半的分數是同學互評。下半學期很有趣，是以認知科學的角度去認識語言學。 上半學期有一次上課會用「沙拉油＋活性碳」去塗在舌頭上，做顯影觀察發音的位置。 算是偏涼和甜的課，但可以學到很多東西。  跨院 - 統計學  授課老師：彭南夫 評分方式：小考 15% x 2、期中期末各 35% 不會點名。上課基本上就是投影片唸一唸，每個章節至少重複講 2 次。 因為是電機系開的，所以沒講數學證明，讓我很失望，就不太上這門課了。 考前會出作業，會讓助教講解，但不收作業。考試是 openbook，有些人會有考古題抄上去，於是就 95 以上。但我有些計算錯誤之類的，分數就被扣一半掉了，於是總成績只拿 C。  核心社會 - 政治學  授課老師：胡志光 評分方式：出席 10%、上台報告 10%、期中考 30%、期末考 30%、期末書面報告 20% 用書：《政治學與台灣政治》，建議一定要準備一本，清大人社圖書館有幾本。 授課方式：用書商的投影片，但會在口頭補充一些東西。上課老師會點同學回答問題當點名，一學期大概被點到三次左右。每週上一個單元，有些單元內容不多，甚至會提早一堂課下課。 考試：有些名詞定義，還有一些閱讀題，考運用了什麼政治學觀念。老師統計後，大家考前準備時間平均是 7 小時。認真聽課應該就會知道哪些地方是重點，雖然我到考試時就把前一天讀的東西忘光了，讀工科讀久了就忘記怎麼記背科了。老師說只要期末考比期中考進步，就不太會當掉你。 上台報告：10 分鐘左右，報告一則國內時事，只要準備新聞網址，說明為什麼是政治的新聞，政治主要就是兩群人的衝突，這個部分有抓到應該都不會太差。報告日期是自己選，建議選中間偏前面，愈早報吿老師要求愈低。 期末報告：選一則解嚴後的國內政治事件，寫 2000 字的書面報告，一半的篇幅敘述事件，另外一半用課本中的政治學概念做分析。在最後一個月，老師會點同學確認報告主題。班上滿多人選年金改革、同婚、公投、土地徵收等近幾年的時事。本來有想選大巨蛋案當作題目，但是老師說後來的發展都很陰謀論，所以就聽老師的建議換主題了。繳交時間訂在期末考後下一週，感覺還算友善。 原本是聽隊友建議選了這門課當作核心向度的通識，聽他說上課都在聽故事，不會太累，考試不難分數也還可。但後來才知道他是指兩學分的政治學 QQ  核心社會 - 教育學概論  授課老師：黃漢昌 評分方式：期中報告 25%、期末報告 25%、分組報告 20%、課堂學習單與討論 30% 每次上課都會發學習單，當天要交回，然後舉手回答問題或提問會加分或得到一本書。基本是提問比較容易拿分。 期中報告和期末報告，分別是選一個有興趣的教育問題，和讀一本教育學相關的書寫心得，2500 字，建議在期中選書，選項比較多。 分組報告，大約五人一組，但 ppt 在前幾週就要先交，不確定老師如何評分。  核心人文 - 東亞儒家：人文精神  授課老師：台大 黃俊傑 評分方式：作業 50％、課程參與 20％（兩次直播和一次討論課）、期末報告30％ 是夏季學院開的非同步的線上課程，總共七週，每週都有一週的時間看線上課程和寫作業，字數每次 600~1000 字，教學平台是用 NTU Cool。助教還滿用心改作業的，上課內容也很扎實，分數算是偏甜。 上課內容：孔孟思想、大學、道德經、禪宗、心經、朱子、東亞的儒家思想（中日韓台）等。  外文 大一英文（一）  授課老師：吳思葦 評分方式：出席10%、課堂學習單和平時加分30%、期中20%、期末20%、課堂寫作5%、GEPT 10%（一次課堂三次線上）、VOD 5%（去圖書館三樓語言中心 5 次） 以聽力為主，口說次之。絕對不要翹課或請假，分數會差很多。上課還算輕鬆，功課大約 15 分鐘就可以寫完。期中是考聽力，期末是一組三人，十分鐘的對話要背稿。整體來說投資報酬率不高，要拿 90 以上有點難，完全沒調分。  德文（一）  授課老師：周玉蕙 評分方式：出席、期中小組口試、期末筆試、自我介紹影片 上課會有分組互動，和隔壁的同學練習對話。也會點同學回答問題，但只是練習，不影響分數。 期中考花了很多個禮拜，這點可以改善。主要的內容是介紹組員。 期末文法筆試，主要就是要會背冠詞。 建議買課本，或是跟同學借來印。平常會勾練習本的作業，但都不算分。  德文（二）  授課老師：周玉蕙 評分方式：出席、小組短劇（邀請吃飯）、用德文介紹食譜、期末錄影片（現在完成式練習） 主要都在練習動詞、分離動詞、現在完成式。 疫情後是非同步影片。  進階英文寫作  授課老師：張靜芬 評分方式：出席 15%、作業 50%、部落格專題 25%、作品集 10% 作業有 7 次，作業給分幾乎都介於 85-90，普通就 87，結構好就會到 90。每個作業的流程都是，一週寫完初稿，下次上課給同學 review，繳交修正版，老師給評語和分數，最後改版和前兩個版本都放到 profolio。 老師強調她不想和其他寫作課一樣，都在教 essay，所以作業很豐富，有 summary, product review, \u0026hellip;\u0026hellip; 期中是要一個四人一組的專題，要寫一系列文章，每個人要寫四篇，還要寫 Report。 上課會有一些分組練習，整體來說上課很活潑，不會想睡。但是比較可惜的是同學通常都很害羞，不會給太具體的建議。  ","date":"2022-01-23T11:00:15+08:00","image":"https://Luke2336.github.io/post/Other/%E4%BA%A4%E5%A4%A7%E4%BF%AE%E8%AA%B2%E5%BF%83%E5%BE%97/G0.png","permalink":"https://Luke2336.github.io/p/course_nctu/","title":"交大修課心得"},{"content":" 下雨天還得出門有點討厭。 接到爸爸的電話，於是明天得回雙溪一趟。 收到 Google 的 email，下禮拜又有被安排新的 Team Match，希望這次能順利。 體育課的成績出來了，真的是照出席率給分，於是拿到 A+。 晚上接到電話說阿公走了。  ","date":"2022-01-21T17:19:15+08:00","permalink":"https://Luke2336.github.io/p/20220121/","title":"2022/01/21 日記"},{"content":" 除了吃午餐都在睡覺的一天，有點發燒。  ","date":"2022-01-20T17:20:45+08:00","permalink":"https://Luke2336.github.io/p/20220120/","title":"2022/01/20 日記"},{"content":" 今天和 Google 的 manager 聊完後，問了一下學姊對於那個 team 的意見，學姊是覺得新手不適合做 kernel，讓我有點被勸退了 QAQ 好煩惱 team match 的事唷！ 晚上又看完一季進擊的巨人。  ","date":"2022-01-19T12:20:31+08:00","permalink":"https://Luke2336.github.io/p/20220119/","title":"2022/01/19 日記"},{"content":" 早上處理了微學分承認的手續，去圖書館還了書。 多益的成績單我填錯地址了，445 寫成 405，但宿舍還是找不到那封信，可能因為是平信就寄丟了。打電話去詢問後，得到了掛號補寄原址的程序，需要三個工作天。但我因為擔心會收不到，所以就花了 200 元，買了 16 個工作天的成績單，改成寄到家裡。 接到 Google 的電話，表示我通過 Hiring Committee 了，但是得重新 Team Match。 傍晚去找蘇老師還書，順便和他及師母在關新路吃了晚餐。 新聞說疫情擴散到新竹市區了，而且感染源不明。週末是學測，希望疫情不要爆開。  ","date":"2022-01-19T12:20:26+08:00","permalink":"https://Luke2336.github.io/p/20220118/","title":"2022/01/18 日記"},{"content":" 下雨天。 疫情持續在擴散。  ","date":"2022-01-17T11:30:27+08:00","permalink":"https://Luke2336.github.io/p/20220117/","title":"2022/01/17 日記"},{"content":" 看完了巨人的第二季。  ","date":"2022-01-17T11:30:23+08:00","permalink":"https://Luke2336.github.io/p/20220116/","title":"2022/01/16 日記"},{"content":" 把隨機演算法的期末考交卷，因為寫到有點崩潰。 看完了巨人的第一季。  ","date":"2022-01-17T11:30:17+08:00","permalink":"https://Luke2336.github.io/p/20220115/","title":"2022/01/15 日記"},{"content":" 寫了一點點隨機演算法的期末考。  ","date":"2022-01-17T11:30:12+08:00","permalink":"https://Luke2336.github.io/p/20220114/","title":"2022/01/14 日記"},{"content":" 中午去剪頭髮，結果瀏海原本要斜的，被剪成平的了。 下午去資工系辦問了微學分和基礎圖論的事，我把結果更新在 FB。總之，用 8 小時換 3 學分應該還算划算，但還是很令人不爽。 賣掉了我的第一本程式工具書 - 明解 C++。 晚上約隊友們去清夜吃 KFC。  選課 很幸運有選到 UNIX，但有點猶豫要不要修編譯器。\n","date":"2022-01-13T15:25:50+08:00","image":"https://Luke2336.github.io/post/Diary/20220113/%E8%AA%B2%E8%A1%A8.png","permalink":"https://Luke2336.github.io/p/20220113/","title":"2022/01/13 日記"},{"content":" 看到 NSD 只拿 77 分，有點小難過，但也只能怪自己報告得太糟糕。 改了 config.yaml 的設定，讓他可以 render html。 寫了一篇 facebook 貼文整理畢業學分的各種坑。   ","date":"2022-01-12T17:10:00+08:00","permalink":"https://Luke2336.github.io/p/20220112/","title":"2022/01/12 日記"},{"content":" 試著用 Codecademy 學 Javascript。 花了些時間向註冊組問清楚免修的事。  ","date":"2022-01-12T17:09:55+08:00","permalink":"https://Luke2336.github.io/p/20220111/","title":"2022/01/11 日記"},{"content":"目標  通過畢業標準 750 分。  準備過程  考了 2021/12/19 的多益，拿到聽力 415 閱讀 380。上一次考是高中畢業時，只考五百多。 整體來說大約花了三週準備。 用書都是從交大圖書館借。  單字：牛津英語大師用THINKING MAP教你多益單字 閱讀：NEW TOEIC 新制多益 : 閱讀5回 全真模擬試題+詳盡解析   準備方法是把單字書裡不熟的字抄下來，然後考前複習，覺得這本書依照場合來整理單字還滿方便的。 閱讀寫了三回，大致上是對 80 題上下，主要是用來練習答題速度。 聽力則是完全裸考，但有擬定好策略。  策略  Part 1  注意 5W1H   Part 2  同樣注意 5W1H 注意放慢語速處、加重音、停頓處   Part 3, Part 4  聽之前盡量先看完題目 注意相似字、反義字   Part 5, Part 6  高中文法 搭配詞   Part 7  先看首段首句 先看題目再找答案 快速掃過文章即可 注意文章種類，分為書信、徵人、廣告\u0026hellip;\u0026hellip;    考試當天  聽力有幾題跟不上，但就直接果斷放棄，往後看。 閱讀剛剛好在最後五分鐘寫完。  ","date":"2022-01-10T17:11:16+08:00","permalink":"https://Luke2336.github.io/p/toeic_prepare/","title":"多益準備"},{"content":" 半夜起來看多益的成績，拿到聽力 415 閱讀 380，總共 795 分，總算過畢業門檻的 750 了。 整理了之前三年的筆記，只有把電路學和線性代數的筆記掃描起來，其他都丟了。 把腳踏車籃子賣掉了。 今天開始選課。  ","date":"2022-01-10T17:05:53+08:00","permalink":"https://Luke2336.github.io/p/20220110/","title":"2022/01/10 日記"},{"content":" 無所事事的一天。 稍微研究了一下 Nitori 和 Muji 的傢俱。 有些煩惱今年夏天搬宿舍的事。  ","date":"2022-01-09T11:13:53+08:00","permalink":"https://Luke2336.github.io/p/20220109/","title":"2022/01/09 日記"},{"content":" 看完 Psycho Pass 第二季。 去桃園逛 IKEA。  有逛到幾組喜歡的衣櫃，畢業後應該會考慮有大衣櫃。  PAX PLATSA   電視櫃：  HAUGA   高腳床：  SMÅSTAD   鏡櫃：  ENHET   沙發  VIMLE      ","date":"2022-01-09T11:13:48+08:00","permalink":"https://Luke2336.github.io/p/20220108/","title":"2022/01/08 日記"},{"content":" 去竹東，之後都在睡午覺，稍微讀了一下 Markov chain。  ","date":"2022-01-09T11:13:43+08:00","permalink":"https://Luke2336.github.io/p/20220107/","title":"2022/01/07 日記"},{"content":" 上了隨機演算法，中午吃了麥當勞。 下午是最後一堂羽球課。 晚上和男友聊了一些家裡的事。  ","date":"2022-01-09T11:13:38+08:00","permalink":"https://Luke2336.github.io/p/20220106/","title":"2022/01/06 日記"},{"content":" 早餐後，洗了衣服。 寫了 Amazon 的 Online Assessment。  Amazon Online Assessment  總共兩題，第一題很水，第二題看不懂題目，於是就炸了，只好亂撈幾個測資。 共 70 分鐘，有給測資大小，但沒給時限，有點雷。 有 auto complete，還有編譯器，覺得滿方便的。 Coding Assessment 結束後會有個 Workstyle Assessment。選中文，結果出現一堆簡體字，翻譯還感覺有點雷。  ","date":"2022-01-05T13:00:09+08:00","permalink":"https://Luke2336.github.io/p/20220105/","title":"2022/01/05 日記"},{"content":" 賽局理論期末考，少讀了一些定義，希望能及格。 考完試後想耍廢，卻有點不知道要做些什麼。 傍晚收到 Amazon 的 Online Assessment 連結。  ","date":"2022-01-04T14:56:09+08:00","permalink":"https://Luke2336.github.io/p/20220104/","title":"2022/01/04 日記"},{"content":" 春天去清大賞梅。 球拍第一次打到斷線，學會剪線。比了小梅竹，也參加久違的體育週比賽。 面試了 Google 的實習，最後上了，整個暑假都在實習。 決定不讀研究所。看著身邊的人都在申請中煩惱，但自己置身事外的感覺很奇妙，有著不順應潮流的焦慮，但也很開心自己很早就下定決心，沒花太多力氣猶豫。 年底則是面臨轉正、找工作的壓力。 參加 ICCAD，但因為實習的關係，最後沒有做完。 Github 上漸漸有些東西出現。 上半年陸續把欠的醫生看完，看了牙醫、外科、神經內科、婦科\u0026hellip;開學後打了兩劑 AZ。 比了台清交程式比賽。年度賽拿了第三名，但後面的比賽都打得爛爛的。尤其是最後一場 ICPC 直接大爆炸，只拿了銅牌，很不甘心。 英檢還是考不過 QQ 下半年沒有繼續修德文，之前學的東西就很快忘光了，希望近期可以複習起來。 開始練習煮東西，也開始叫 UberEat。 重新開始寫書法。 逛了竹東夜市、慈雲路夜市。去了苗栗、台中、高雄等地方玩，開始會自己一個人出門玩。    2021 Spring 修了正規、EDA、計算方法之實務應用、進階英文寫作、教育學概論、德文二，還旁聽了難解問題。覺得是個很累很充實的學期，不知道是怎麼撐過去的。算是寫了很多作業，讓寫程式的能力進步不少。英文寫作也是收穫很大的一門課。 2022 Fall 修了 NSD、賽局理論、隨機演算法、競技羽球，然後跟葉老師做專題。    看了很多動畫，大部分都是在巴哈上面看的。  半妖的夜叉姬（覺得跟犬夜叉的風格差很多，有點失望） 舞伎家的料理人（每個月只出一集，多當作打發時間看） 我們仍未知道那天所看見的花名 本田小狼與我（最後沒看完） 天地創造設計部（覺得題材滿有趣的一部作品） 白沙的 Aquatope 來自深淵 隱瞞之事 花開物語 不愉快的妖怪庵 妖怪旅館營業中 寶石商人理察的謎鑑定 重啟咲良田 只有我不存在的城市 死亡筆記本 月與萊卡與吸血公主     2021 過完了，覺得離畢業更近了些，有些徬徨，不確定未來的路要怎麼走。但能開始規劃未來也算是一件好事，有些猶豫畢業後要留在新竹還是在台北工作，有些不知道怎麼從家裡獨立出去，想著想著，卻也會開始想像自己未來的房間長怎樣，生活長怎樣，怎樣跟伴侶相處等等，不知不覺有了些藍圖。\n","date":"2022-01-03T14:54:11+08:00","image":"https://Luke2336.github.io/post/Other/review2021/Cake.JPG","permalink":"https://Luke2336.github.io/p/review2021/","title":"2021 回顧"},{"content":" 早上是 NSD 的報告，覺得非常緊張，所以不小心講太快了。  Slide   回宿舍睡一覺後，中午買了鬆餅吃，然後去工四地下室讀賽局理論。  ","date":"2022-01-03T14:43:43+08:00","permalink":"https://Luke2336.github.io/p/20220103/","title":"2022/01/03 日記"},{"content":" 將專題的簡報和影片做好。 複習賽局理論。 準備隔天 NSD 的報告。  ","date":"2022-01-03T14:43:37+08:00","permalink":"https://Luke2336.github.io/p/20220102/","title":"2022/01/02 日記"},{"content":" 在暑假順利畢業。 在畢業前找到工作。 考過英檢。 喜歡的人和自己都身體健康。 每週花一點時間學德文。 能維持好現有的人際關係。 能經濟獨立，有一定的自由。 能更成熟獨立。 家裡一切平安順遂。  ","date":"2022-01-01T22:10:34+08:00","permalink":"https://Luke2336.github.io/p/newyear2022/","title":"2022 新年願望"},{"content":" 早上起床看到很多新年祝福，覺得很感動。 中午跟學長約吃飯。 下午跟前男友去市區閒逛，參觀了辛志平校長故居，去咖啡店喝了很多咖啡，晚上吃了咖哩飯。  ","date":"2022-01-01T21:07:11+08:00","permalink":"https://Luke2336.github.io/p/20220101/","title":"2022/01/01 日記"},{"content":" 去台中搭了捷運。 去逛了台中的 IKEA 和文心森林公園。 從大慶站搭火車回新竹，但搞不清楚什麼是成追線，研究了很久。最後在台中轉自強號站回新竹。 覺得今天到人多的地方都有點頭暈。 晚上 10:30 就睡了，懶得跨年。  ","date":"2022-01-01T21:06:58+08:00","permalink":"https://Luke2336.github.io/p/20211231/","title":"2021/12/31 日記"},{"content":" 早上上課前把選課系統的課程規劃排好了。 下午寫了申訴書。 體育課停課。 晚上跟隊友們去吃 pizza，點了墨西哥玉米脆片和三個 pizza，結果四個人吃不完。  ","date":"2021-12-30T12:15:12+08:00","permalink":"https://Luke2336.github.io/p/20211230/","title":"2021/12/30 日記"},{"content":" 早上都在為牙醫的事焦慮，所以沒做太多事。 中午出門看牙醫，找了一下才找到報到處，然後填了初診資料，就去照 X 光。之後由住院醫師先問診，然後我就聽她講了拔智齒的優缺點，雖然有點害怕拔牙也擔心傷到神經，但最後我還是預約 2 月下旬去拔牙，寒假都早就被排滿了。 傍晚試著投了 Cadence 的 summer intern，主要是想找 EDA 相關的工作，想培養一些相關的經歷，但不確定應屆畢業生可不可以投。 晚上吃了漢堡配可樂，然後消耗了一些動畫。  ","date":"2021-12-30T12:15:05+08:00","permalink":"https://Luke2336.github.io/p/20211229/","title":"2021/12/29 日記"},{"content":" 考賽局理論的 Quiz4，覺得沒有很難，但我好像粗心只考到七十幾的感覺。 晚上就對隔天要看牙醫感到很焦慮。 晚上去拿藥，之後吃了一家賣丼飯和火鍋的店。  ","date":"2021-12-30T12:14:59+08:00","permalink":"https://Luke2336.github.io/p/20211228/","title":"2021/12/28 日記"},{"content":" 早上去聽 NSD 的報告，滿多都聽不懂的，但感覺別人的內容都好多，我覺得我連 15 分鐘都講不到。 晚上的專題因為期末的關係沒什麼進度，只被要求把期末報告寫完。  ","date":"2021-12-30T12:14:54+08:00","permalink":"https://Luke2336.github.io/p/20211227/","title":"2021/12/27 日記"},{"content":" 仍舊複習賽局理論。  ","date":"2021-12-30T12:14:49+08:00","permalink":"https://Luke2336.github.io/p/20211226/","title":"2021/12/26 日記"},{"content":" 今天是聖誕節，但一整天都在讀書沒出去玩，賽局理論的影片好多，看不完。  ","date":"2021-12-30T12:14:44+08:00","permalink":"https://Luke2336.github.io/p/20211225/","title":"2021/12/25 日記"},{"content":" 中午又是 Google 的面試，今天遇到的是台灣人，出了一題 Greedy，但我卻跟他扯 Linear Programming，雖然最後有得到他想要的解，但我覺得我花太多時間了，有點爆炸，幸好 coding 的過程還算順利。 下午睡了一下，然後開始複習賽局理論，發現很多東西都沒弄懂，覺得壓力很大。 星期一隨性的投了一家叫 Siemons 的 EDA 工程師，結果今天就收到感謝函了 QQ 但後來查了一下，發現那家外商公司已台商化，可能拿到 offer 也不會想去。  Review Game Theory ","date":"2021-12-24T17:41:55+08:00","permalink":"https://Luke2336.github.io/p/20211224/","title":"2021/12/24 日記"},{"content":" 中午面試 Google，面試官是大陸人，出的題目滿簡單就得到最佳複雜度，但卻被要求再繼續優化。總共只被問了一題，讓我覺得不太理想。 中午買飯遇到隊友。  ","date":"2021-12-24T17:41:51+08:00","permalink":"https://Luke2336.github.io/p/20211223/","title":"2021/12/23 日記"},{"content":" 本來中午要面試 Google，但臨時被移到星期五。 一整天幾乎都在睡，什麼事都沒做。 晚上和葉老師聊了一下。  ","date":"2021-12-24T17:41:46+08:00","permalink":"https://Luke2336.github.io/p/20211222/","title":"2021/12/22 日記"},{"content":" 吃了湯圓。 下午覺得很不舒服，賽局理論只上一堂就先回宿舍休息了。  ","date":"2021-12-24T17:41:42+08:00","permalink":"https://Luke2336.github.io/p/20211221/","title":"2021/12/21 日記"},{"content":" 今天是最後一堂資訊工程研討，終於結束了！ 晚上 meeting 被要求回去多試幾個 model，看各個 threshold 的 loss。  ","date":"2021-12-24T17:41:37+08:00","permalink":"https://Luke2336.github.io/p/20211220/","title":"2021/12/20 日記"},{"content":" 今天早上去考多益，出門前找不到身分證，幸好護照有放在身邊，卻很緊張身分證不見的事。第一次去新竹高中，果然是男校，女廁有夠少的。 覺得多益超級耗精力的，光是聽力就累到炸，題目一直來不及看完。閱讀則是剛好最後五分鐘壓線寫完，希望加起來能到 750 分。覺得背的單字書有命中滿多的，但有些還是想不起來。 下午睡了兩小時後，開始起床吃東西，邊刷點題，覺得有些崩潰，都精神 AC，懶得動手寫 QQ 覺得滿焦慮的，Recruiter 說可以換中文面試，但一直沒有更新，讓我有點不知道該不該寄信去問。 隨機演算法的作業寫不出來，讓我覺得心好累。 晚餐後，洗了衣服，看了一下別人的面試心得，然後又刷了幾題 Leetcode，覺得相對前幾天順手許多了，但 Medium 的題目比想像中難一點點。雖然說前幾天刻線段樹也是一次就刻對了，相信是不會需要寫 lazy tag 的吧？ 其實今天應該複習一些經典的演算法，但因為心態炸裂，沒辦法專心準備。  ","date":"2021-12-19T20:25:59+08:00","permalink":"https://Luke2336.github.io/p/20211219/","title":"2021/12/19 日記"},{"content":"   English Chinese     impede 妨礙   counteroffer 還債   distributer 經銷商   contingency plan 應急計劃   adjourn 體會   remorse 懊悔   dissension 意見不合   conform 遵照   criteria 標準   inferior 下級的   intended 未來的   cistern 儲水器   podium 講台   aggregate 集結   tackle 處理、交涉、抓住   compliance 遵行、承諾   transcend 勝過   out of stack 無現貨的   retial 零售   tailor 修改   consensual 一致同意的   liability 債務   impose 徵稅   mandatory 義務的   evasion 逃避   scrutinize 檢閱   reconcile 核對   audit 查帳   bounced check 空頭支票   deficit 赤字   recession 衰退   mortagage 抵押貸款   promissory note 本票   capitalization 資本額   commission 佣金   transaction 交易   triumph 獲得成功   accredit 授權   delegate 委派   jurisdiction 權力   configuration 框架   ascertain 確信   indispensable 不可或缺的   sidestep 迴避   subsidiary 隸屬的   franchiser 加盟授權者   concession 執照   detrimental 不利的   prestigious 有聲望的   recognition 表彰   unanimous 一致通過的   concur with 同 \u0026hellip; 一致   controversial 有爭議的   consent 同意   preside 主持   disputable 有爭議的   nonsensical 荒謬的   minutes 會議紀錄   concierge 管理員   courier 快遞員   epistle 訊息   alineated 不合群的   intangiable 無形的   amiable 友好的   aesthetics 美學   ergonomic 人體工學   pantry room 茶水間   reinforce 加深   streamline 使效率更高   complication 困難   stipulate 規定   drawn 疲憊的   salient 顯著的   commensurate 相稱的   expertise 專長   subsidize 補助   subsidy 補助金   absurd 不合理的   abundant 大量的   eloquent 有說服力的   lay off 解僱   dedicated 盡責的   freelancer 自由業者   despise 鄙視   compensate 賠償   reimburse 退款   perk 額外補助   industrious 勤勞的   merit 功績   resignation 辭職   abdicate 放棄   valedictory 告別的   severance pay 資遣費   boycutt 杯葛   preclude 阻止   protest 抗議   steppage 停工   strike 罷工   forestall 預先制止   lay out 解釋清楚   memorandum 備忘錄   hypnotize 著迷於   imminent 即將發生的   haggle 討價還價   amicable 友善的   obligatory 強制的   merchandise 商品   manifest 明顯的   dispatch 遞送   integral 不可缺的   spacious 寬敞的   amplify 增強   unveil 使公諸於眾   imminent 逼近的   apparatus 設備   gadget 裝置   aptitude 才能   evacuate 撤空   confined 不能外出的   ventialation 通風   procure 取得   succinct 簡明的   comply 依從   lease 租用   controversy 爭議   seclude 使隔離   imperative 迫切的   conversant 熟悉的   quote 報價   possesion 財產   takeover 收購   down payment 頭期款   flat 公寓   deductible 可扣除的   depreciation 貶值   lease 租約   tenant 房客   landload 房東   overhaul 檢修   appeal 上訴   civil 民事的   legitimate 合理的   litigation 訴訟   recreational 娛樂的   amenity 便利設施   aethetic 美感的   adorn 裝飾   entitle 給予權利   deluxe 豪華的   lecomotive 火車頭   peddle 叫賣   excursion 短程旅行   dispatch 派遣   dawdle 拖拖拉拉   articulated 鉸接式的   double-decker 雙層公車   voucher 票券   vessel 船   embark 上船   obligatory 必須的   ambience 情調   steward 管家   reluctant 不願意的   engage beforehand 預定   call off 取消   renowned 有名的   appetizing 開胃的   cater 承辦   lavish 奢華的   sumptuous 豪華的   cordial 友好的   diplomatic 圓滑的   solicitation 招攬   tender 遞交   attive 服裝   etiquette 禮儀   couteously 有禮貌的   modest 端莊的   scatterbrained 糊裡糊塗的   delicacy 美食   obsolete 淘汰的   broker 協商   sanitary 乾淨的   rehearse 排練   fragile 易碎的   prehistoric 史無前例的   curator 館長   effusive 十分熱情的   inaugural address 就職演說   enthuse 使感興趣   alleviate 減輕   physician 內科醫生   irritate 使疼痛   distraction 娛樂   practice 診所   prescription 處方   pertinent 相關的   surgeon 外科醫生   unequalled 出類拔萃的   recuperate 復原   depressnat 鎮定劑   tranquillizer 鎮定劑   jeopardize 危及   dispense 配藥   herbal 草木的   mishap 不幸事故    ","date":"2021-12-18T20:11:46+08:00","permalink":"https://Luke2336.github.io/p/toeic1/","title":"TOEIC 單字準備"},{"content":" 睡滿多的一天。 花了很多時間看賽局理論的影片，但一直看到睡著。  ","date":"2021-12-18T20:05:56+08:00","permalink":"https://Luke2336.github.io/p/20211218/","title":"2021/12/18 日記"},{"content":" 花了很多時間背單字。 晚上去夜市買了燒仙草吃。  ","date":"2021-12-18T20:05:50+08:00","permalink":"https://Luke2336.github.io/p/20211217/","title":"2021/12/17 日記"},{"content":" 下午認真準備背了多益的單字。  羽球課 今天練了中前場的防守，覺得正手拍接殺球比較困難。\n","date":"2021-12-18T20:05:45+08:00","permalink":"https://Luke2336.github.io/p/20211216/","title":"2021/12/16 日記"},{"content":" 早上去看牙醫。 中午收到 Google HR 的信，說是下禮拜的面試都是英文的，於是我回信問能不能改成排中文的面試。不敢面英文的是因為怕聽不懂題目，耗掉太多時間在水題，之前聽中文都可以搞錯題意，題目不怕不會寫，就怕聽不懂 QQ 感謝 HR 願意幫我重新排看看。 下午都在背多益單字，覺得不會的單字多到爆。 最近體溫常常超過 37.5，不知道該不該去看個感染科，或著只是我有慮病症罷了。  看牙醫 去竹榮看牙醫，想問看看能不能拔智齒，但醫生看了 X 光片後，說應該要去台大的口腔外科拔，最後就順便洗個牙。\n","date":"2021-12-15T17:34:26+08:00","permalink":"https://Luke2336.github.io/p/20211215/","title":"2021/12/15 日記"},{"content":" 早上嘗試將 VScode 用 ssh，參考了這篇，總算成功了。 checkout remote branch 的方法。 下午翹課去看皮膚科。 晚上跟學姊在竹北吃飯，覺得很開心。  ","date":"2021-12-14T10:01:17+08:00","permalink":"https://Luke2336.github.io/p/20211214/","title":"2021/12/14 日記"},{"content":" 今天資工研討是請新進教授演講，比之前有意思多了。 晚上 meeting 時，學長提了 pytorch 的 fft 會 memory leak 的問題，於是我就把 c++ 的 fft 包成 python 給他。  ","date":"2021-12-14T10:01:12+08:00","permalink":"https://Luke2336.github.io/p/20211213/","title":"2021/12/13 日記"},{"content":" 寫了一回多益的閱讀題，大概就 370 分左右。 今天是北一校慶，但因為疫情，所以沒有對外開放。 刷了一點點 Leetcode 的題目，對於自己一次寫對的信心有點低。  ","date":"2021-12-12T17:47:20+08:00","permalink":"https://Luke2336.github.io/p/20211212/","title":"2021/12/12 日記"},{"content":" 因為蜂窩性組織炎去看皮膚科，得到了三天份的抗生素，三天後還得回診。 晚餐吃了烤雞。 晚上背了些單字。 覺得壓力有些大，有專題、面試、多益、一堆作業要忙。  ","date":"2021-12-12T17:47:15+08:00","permalink":"https://Luke2336.github.io/p/20211211/","title":"2021/12/11 日記"},{"content":" 寫了一回多益的閱讀題，覺得不太理想，大概就 350 - 400 分左右。 晚上又去逛了慈雲路夜市，燒仙草似乎只有星期五有擺攤。  ","date":"2021-12-12T17:47:10+08:00","permalink":"https://Luke2336.github.io/p/20211210/","title":"2021/12/10 日記"},{"content":" 中午買了便利商店的義大利麵和飲料，開了新的韓劇出來看，然後睡了午覺。 下午的羽球課練跑四個點，結果我左前一直跑不到。 晚上和 Google 的 Recruiter 講電話，果然是壞消息，被加了兩場面試， 都在下星期五。覺得壓力好大，有一陣子沒刷題了。  ","date":"2021-12-09T19:56:33+08:00","permalink":"https://Luke2336.github.io/p/20211209/","title":"2021/12/09 日記"},{"content":" 早上在弄專題的東西，發現用 CSB 下去跑慢到爆，開平行還會更慢。覺得弄到心情很不好。 下午寫了一回多益的閱讀模擬題，只對了 79 題，粗心錯了不少。 結果上週報帳還是有東西有錯 QQ 晚上跟隊友們和卡車去吃一燒十味昭和園，覺得味增雞肉還滿好吃的，隊友吃了一堆香草雞腿排。 晚上累到直接睡癱。  ","date":"2021-12-08T15:35:32+08:00","permalink":"https://Luke2336.github.io/p/20211208/","title":"2021/12/08 日記"},{"content":" 想了整晚專題和選課的事，有些失眠。 下午上賽局理論，之後睡了一下。 晚餐吃了過溝的牛肉麵，沒有想像中辣。  ","date":"2021-12-07T12:45:05+08:00","permalink":"https://Luke2336.github.io/p/20211207/","title":"2021/12/07 日記"},{"content":" 寫信給系主任，請他協助畢業學分認定的問題。 晚上 meeting，覺得專題會有些失敗。FFT 轉完後，並不是做矩陣相乘，所以沒辦法用 CSB 做。覺得壓力好大～ 課程時間表出來了，初選大概就是選英文課，再加上高等 Unix、嵌入式系統總整與實作、數值方法、德文三。  ","date":"2021-12-07T12:45:01+08:00","permalink":"https://Luke2336.github.io/p/20211206/","title":"2021/12/06 日記"},{"content":" 爬完山太累，覺得心情不太好，就一直睡覺。 看完了賽局理論的影片。  ","date":"2021-12-07T12:44:56+08:00","permalink":"https://Luke2336.github.io/p/20211205/","title":"2021/12/05 日記"},{"content":" 中午在市區的大遠百吃飯。 下午去造橋爬口山步道。 回去後累到直接睡死，然後七點半才爬起來吃拉麵。  口山步道  從造橋國中旁的登山口上山，全長大約 40 分鐘，人不多的一條路線。 中間有一些小岔路，所以最好還是看著 OpenSteetMap 比較保險。 其他人都跟我走反方向，可能是我這個方向有不少下坡，覺得很陡，需要小心走。 可以看得到海邊和竹南市區，還有高速公路。  造橋車站  只有停區間車的無人車站。 有一些日治時代留下的宿舍。  ","date":"2021-12-04T20:55:15+08:00","image":"https://Luke2336.github.io/post/Diary/20211204/1.jpg","permalink":"https://Luke2336.github.io/p/20211204/","title":"2021/12/04 日記"},{"content":" 原本想出去玩，但上公車後，發現導師寫 email 問中午有沒有空去導聚，於是就在清大下了車。在圖書館待到了中午，掃了一些閒書，發現中文書還是缺乏自己想要找的內容。 導聚去吃了一餐的 La La Kitchen，和兩個大一學弟交換了 FB。 下午在交大圖書館 3F 的語言中心寫多益的模擬題，只寫了一回閱讀題，對了 88/100，算起來大概四百初頭，也就是我聽力得考到三百五比較保險，覺得有些困難。又借了一本單字和一本閱讀模擬題，打算最後衝刺一下。 晚上去逛了慈雲路夜市，買了可麗餅、燒仙草和炸雞翅。 突然發現自己 NSD 的 HW4 和 HW5 都忘記傳連結到 E3，覺得有些憂鬱。  ","date":"2021-12-04T20:55:10+08:00","permalink":"https://Luke2336.github.io/p/20211203/","title":"2021/12/03 日記"},{"content":" 隨機演算法期中考，覺得有些難，感覺在及格邊緣。 下午羽球課打單打比賽，有試著把球往後場拉，但還是覺得自己處於相對被動的狀態。 今天一直忘東忘西在球場，來回去拿了兩次。順便把腳踏車的輪胎打氣，因為不會用，所以就拉了路人問。  ","date":"2021-12-04T20:55:06+08:00","permalink":"https://Luke2336.github.io/p/20211202/","title":"2021/12/02 日記"},{"content":" 寫完 NSD HW5，但其實不知道在寫什麼 \u0026gt;\u0026lt; 沒什麼心情準備隨機的期中考，所以下午就在試著用 pybind 把 nsd project 的 c++ code 包成 python 可以呼叫的 function。 最近開始比較有心情打扮自己，試著穿了白色的麻花毛外套。 晚上很冷，PCCA 報帳完後，去吃了火鍋。  ","date":"2021-12-01T12:24:13+08:00","permalink":"https://Luke2336.github.io/p/20211201/","title":"2021/12/01 日記"},{"content":"專題 Code  簡單來說，CSB 原本論文的作者省略的部分我實作爛掉不少，印了一堆東西才找完 bug。 平常二分搜時，會預設範圍內一定找得到值，但這個習慣讓我 D\u0026amp;C 的邊界壞光光。 因為只紀錄 log ß 個位元，所以乘法時無法還原 col_idx，最後是在 Blk_Ptr 做二分搜，看是在第幾個 Block，才有辦法和正確的位子相乘。 傍晚花了些時間，嘗試將 Code 改為用 pybind11 讓 python 呼叫，很幸運的是居然還支援 OpenMP，省了不少事。  ","date":"2021-12-01T12:24:02+08:00","permalink":"https://Luke2336.github.io/p/20211130/","title":"2021/11/30 日記"},{"content":" 這禮拜壓力很大，有兩個考試和一份作業。 晚上專題 meeting 時，才發現之前寫的 code 有 bug，立即心態炸裂，覺得累到爆，不知道要花多久修 bug，覺得很崩潰。  ","date":"2021-11-29T13:53:19+08:00","permalink":"https://Luke2336.github.io/p/20211129/","title":"2021/11/29 日記"},{"content":"ICPC Asia Taipei 2021  是 NYCU_Pusheen 的最後一場比賽，覺得超級難過。 打爛了，有一題位元 DP 複雜度爛掉，於是就把時間燒光了 QAQ Standing  ","date":"2021-11-29T13:53:12+08:00","image":"https://Luke2336.github.io/post/Diary/20211128/%E5%90%88%E7%85%A7.jpg","permalink":"https://Luke2336.github.io/p/20211128/","title":"2021/11/28 日記"},{"content":" ICPC 第一天報到，太早到台北了，只好坐在摩斯打發時間。 活動結束後，跟隊友去吃藏壽司。  ","date":"2021-11-29T13:53:04+08:00","permalink":"https://Luke2336.github.io/p/20211127/","title":"2021/11/27 日記"},{"content":" 早上去醫院。 中午吃了烏龍麵。 午覺後，看完了賽局理論的影片。 晚上第一次去逛慈雲路夜市，買了地瓜球、烤肉串、燒仙草。  ","date":"2021-11-26T16:35:36+08:00","permalink":"https://Luke2336.github.io/p/20211126/","title":"2021/11/26 日記"},{"content":" 不知道為什麼一早起床體溫就有點高，也覺得很累。 體育課主要在練習跑四點和後兩點的殺球，覺得很累。  多益準備  Google 到的幾個資源，打算 12 月來刷題練速度和耐心。  【免費考題】6個多益線上模擬測驗及考古題資源分享，還有額外驚喜資源！ 【English Reading】英文閱讀練習網站！免費線上TOEIC多益閱讀模擬測驗，增強英語讀寫能力。 ETS TOEIC24.com    單字    English Chinese Synonym     subtlety 微妙    ongoing 進行中    diminutive 矮小的 miniature, little   intrude 侵入 infringe, encroach   inflame 發炎, 激起 agitate, arouse, enrage   plummeted 一落千丈    eradicate 根除 abolish, annihilate, eliminate   swagger 昂首闊步    crave 渴望 covet   affluence 富裕    prime 主要的    demotivate 消極怠工 deactivate   incite 煽動, 引起 abet, agitate   spur 刺激    gloomy 陰沉    depressing 壓抑    rigorous 嚴格的 harsh, miticulous   disperse 分散 scatter   gorgeous 華麗的 brilliant, glorious   utterly 全面地 completely, entirely   unfading 不褪色    arrogant 傲慢的 aloof, bossy, cavalier   immortal 不朽    comprehend 理解    despondent 沮喪的     ","date":"2021-11-25T18:40:52+08:00","permalink":"https://Luke2336.github.io/p/20211125/","title":"2021/11/25 日記"},{"content":" 花了整個下午去看醫生，結果醫生似乎只做到最近，之後就不需要回診了 OAO 其他的時間都在複習賽局理論。 晚餐因為這週末要比賽，所以叫了 KFC 吃。  ","date":"2021-11-25T18:40:46+08:00","permalink":"https://Luke2336.github.io/p/20211124/","title":"2021/11/24 日記"},{"content":" 早上跟 Lin Lee 練球，他請我吃午餐。 賽局理論期中考因為粗心直接掉了二十分。 晚上的體育週，第一場是對上應數系，結果我被叫去打女單，8:25。  ","date":"2021-11-23T08:31:10+08:00","permalink":"https://Luke2336.github.io/p/20211123/","title":"2021/11/23 日記"},{"content":"專題  專題因為期末要報告的關係，老師建議我們收尾。 我覺得我們這學期比較有認真做的東西，大概就只有實作 CSB 的 paper 而已。 老師希望我們把 CSB 套到 AlexNet 上，和一般的 Convolution 做比較。 我自己覺得這個比較有點沒意義，因為每層的 sparsity 都不一定夠大，且 AlexNet 運算的 matrix 也都很小。老師應該單純只是想套個應用上去而已\u0026hellip;\u0026hellip; 但因為時間只剩一個月，所以沒辦法開新的題目，覺得心情有些悶。  ","date":"2021-11-23T08:31:04+08:00","permalink":"https://Luke2336.github.io/p/20211122/","title":"2021/11/22 日記"},{"content":" 今天下午去參加 TIWCEF 的茶會。  TIWCEF  想分享一個很棒的獎學金機會，鼓勵有需要的同學申請。 TIWCEF 是台北國際婦女協會的一個教育基金會，每年開放升大一的清寒學生申請，選出其中約 6~10 名左右的優秀學生，補助大學期間每學期 15000 元。 每個學期會固定舉辦茶會，供大家交流及分享，是個能聽到很多很棒的故事的場合。  ","date":"2021-11-23T08:30:59+08:00","permalink":"https://Luke2336.github.io/p/20211121/","title":"2021/11/21"},{"content":" 覺得滿崩潰的，覺得昨天太廢，都沒做到事，隨機演算法剩下一堆沒讀。 早餐後在想新的研究主題，我們似乎應該多拿點題目在手上做。  想到了 Kirchhoff\u0026rsquo;s Theorem，一個用 determinant 來算生成樹數量的東西。有向圖的版本是 Tutte\u0026rsquo;s Theorem。  有幾個問題讓我不確定這個題目有做的價值。  應用？（查到有 Random Spanning Tree, Electrical Network） Sparse Matrix 的 Determinant 不確定可以做到多快。 可以簡單地轉成動態圖的計算嗎？        ","date":"2021-11-20T11:21:56+08:00","permalink":"https://Luke2336.github.io/p/20211120/","title":"2021/11/20 日記"},{"content":" 看完賽局理論的影片。  ","date":"2021-11-20T11:21:49+08:00","permalink":"https://Luke2336.github.io/p/20211119/","title":"2021/11/19 日記"},{"content":" 今天下午跟宗達寫作業，但還是有幾題沒寫完。 羽球課練「長切放放挑」還有殺球。  ","date":"2021-11-18T18:43:59+08:00","permalink":"https://Luke2336.github.io/p/20211118/","title":"2021/11/18 日記"},{"content":" 算是把 NSD final project 做到一個段落了，發現選的題目好像有點太簡單了，Fruchterman-Reingold 大概兩百行左右就可以寫完了。因為用 pybind11 轉成 .so 檔有點失敗，所以就偷懶直接把結果拿去跑 python，而不是 call c++ 寫好的 function。Debug 完之後還是有些結果很糟糕，主要是算引力跟斥力用的常數很難調。  https://github.com/Luke2336/graph-visualization   晚上和隊友練習，曲線在忙沒有來，但我跟 LinLee 兩個人也開得還算順，但我們只練到 21:30 就收工了，因為 LinLee 離散化用 map 太慢，所以被 TLE。  ","date":"2021-11-18T18:43:54+08:00","permalink":"https://Luke2336.github.io/p/20211117/","title":"2021/11/17 日記"},{"content":" 今天早上去建中路打第二劑 AZ，然後搭小紅巴回學校。整體來說只有手痛痛的，沒有發燒。 傍晚去清夜換手錶的電池，結果他把錶殼敲開來時，還是留下了刮痕，花了 100 元。 自己搭公車去竹東看醫生，結果耗到很晚，連批價櫃台都下班了 QAQ  ","date":"2021-11-18T18:43:49+08:00","permalink":"https://Luke2336.github.io/p/20211116/","title":"2021/11/16 日記"},{"content":" 下面記了一點點 NSD 的筆記，花了一些時間才把作業寫完。 今天的資訊工程演講是在講量子計算，算是挺有趣的，但我還是累到很想睡。  NSD Note Memory manager → Heap, Memory Map\nvolatile store in register\n 5 C API malloc()\ncalloc() → faster than malloc + memory set\n Since the system call is different calloc can get zero initialized pages  realloc()\nfree()\naligned_alloc()\n SIMD   TCMalloc, Jmalloc, ptmalloc\n Double free → error\n Each function has a frame. (in stack)\n valgrind, asan(address sanitizer)\n memory pool\n","date":"2021-11-15T07:10:35+08:00","permalink":"https://Luke2336.github.io/p/20211115/","title":"2021/11/15 日記"},{"content":" 看賽局理論的影片。 寫完了賽局理論的 Homework2，是用 game 去解 maximal matching。  ","date":"2021-11-14T14:35:43+08:00","permalink":"https://Luke2336.github.io/p/20211114/","title":"2021/11/14 日記"},{"content":" 在寫 NSD 的 final project，發現比想像中好寫。 把冰箱囤的檸檬切了泡水喝。 晚餐吃了鹹酥雞。  ","date":"2021-11-14T14:35:37+08:00","permalink":"https://Luke2336.github.io/p/20211113/","title":"2021/11/13 日記"},{"content":" 收到 GEPT 英檢成績，63/93，又是因為聽力沒通過。所以就報了 12/19 的 TOEIC。 下午在複習隨機演算法的 Local Lemma。 睡前練了 TOEIC 的克漏字。  ","date":"2021-11-12T14:28:49+08:00","permalink":"https://Luke2336.github.io/p/20211112/","title":"2021/11/12 日記"},{"content":" 早上隨機演算法上 Lovasz\u0026rsquo;s Local Lemma，覺得有點沒聽懂。 預約了下禮拜二去建中路的診所打 AZ。 下午約宗達一起寫作業，總算全部寫完了。 羽球課和別人打女雙時，不小心敲到別人的球拍，因此心情有點糟。 晚上去二餐吃了雞腿便當，但沒什麼胃口，飯又很硬，也比以前貴很多，覺得 CP 值比自助餐低很多。  ","date":"2021-11-11T19:43:40+08:00","permalink":"https://Luke2336.github.io/p/20211111/","title":"2021/11/11 日記"},{"content":" 考完試後有點閒閒沒事做。 寫了一點隨機演算法的作業，但真的難度太高了，只寫了一半左右。 晚上和隊友練習。  North American Southeast Regional 2019 (Div 1)    ","date":"2021-11-10T15:55:50+08:00","image":"https://Luke2336.github.io/post/Diary/20211110/Standing.png","permalink":"https://Luke2336.github.io/p/20211110/","title":"2021/11/10 日記"},{"content":" 把 CSB 的 Bug 改完，paper 的作者真的沒有認真想清楚邊界問題。 下午考了賽局理論，有一題是考著色問題，覺得有點難，希望有及格。  ","date":"2021-11-10T15:55:42+08:00","permalink":"https://Luke2336.github.io/p/20211109/","title":"2021/11/09 日記"},{"content":"NSD 期中考  一大早就下雨，八點開始考試，題目很少，大概不到一小時就寫完了。 晚上成績就出來了，拿了 23/30，學期成績少了 7 分 QQ  專題  大概跟老師討論了 CSB 的做法。 其他人有把我的 code 拿去平行化。  ","date":"2021-11-10T15:55:36+08:00","permalink":"https://Luke2336.github.io/p/20211108/","title":"2021/11/08 日記"},{"content":" 複習賽局理論。 投了 Microsoft 和 Synopsys，純粹想了解自己大學畢業的市場行情。  ","date":"2021-11-10T15:55:32+08:00","permalink":"https://Luke2336.github.io/p/20211107/","title":"2021/11/07 日記"},{"content":" 看賽局理論的影片。  ","date":"2021-11-10T15:55:24+08:00","permalink":"https://Luke2336.github.io/p/20211106/","title":"2021/11/06 日記"},{"content":" 幾乎都在睡覺的一天，懶得寫作業。  ","date":"2021-11-10T15:55:19+08:00","permalink":"https://Luke2336.github.io/p/20211105/","title":"2021/11/05 日記"},{"content":"羽球課  今天羽球課打了一堆高遠球，跑到後來很沒力，頭也很痛。 終於可以不用戴口罩打球了 \u0026gt;\u0026lt;  專題  早上重看了 CSB 的論文，發現要實作 Z-Morton 的遞迴結構，打算明天重寫一遍。 想了一下，目前只能先把 CSB 的格式寫完，SpMV 的部分不確定該怎麼寫平行化的部分。  ","date":"2021-11-04T20:20:51+08:00","permalink":"https://Luke2336.github.io/p/20211104/","title":"2021/11/04 日記"},{"content":" 因為頭痛睡了一整天，也沒什麼胃口。 手指頭的傷口差不多好了。  ","date":"2021-11-04T20:20:46+08:00","permalink":"https://Luke2336.github.io/p/20211103/","title":"2021/11/03 日記"},{"content":" 賽局理論因為自己有點眼殘，所以就考爆了 QAQ 早上的時間都在實作 CSB，但寫到後面就直接砍掉重練，有點難抓要存的東西。平行運算的部分也想不到要怎麼寫，不確定可不可以直接用 openMP 就好。  ","date":"2021-11-02T16:26:44+08:00","permalink":"https://Luke2336.github.io/p/20211102/","title":"2021/11/02 日記"},{"content":" 晚上沒睡好，半夜一直醒來。 專題一整週都沒什麼進度，不知道晚上該報什麼。 下午去看衛保組的醫生，把左手發炎的膿擠掉，然後手就不能碰水了。 晚上吃不下飯，因此只吃了四個一餐的十元壽司。  ","date":"2021-11-01T12:35:54+08:00","permalink":"https://Luke2336.github.io/p/20211101/","title":"2021/11/01 日記"},{"content":" 複習賽局理論。 有點發燒，於是一直昏睡。  ","date":"2021-11-01T12:35:44+08:00","permalink":"https://Luke2336.github.io/p/20211031/","title":"2021/10/31 日記"},{"content":" 跟旺陽去竹東逛夜市，順便在河濱公園散步。 寫完了 nsd 作業。  ","date":"2021-10-30T13:42:25+08:00","permalink":"https://Luke2336.github.io/p/20211030/","title":"2021/10/30 日記"},{"content":" 繼續處理 nsd 的作業。 腦袋很脹，下午幾乎都在昏睡。  ","date":"2021-10-30T13:42:19+08:00","permalink":"https://Luke2336.github.io/p/20211029/","title":"2021/10/29 日記"},{"content":" 中午上完隨機演算法，照樣和宗達吃了麥當勞。 下午的羽球課是打單打，沒有上新的進度。  ","date":"2021-10-30T13:42:14+08:00","permalink":"https://Luke2336.github.io/p/20211028/","title":"2021/10/28 日記"},{"content":" 稍微寫了一下 nsd 的作業。 下午和隊友把 ICPC 的報名表單填完，還有隊練。  ","date":"2021-10-30T13:42:09+08:00","permalink":"https://Luke2336.github.io/p/20211027/","title":"2021/10/27 日記"},{"content":" 賽局理論 Quiz1，結果考爆了 QQ  ","date":"2021-10-30T13:42:05+08:00","permalink":"https://Luke2336.github.io/p/20211026/","title":"2021/10/26 日記"},{"content":" 為了上早七的課很早起，結果落枕。 晚上 meeting 不明原因就從一小時被拉到兩小時了，我們原本要做的優化似乎 CSB 都做完了，於是得重新想題目。之後去清夜吃了燒餅蛋和豆漿。  ","date":"2021-10-30T13:42:01+08:00","permalink":"https://Luke2336.github.io/p/20211025/","title":"2021/10/25 日記"},{"content":" 今天下午考全民英檢中高級初試，感覺聽力又爆了。  ","date":"2021-10-30T13:41:57+08:00","permalink":"https://Luke2336.github.io/p/20211024/","title":"2021/10/24 日記"},{"content":"TOPC  Scoreboard 最後 pF 來不及寫完。  ","date":"2021-10-23T16:52:58+08:00","image":"https://Luke2336.github.io/post/Diary/20211023/Scoreboard.png","permalink":"https://Luke2336.github.io/p/20211023/","title":"2021/10/23 日記"},{"content":" 早上將賽局理論的影片看完。 之後開始研究 NSD 的 project 要怎麼寫。 晚上複習了英檢的片語。  NSD Proposal  目前是計畫將 simple undirected graph 畫到平面上。 預計用 c++ 寫 force-directed 的 layout，把點的平面座標算出來。 用 Python 將點和邊畫出來。  Python  今天嘗試用 matplotlib 將 python 的部分做個小實驗。 目前卡在座標只能吃 int，不能吃浮點數，這使得我要確保點夠分散，幸好我設定點的數量最多到 1000。  # input.txt 0 3 0 1 1 2 1 3 # output.txt 0 0 10 10 50 15 50 5 1from matplotlib import collections 2import matplotlib.pyplot as plt 3 4coordinate_file = open(\u0026#39;output.txt\u0026#39;, \u0026#39;r\u0026#39;) 5lines = coordinate_file.readlines() 6coordinate_file.close() 7n = len(lines) 8x = [] 9y = [] 10for line in lines: 11 a, b = line.split() 12 x.append(int(a)) 13 y.append(int(b)) 14 15graph_file = open(\u0026#39;input.txt\u0026#39;, \u0026#39;r\u0026#39;) 16lines = graph_file.readlines() 17graph_file.close() 18segments = [] 19for line in lines: 20 a, b = line.split() 21 u = int(a) 22 v = int(b) 23 segments.append([(x[u], y[u]), (x[v], y[v])]) 24 25collection = collections.LineCollection(segments, color=[\u0026#39;red\u0026#39;]*n) 26 27fig, axes = plt.subplots(1, 1) 28axes.add_collection(collection) 29axes.scatter(x, y) 30axes.autoscale() 31 32plt.savefig(\u0026#39;output.png\u0026#39;) 33plt.show() ","date":"2021-10-22T14:00:52+08:00","permalink":"https://Luke2336.github.io/p/20211022/","title":"2021/10/22 日記"},{"content":" 中午和宗達一起吃麥當勞，我們覺得隨機演算法的作業很難，要寫超久。 下午把 NSD project 的 proposal 改了一下。 羽球課是練中場的平球，我覺得我反手拍都跑不到位，然後控球能力也有待加強。等到要練高遠球時，我已經虛脫沒力了，腿超痠的。 晚上的多益課是有學到一些英聽的技巧，但還是覺得老師有一半的時間都拿來講廢話或複習，聽了覺得很無聊。  ","date":"2021-10-22T14:00:45+08:00","permalink":"https://Luke2336.github.io/p/20211021/","title":"2021/10/21 日記"},{"content":" 和 ChromeOS 台北的 leader 聊了一下關於 security team 的 project，覺得比前一天進入狀況，但不確定自己有沒有興趣。 早上起床後寫完了賽局理論的程式作業，但跑出來的結果每次都不太一樣。  ","date":"2021-10-22T14:00:40+08:00","permalink":"https://Luke2336.github.io/p/20211020/","title":"2021/10/20 日記"},{"content":" 早上和 Google 的 ChromeOS 的 audio team 聊了一下，覺得滿有興趣的。 下午實體上了賽局理論，開始講 network 相關的東西，專有名詞有點多，無法進入狀況。  ","date":"2021-10-22T14:00:34+08:00","permalink":"https://Luke2336.github.io/p/20211019/","title":"2021/10/19 日記"},{"content":" 今天資工研討的講者跟上次的一樣無聊。 隨機演算法課在講 Yao\u0026rsquo;s Inequality，用到了一些賽局理論的東西，覺得滿妙的。 收到 Google 的 Email，説 ChromeOS 有個主管對我有興趣。 又被媽媽唸不讀研究所的事。  ","date":"2021-10-18T17:13:38+08:00","permalink":"https://Luke2336.github.io/p/20211018/","title":"2021/10/18 日記"},{"content":" 下午把專題要看的書讀完。 覺得這週壓力超大的，有三樣功課，還有 TOPC 和英檢，然後我賽局理論也跟不太上進度。整個大爆炸，忍不住一直掉眼淚。  ","date":"2021-10-18T17:13:31+08:00","permalink":"https://Luke2336.github.io/p/20211017/","title":"2021/10/17 日記"},{"content":"NCPC 2021  拿了第 14 名，Lin Lee 有過競程二，真是太好了。 要是前場能順一點，後面或許有時間可以解 K。 比完賽之後，Jasmine 學姊請我們吃晚餐。  ","date":"2021-10-18T17:13:25+08:00","image":"https://Luke2336.github.io/post/Diary/20211016/Scoreboard.png","permalink":"https://Luke2336.github.io/p/20211016/","title":"2021/10/16 日記"},{"content":" 下午隊練，hyperbola 練到一半就爆氣不練了。  ","date":"2021-10-18T17:13:19+08:00","permalink":"https://Luke2336.github.io/p/20211015/","title":"2021/10/15 日記"},{"content":" 隨機演算法課講的東西愈來愈聽不懂了 QAQ 下午讀了一點點英文文法。 羽球課整個人像掉進水裡一樣濕。 覺得有些後悔報名了晚上的英文課，覺得沒有太多力氣上課 QAQ  羽球課  先練了前場的小球、勾對角、小發力挑球。老師說前場的口訣是出手快、腳步踩穩、出拍慢。 練了後場高遠球，擊球完要側併步兩步往前。 下課前打了兩場混雙都有贏。  ","date":"2021-10-14T18:35:44+08:00","permalink":"https://Luke2336.github.io/p/20211014/","title":"2021/10/14 日記"},{"content":" 醒來後都在複習隨機演算法，但大致上只補齊了機率的工具，演算法的部分還讀不完。  ","date":"2021-10-13T17:11:46+08:00","permalink":"https://Luke2336.github.io/p/20211013/","title":"2021/10/13 日記"},{"content":" 今天的賽局理論上了 Maximal Independent Set 和 Minimal Multi-dominating Set。 晚上專題的 meeting，拿回了一本平行計算相關的書要讀，覺得這禮拜有點忙。  Code CSES - Josephus Problem I 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8int main() { 9 ios::sync_with_stdio(0), cin.tie(0); 10 int n; 11 cin \u0026gt;\u0026gt; n; 12 if (n == 1) { 13 cout \u0026lt;\u0026lt; \u0026#34;1\\n\u0026#34;; 14 return 0; 15 } 16 vector\u0026lt;bool\u0026gt; die(n); 17 cout \u0026lt;\u0026lt; 2; 18 for (int i = 1, p = 0; i \u0026lt; n; i++) { 19 die[p] = true; 20 while(die[p]) { 21 p = (p + 1) % n; 22 } 23 p = (p + 1) % n; 24 while(die[p]) { 25 p = (p + 1) % n; 26 } 27 cout \u0026lt;\u0026lt; \u0026#39; \u0026#39; \u0026lt;\u0026lt; (p + 1) % n + 1; 28 } 29 cout \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 30 return 0; 31}  SPOJ - SMPDIV 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8int main() { 9 ios::sync_with_stdio(0), cin.tie(0); 10 int T; 11 cin \u0026gt;\u0026gt; T; 12 while (T--) { 13 int n, a, b; 14 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 15 vector\u0026lt;int\u0026gt; ans; 16 for (int i = a; i \u0026lt; n; i += a) { 17 if (i % b) { 18 ans.pb(i); 19 } 20 } 21 for (int i = 0; i \u0026lt; ans.size(); i++) { 22 cout \u0026lt;\u0026lt; ans[i] \u0026lt;\u0026lt; \u0026#34; \\n\u0026#34;[i == ans.size() - 1]; 23 } 24 } 25 return 0; 26}  SPOJ - BSCXOR 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8int main() { 9 ios::sync_with_stdio(0), cin.tie(0); 10 int p, q; 11 cin \u0026gt;\u0026gt; p \u0026gt;\u0026gt; q; 12 cout \u0026lt;\u0026lt; (p ^ q) \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 13 return 0; 14}  SPOJ - SMPSUM 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8inline int sum(int x) { 9 return x * (x + 1) * (2 * x + 1) / 6; 10} 11 12int main() { 13 ios::sync_with_stdio(0), cin.tie(0); 14 int a, b; 15 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 16 cout \u0026lt;\u0026lt; sum(b) - sum(a - 1) \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 17 return 0; 18}  ","date":"2021-10-12T10:39:02+08:00","permalink":"https://Luke2336.github.io/p/20211012/","title":"2021/10/12 日記"},{"content":" 讀完了專題的 Code，發現沒什麼問題。 看完了賽局的影片。  ","date":"2021-10-12T10:38:49+08:00","permalink":"https://Luke2336.github.io/p/20211011/","title":"2021/10/11 日記"},{"content":" 看了新聞的國慶表演。 下午搭國光回新竹，準備連假最後一天趕一下專題的進度。 回到新竹後洗了衣服。  Code SPOJ - HIGHWAYS 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, int\u0026gt; pii; 4#define INF 1000000000 5 6void Dijkstra(const vector\u0026lt;vector\u0026lt;pii\u0026gt;\u0026gt; \u0026amp;G, vector\u0026lt;int\u0026gt; \u0026amp;dis, int s) { 7 dis.assign(G.size(), INF); 8 dis[s] = 0; 9 priority_queue\u0026lt;pii, vector\u0026lt;pii\u0026gt;, greater\u0026lt;pii\u0026gt;\u0026gt; pq; 10 pq.emplace(dis[s], s); 11 while (!pq.empty()) { 12 int u = pq.top().second; 13 pq.pop(); 14 for (auto e : G[u]) { 15 if (dis[e.first] \u0026gt; dis[u] + e.second) { 16 dis[e.first] = dis[u] + e.second; 17 pq.emplace(dis[e.first], e.first); 18 } 19 } 20 } 21} 22 23void solve() { 24 int n, m, s, t; 25 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m \u0026gt;\u0026gt; s \u0026gt;\u0026gt; t; 26 s--, t--; 27 vector\u0026lt;vector\u0026lt;pii\u0026gt;\u0026gt; G(n); 28 for (int i = 0; i \u0026lt; m; i++) { 29 int a, b, c; 30 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; c; 31 a--, b--; 32 G[a].emplace_back(b, c); 33 G[b].emplace_back(a, c); 34 } 35 vector\u0026lt;int\u0026gt; dis; 36 Dijkstra(G, dis, s); 37 if (dis[t] == INF) { 38 cout \u0026lt;\u0026lt; \u0026#34;NONE\\n\u0026#34;; 39 } else { 40 cout \u0026lt;\u0026lt; dis[t] \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 41 } 42} 43 44int main() { 45 int T; 46 cin \u0026gt;\u0026gt; T; 47 while (T--) { 48 solve(); 49 } 50 return 0; 51}  ","date":"2021-10-10T09:39:12+08:00","permalink":"https://Luke2336.github.io/p/20211010/","title":"2021/10/10 日記"},{"content":" 和高中同學約去陽明山爬山，九點半從劍潭站出發，要上山的人比想樣中多。 中午爬完山後在劍潭站附近吃了麵店，在公園散步，之後整個下午泡在路易莎聊天。 晚上去逛了士林夜市。  紗帽山  坐紅 5 到陽明山公車總站，然後從北面登山口爬到太子亭後折返，約爬了不到兩小時。 沿途遇到四隻鍬形蟲和兩隻石龍子。 步道只有接近山頂處沒有遮蔭，但風很大很涼爽，坡度算是滿陡的，戴著口罩爬滿喘的。 山頂可看到中山堂，及七星山和大屯山。  ","date":"2021-10-10T09:39:05+08:00","image":"https://Luke2336.github.io/post/Diary/20211009/2.JPG","permalink":"https://Luke2336.github.io/p/20211009/","title":"2021/10/09 日記"},{"content":" 一大早就回家了，然後就幾乎都在睡覺。  ","date":"2021-10-10T09:38:59+08:00","permalink":"https://Luke2336.github.io/p/20211008/","title":"2021/10/08 日記"},{"content":" 中午和宗達吃麥當勞。 下午體育課被操得滿累的，跑前兩點時大腿有點拉傷。 晚餐吃了新開的自助餐，肉變成不能自己盛，所以有些貴。 晚上的英文課，老師有些囉唆，所以覺得有些失望，有點後悔報名。  ","date":"2021-10-10T09:38:54+08:00","permalink":"https://Luke2336.github.io/p/20211007/","title":"2021/10/07 日記"},{"content":" 整個早上都在寫 nsd 的作業，踩了幾個坑。  發現檔案要用 test_xxx.py 才能被 pytest 抓到。   午覺後寫了隨機演算法的作業，覺得很難。 問了高中同學連假要不要一起出去玩。  ","date":"2021-10-06T17:05:18+08:00","permalink":"https://Luke2336.github.io/p/20211006/","title":"2021/10/06 日記"},{"content":" 寫了一點點隨機演算法的作業。 上了兩節賽局理論。  ","date":"2021-10-05T10:54:31+08:00","permalink":"https://Luke2336.github.io/p/20211005/","title":"2021/10/05 日記"},{"content":" 星期一是很累的一天，早上七點開始連續三堂課，下午要聽兩堂無聊的演講，然後實體上一堂隨機演算法，晚餐後還得專題 meeting。 下午的演講課請了一個幾乎都在大陸工作的 CEO，於是用詞上比較對岸，韋詠祥 Sean 就一直干擾演講，舉止非常失禮。 早上出了星期五要交的作業，下午又得到一份下週四要交的作業，讓我覺得壓力很大，不想回家過節。  ","date":"2021-10-05T10:54:24+08:00","permalink":"https://Luke2336.github.io/p/20211004/","title":"2021/10/04 日記"},{"content":" 早上在寫 code。 下午複習了一點點隨機演算法。 晚上吃了青醬蝦義大利麵。  Code SPOJ - LASTDIG  快速冪。  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8int pow(int a, int b, int mod) { 9 a %= mod; 10 int ans = 1; 11 while (b) { 12 if (b \u0026amp; 1) { 13 ans = ans * a % mod; 14 } 15 b \u0026gt;\u0026gt;= 1; 16 a = a * a % mod; 17 } 18 return ans; 19} 20 21int main() { 22 ios::sync_with_stdio(0), cin.tie(0); 23 int t; 24 cin \u0026gt;\u0026gt; t; 25 while (t--) { 26 int a, b; 27 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 28 cout \u0026lt;\u0026lt; pow(a, b, 10) \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 29 } 30 return 0; 31}  SPOJ - TOANDFRO 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8int main() { 9 ios::sync_with_stdio(0), cin.tie(0); 10 while (1) { 11 int n; 12 cin \u0026gt;\u0026gt; n; 13 if (n == 0) { 14 break; 15 } 16 string s; 17 cin \u0026gt;\u0026gt; s; 18 for (int i = 0; i \u0026lt; n; i++) { 19 for (int j = 0; j \u0026lt; s.length() / n; j++) { 20 if (j % 2) { 21 cout \u0026lt;\u0026lt; s[n - i - 1 + n * j]; 22 } else { 23 cout \u0026lt;\u0026lt; s[i + n * j]; 24 } 25 } 26 } 27 cout \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 28 } 29 return 0; 30}  SPOJ - PT07Z  樹直徑。  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8int bfs(const int src, int \u0026amp;last_v, const vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; \u0026amp;G) { 9 const int inf = G.size(); 10 vector\u0026lt;int\u0026gt; dis(G.size(), inf); 11 queue\u0026lt;int\u0026gt; q; 12 q.push(src); 13 dis[src] = 0; 14 while(!q.empty()) { 15 last_v = q.front(); 16 q.pop(); 17 for (int u : G[last_v]) { 18 if (dis[u] \u0026gt; dis[last_v] + 1) { 19 dis[u] = dis[last_v] + 1; 20 q.push(u); 21 } 22 } 23 } 24 return dis[last_v]; 25} 26 27int main() { 28 ios::sync_with_stdio(0), cin.tie(0); 29 int n; 30 cin \u0026gt;\u0026gt; n; 31 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; G(n); 32 for (int i = 1; i \u0026lt; n; i++) { 33 int a, b; 34 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 35 a--; 36 b--; 37 G[a].pb(b); 38 G[b].pb(a); 39 } 40 int v; 41 bfs(0, v, G); 42 cout \u0026lt;\u0026lt; bfs(v, v, G) \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 43 return 0; 44}  SPOJ - DIVSUM 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8ll solve(const int n) { 9 ll ret = -n; 10 for (int i = sqrt(n); i \u0026gt;= 1; i--) { 11 if (n % i) { 12 continue; 13 } 14 ret += i; 15 if (i * i != n) { 16 ret += n / i; 17 } 18 } 19 return ret; 20} 21 22int main() { 23 ios::sync_with_stdio(0), cin.tie(0); 24 int T; 25 cin \u0026gt;\u0026gt; T; 26 while (T--) { 27 int n; 28 cin \u0026gt;\u0026gt; n; 29 cout \u0026lt;\u0026lt; solve(n) \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 30 } 31 return 0; 32}  SPOJ - FASTFLOW  無向圖的 max-flow。  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7#define inf 10000000000L 8 9class Dinic { 10 private: 11 struct edge { int d, r; ll c; }; 12 vector\u0026lt;vector\u0026lt;edge\u0026gt;\u0026gt; adj; vector\u0026lt;int\u0026gt; lv, ve; int n; 13 bool mklv(int s, int d) { 14 lv.assign(n, -1); lv[s] = 0; queue\u0026lt;int\u0026gt; q({s}); 15 while (!q.empty()) { 16 int v = q.front(); q.pop(); 17 for (auto\u0026amp; e : adj[v]) { 18 if (e.c == 0 || lv[e.d] != -1) continue; 19 lv[e.d] = lv[v] + 1, q.push(e.d); 20 } 21 } 22 return lv[d] \u0026gt; 0; 23 } 24 ll aug(int v, ll f, int d) { 25 if (v == d) return f; 26 for (; ve[v] \u0026lt; adj[v].size(); ve[v]++) { 27 auto\u0026amp; e = adj[v][ve[v]]; 28 if (lv[e.d] != lv[v] + 1 || !e.c) continue; 29 ll sent = aug(e.d, min(f, e.c), d); 30 if (sent \u0026gt; 0) { 31 e.c -= sent, adj[e.d][e.r].c += sent; 32 return sent; 33 } 34 } 35 return 0; 36 } 37 public: 38 // 建空圖。 n 為節點數量 (含 source 和 sink)。 39 Dinic(int n) : n(n + 1) { clear(); } 40 void clear() { adj.assign(n, {}); } 41 void add_edge(int src, int dst, ll cap) { 42 edge ss{dst, (int)adj[dst].size(), cap}; 43 edge dd{src, (int)adj[src].size(), 0}; 44 adj[src].push_back(ss), adj[dst].push_back(dd); 45 } 46 ll max_flow(int s, int d) { 47 ll ret = 0; 48 while (mklv(s, d)) { 49 ve.assign(n, 0); 50 while (ll f = aug(s, inf, d)) ret += f; 51 } 52 return ret; 53 } 54}; 55 56int main() { 57 ios::sync_with_stdio(0), cin.tie(0); 58 int n, m; 59 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 60 Dinic D(n); 61 for (int i = 0; i \u0026lt; m; i++) { 62 int a, b, c; 63 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; c; 64 D.add_edge(a - 1, b - 1, c); 65 D.add_edge(b - 1, a - 1, c); 66 } 67 cout \u0026lt;\u0026lt; D.max_flow(0, n - 1) \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 68 return 0; 69}  SPOJ - AE00 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8int cnt(int n) { 9 int ret = 0; 10 for (int i = 1; i * i \u0026lt;= n; i++) { 11 if (n % i == 0) { 12 ret++; 13 } 14 } 15 return ret; 16} 17 18int main() { 19 ios::sync_with_stdio(0), cin.tie(0); 20 int n; 21 cin \u0026gt;\u0026gt; n; 22 int ans = 0; 23 for (int i = 1; i \u0026lt;= n; i++) { 24 ans += cnt(i); 25 } 26 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 27 return 0; 28}  SPOJ - BUGLIFE  Bicoloring  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8bool solve(const vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; \u0026amp;G, int n) { 9 vector\u0026lt;int\u0026gt; sexual(n); 10 for (int i = 0; i \u0026lt; n; i++) { 11 if (sexual[i]) { 12 continue; 13 } 14 queue\u0026lt;int\u0026gt; q; 15 q.push(i); 16 sexual[i] = 1; 17 while (!q.empty()) { 18 int u = q.front(); 19 q.pop(); 20 for (int uu : G[u]) { 21 if (sexual[uu] == 0) { 22 sexual[uu] = -sexual[u]; 23 q.push(uu); 24 } 25 if (sexual[uu] == sexual[u]) { 26 return false; 27 } 28 } 29 } 30 } 31 return true; 32} 33 34int main() { 35 ios::sync_with_stdio(0), cin.tie(0); 36 int T; 37 cin \u0026gt;\u0026gt; T; 38 for (int ti = 1; ti \u0026lt;= T; ti++) { 39 int n, m; 40 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 41 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; G(n); 42 for (int i = 0; i \u0026lt; m; i++) { 43 int a, b; 44 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 45 a--; 46 b--; 47 G[a].pb(b); 48 G[b].pb(a); 49 } 50 cout \u0026lt;\u0026lt; \u0026#34;Scenario #\u0026#34; \u0026lt;\u0026lt; ti \u0026lt;\u0026lt; \u0026#34;:\\n\u0026#34;; 51 if (solve(G, n)) { 52 cout \u0026lt;\u0026lt; \u0026#34;No suspicious bugs found!\\n\u0026#34;; 53 } else { 54 cout \u0026lt;\u0026lt; \u0026#34;Suspicious bugs found!\\n\u0026#34;; 55 } 56 } 57 return 0; 58}  ","date":"2021-10-03T10:43:35+08:00","permalink":"https://Luke2336.github.io/p/20211003/","title":"2021/10/03 日記"},{"content":" 今天下午和旺陽約好一起去新豐走走。  鳳崎落日登山步道  位於新竹新豐，靠近西濱。 從蓮花寺的入口上山，到觀景平台的咖啡店看夕陽後折返，下山跟著別人的路線走稜線，因此不到半小時就下山了，中途有看到碉堡。 有一些岔路，可能會需要先查好地圖再開始爬。 步道整理的不錯，但有些路段沒有石階，只有原始的石頭和沙地，走起來就會滑。今天全程幾乎都有遮蔭，因此不算太熱，風景也很不錯。 晚餐去了南寮新的市集，但人很多，消費也偏高。  Code SPOJ - MST  找 minimum spanning tree 的 cost。  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;ll, int\u0026gt; pii; 6#define pb push_back 7#define INF 1000000000000L 8 9ll mst(const vector\u0026lt;vector\u0026lt;pii\u0026gt;\u0026gt; \u0026amp;G, int n) { 10 vector\u0026lt;ll\u0026gt; dis(n, INF); 11 vector\u0026lt;bool\u0026gt; inmst(n); 12 priority_queue\u0026lt;pii, vector\u0026lt;pii\u0026gt;, greater\u0026lt;pii\u0026gt;\u0026gt; pq; 13 dis[0] = 0; 14 pq.emplace(dis[0], 0); 15 ll ret = 0; 16 while (!pq.empty()) { 17 int u = pq.top().second; 18 pq.pop(); 19 if (inmst[u]) { 20 continue; 21 } 22 inmst[u] = true; 23 ret += dis[u]; 24 for (auto e : G[u]) { 25 if (e.second \u0026lt; dis[e.first]) { 26 dis[e.first] = e.second; 27 pq.emplace(dis[e.first], e.first); 28 } 29 } 30 } 31 return ret; 32} 33 34int main() { 35 ios::sync_with_stdio(0), cin.tie(0); 36 int n, m; 37 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 38 vector\u0026lt;vector\u0026lt;pii\u0026gt;\u0026gt; G(n); 39 for (int i = 0; i \u0026lt; m; i++) { 40 int a, b, c; 41 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; c; 42 a--, b--; 43 G[a].emplace_back(b, c); 44 G[b].emplace_back(a, c); 45 } 46 cout \u0026lt;\u0026lt; mst(G, n) \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 47 return 0; 48}  ","date":"2021-10-02T13:32:08+08:00","image":"https://Luke2336.github.io/post/Diary/20211002/1.jpg","permalink":"https://Luke2336.github.io/p/20211002/","title":"2021/10/02 日記"},{"content":" 午餐吃了 pizza。 午覺後把賽局理論的影片看完。 晚上洗完衣服後，寫了一些 SPOJ 的題目。  Code SPOJ - AAC1  簡單的 BFS 找最短路。  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8int solve(vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; \u0026amp;G, int src, int dst) { 9 vector\u0026lt;int\u0026gt; dis(G.size(), -1); 10 queue\u0026lt;int\u0026gt; q; 11 q.push(src); 12 dis[src] = 0; 13 while (!q.empty()) { 14 if (dis[dst] != -1) { 15 return dis[dst]; 16 } 17 int u = q.front(); 18 q.pop(); 19 for (int uu : G[u]) { 20 if (dis[uu] == -1) { 21 q.push(uu); 22 dis[uu] = dis[u] + 1; 23 } 24 } 25 } 26} 27 28int main() { 29 ios::sync_with_stdio(0), cin.tie(0); 30 int T; 31 cin \u0026gt;\u0026gt; T; 32 while (T--) { 33 int n, m; 34 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 35 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; G(n); 36 for (int i = 0; i \u0026lt; m; i++) { 37 int a, b; 38 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 39 a--; 40 b--; 41 G[a].pb(b); 42 G[b].pb(a); 43 } 44 cout \u0026lt;\u0026lt; solve(G, 0, n - 1) \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 45 } 46 return 0; 47}  ","date":"2021-10-01T19:59:02+08:00","permalink":"https://Luke2336.github.io/p/20211001/","title":"2021/10/01 日記"},{"content":" 和註冊組和系辦討論過後，終於對免修的學分算法有了共識，感謝一個管院的註冊組阿姨。  ","date":"2021-10-01T19:58:50+08:00","permalink":"https://Luke2336.github.io/p/20210930/","title":"2021/09/30 日記"},{"content":" 教師節，但我沒心情傳任何訊息給老師們。 下午的賽局理論覺得滿有趣的，於是有認真上課。  ","date":"2021-10-01T19:58:34+08:00","permalink":"https://Luke2336.github.io/p/20210928/","title":"2021/09/28 日記"},{"content":" 晚上和元元聊天。 晚上去 meeting，覺得要做的專題很難推出一個公式。  ","date":"2021-09-27T15:32:33+08:00","permalink":"https://Luke2336.github.io/p/20210927/","title":"2021/09/27 日記"},{"content":" 和隊友在計中練習，去清夜買晚餐。  ","date":"2021-09-27T15:32:27+08:00","permalink":"https://Luke2336.github.io/p/20210926/","title":"2021/09/26 日記"},{"content":" 沒做什麼事的一天，跟隊友聊了一下，一起吃晚餐。  ","date":"2021-09-27T15:32:22+08:00","permalink":"https://Luke2336.github.io/p/20210925/","title":"2021/09/25 日記"},{"content":" 拍了畢業照。  ","date":"2021-09-27T15:32:18+08:00","permalink":"https://Luke2336.github.io/p/20210924/","title":"2021/09/24 日記"},{"content":" 滿無聊的一天。 本來想去打球，但揪不到人。  ","date":"2021-09-23T09:58:20+08:00","permalink":"https://Luke2336.github.io/p/20210923/","title":"2021/09/23 日記"},{"content":" 因為換手機的緣故，學校找不到我，於是就又跟我家人 OOXX\u0026hellip;。 去看婦產科，結果是多囊性卵巢，接受了醫生的建議，吃調經藥治療。  ","date":"2021-09-23T09:58:15+08:00","permalink":"https://Luke2336.github.io/p/20210922/","title":"2021/09/22 日記"},{"content":" 早上刷了幾題 AtCoder 和寫了一張書法。 學長的女朋友不讓我再跟他見面。 我心情很不好，於是晚上就折騰了一波。  ","date":"2021-09-23T09:58:09+08:00","permalink":"https://Luke2336.github.io/p/20210921/","title":"2021/09/21 日記"},{"content":"今天約旺陽去寶二水庫，晚餐吃了科技生活館的漢堡王，出門時忘記帶防曬乳，於是又多買了一瓶。\n雙胞胎井  去程有特地路過這個井，附近有些人家居住。  寶山第二水庫  路線全長 10 公里，基本上都是柏油路，不像寶一水庫有步道。 選擇把車停在公廁附近，走了前面 2 公里的路段，後面一段則是用騎車的。 沿路上很多毛毛蟲、蝴蝶、蜻蜓、蜘蛛，但幾乎沒有遇到蚊子。 雖然是下午三點才去，但沿路沒有遮蔭，所以還滿熱的。 靠近傍晚散步的人才漸漸變多。  ","date":"2021-09-20T21:29:54+08:00","image":"https://Luke2336.github.io/post/Diary/20210920/scene.jpg","permalink":"https://Luke2336.github.io/p/20210920/","title":"2021/09/20 日記"},{"content":"A - Disjoint Set Union 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8class UnionTree { 9private: 10 vector\u0026lt;int\u0026gt; par, sz; 11public: 12 UnionTree(int n) { 13 par.resize(n); 14 for (int i = 0; i \u0026lt; n; i++) { 15 par[i] = i; 16 } 17 sz.resize(n, 1); 18 } 19 int findPar(int x) { 20 return par[x] = (x == par[x] ? x : findPar(par[x])); 21 } 22 bool isSame(int a, int b) { 23 return findPar(a) == findPar(b); 24 } 25 void uni(int a, int b) { 26 if (isSame(a, b)) { 27 return; 28 } 29 a = par[a]; 30 b = par[b]; 31 if (sz[a] \u0026lt; sz[b]) { 32 swap(a, b); 33 } 34 sz[a] += sz[b]; 35 par[b] = a; 36 } 37}; 38 39int main() { 40 ios::sync_with_stdio(0), cin.tie(0); 41 int n, q; 42 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; q; 43 UnionTree UT(n); 44 for (int i = 0; i \u0026lt; q; i++) { 45 int t, u, v; 46 cin \u0026gt;\u0026gt; t \u0026gt;\u0026gt; u \u0026gt;\u0026gt; v; 47 if (t == 0) { 48 UT.uni(u, v); 49 } else { 50 cout \u0026lt;\u0026lt; UT.isSame(u, v) \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 51 } 52 } 53 return 0; 54}  B - Fenwick Tree 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7#define maxn 500005 8 9class RangeUpdateBIT { 10 private: 11 ll d[maxn], dd[maxn]; 12 ll sum(int i) { 13 ll s = 0, ss = 0; 14 int c = i + 1; 15 while (i \u0026gt; 0) s += d[i], ss += dd[i], i -= i \u0026amp; -i; 16 return c * s - ss; 17 } 18 void add(int i, ll v) { 19 int c = i; 20 while (i \u0026lt; maxn) 21 d[i] += v, dd[i] += c * v, i += i \u0026amp; -i; 22 } 23 public: 24 RangeUpdateBIT() { 25 memset(d, 0, sizeof(d)); 26 memset(dd, 0, sizeof(dd)); 27 } 28 ll sum(int l, int r) { return sum(r) - sum(l - 1); } 29 void add(int l, int r, ll v) { 30 add(l, v), add(r + 1, -v); 31 } 32}; 33 34int main() { 35 ios::sync_with_stdio(0), cin.tie(0); 36 int n, q; 37 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; q; 38 RangeUpdateBIT BIT; 39 for (int i = 0; i \u0026lt; n; i++) { 40 int a; 41 cin \u0026gt;\u0026gt; a; 42 BIT.add(i + 1, i + 1, a); 43 } 44 for (int i = 0; i \u0026lt; q; i++) { 45 int t; 46 cin \u0026gt;\u0026gt; t;; 47 if (t == 0) { 48 int p, x; 49 cin \u0026gt;\u0026gt; p \u0026gt;\u0026gt; x; 50 BIT.add(p + 1, p + 1, x); 51 } else { 52 int l, r; 53 cin \u0026gt;\u0026gt; l \u0026gt;\u0026gt; r; 54 cout \u0026lt;\u0026lt; BIT.sum(l + 1, r) \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 55 } 56 } 57 return 0; 58}  D - Maxflow  參考：https://zenn.dev/wapa5pow/articles/practice2-d-d7592ec448c361102bb8。  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3#include \u0026lt;atcoder/all\u0026gt;4using namespace std; 5using namespace atcoder; 6typedef long long ll; 7typedef pair\u0026lt;int, int\u0026gt; pii; 8#define pb push_back 9 10int main() { 11 ios::sync_with_stdio(0), cin.tie(0); 12 int n, m; 13 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 14 vector\u0026lt;string\u0026gt; input(n); 15 for (int i = 0; i \u0026lt; n; i++) { 16 cin \u0026gt;\u0026gt; input[i]; 17 } 18 mf_graph\u0026lt;int\u0026gt; G(n * m + 2); 19 int src = n * m; 20 int dst = src + 1; 21 const int dx[4] = {1, -1, 0, 0}; 22 const int dy[4] = {0, 0, 1, -1}; 23 for (int i = 0; i \u0026lt; n; i++) { 24 for (int j = 0; j \u0026lt; m; j++) { 25 if (input[i][j] == \u0026#39;#\u0026#39;) { 26 continue; 27 } 28 int id = i * m + j; 29 if ((i + j) \u0026amp; 1) { // white 30 G.add_edge(id, dst, 1); 31 } else { // black 32 G.add_edge(src, id, 1); 33 for (int di = 0; di \u0026lt; 4; di++) { 34 int ii = i + dx[di]; 35 int jj = j + dy[di]; 36 if (ii \u0026lt; 0 || ii \u0026gt;= n || 37 jj \u0026lt; 0 || jj \u0026gt;= m || 38 input[ii][jj] == \u0026#39;#\u0026#39;) { 39 continue; 40 } 41 int id2 = ii * m + jj; 42 G.add_edge(id, id2, 1); 43 } 44 } 45 } 46 } 47 auto output = input; 48 int max_flow = G.flow(src, dst); 49 for (auto e : G.edges()) { 50 if (e.from == src || e.to == dst || e.flow == 0) { 51 continue; 52 } 53 int x1 = e.from / m; 54 int x2 = e.to / m; 55 int y1 = e.from % m; 56 int y2 = e.to % m; 57 if (x1 == x2) { 58 if (y1 \u0026gt; y2) { 59 swap(y1, y2); 60 } 61 output[x1][y1] = \u0026#39;\u0026gt;\u0026#39;; 62 output[x2][y2] = \u0026#39;\u0026lt;\u0026#39;; 63 } else if (y1 == y2) { 64 if (x1 \u0026gt; x2) { 65 swap(x1, x2); 66 } 67 output[x1][y1] = \u0026#39;v\u0026#39;; 68 output[x2][y2] = \u0026#39;^\u0026#39;; 69 } 70 } 71 cout \u0026lt;\u0026lt; max_flow \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 72 for (int i = 0; i \u0026lt; n; i++) { 73 cout \u0026lt;\u0026lt; output[i] \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 74 } 75 return 0; 76}  E - MinCostFlow  參考：https://zenn.dev/wapa5pow/articles/practice2-e-e6ce54a9fd90bfb9afbc。  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3#include \u0026lt;atcoder/all\u0026gt;4using namespace std; 5using namespace atcoder; 6typedef long long ll; 7typedef pair\u0026lt;int, int\u0026gt; pii; 8#define pb push_back 9 10int main() { 11 ios::sync_with_stdio(0), cin.tie(0); 12 int n, k; 13 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; k; 14 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; input(n, vector\u0026lt;int\u0026gt;(n)); 15 for (int i = 0; i \u0026lt; n; i++) { 16 for (int j = 0; j \u0026lt; n; j++) { 17 cin \u0026gt;\u0026gt; input[i][j]; 18 } 19 } 20 const int max_cap = 1000000009; 21 const int inf = 1000000009; 22 int src = 2 * n; 23 int snk = src + 1; 24 mcf_graph\u0026lt;int, ll\u0026gt; G(2 * n + 2); 25 for (int i = 0; i \u0026lt; n; i++) { 26 for (int j = 0; j \u0026lt; n; j++) { 27 G.add_edge(i, j + n, 1, max_cap - input[i][j]); 28 } 29 G.add_edge(src, i, k, 0); 30 G.add_edge(i + n, snk, k, 0); 31 } 32 G.add_edge(src, snk, inf, max_cap); 33 G.flow(src, snk, n * k); 34 vector\u0026lt;vector\u0026lt;char\u0026gt;\u0026gt; output(n, vector\u0026lt;char\u0026gt;(n, \u0026#39;.\u0026#39;)); 35 ll ans = 0; 36 for (auto e : G.edges()) { 37 if (e.from == src || e.to == snk || e.flow == 0) { 38 continue; 39 } 40 int i = e.from; 41 int j = e.to - n; 42 output[i][j] = \u0026#39;X\u0026#39;; 43 ans += max_cap - e.cost; 44 } 45 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 46 for (int i = 0; i \u0026lt; n; i++) { 47 for (int j = 0; j \u0026lt; n; j++) { 48 cout \u0026lt;\u0026lt; output[i][j]; 49 } 50 cout \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 51 } 52 return 0; 53}  F - Convolution 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3#include \u0026lt;atcoder/all\u0026gt;4using namespace std; 5using namespace atcoder; 6typedef long long ll; 7typedef pair\u0026lt;int, int\u0026gt; pii; 8#define pb push_back 9 10int main() { 11 ios::sync_with_stdio(0), cin.tie(0); 12 int N, M; 13 cin \u0026gt;\u0026gt; N \u0026gt;\u0026gt; M; 14 vector\u0026lt;int\u0026gt; a(N), b(M); 15 for (int i = 0; i \u0026lt; N; i++) { 16 cin \u0026gt;\u0026gt; a[i]; 17 } 18 for (int i = 0; i \u0026lt; M; i++) { 19 cin \u0026gt;\u0026gt; b[i]; 20 } 21 auto c = convolution(a, b); 22 for (int i = 0; i \u0026lt; N + M - 1; i++) { 23 cout \u0026lt;\u0026lt; c[i] \u0026lt;\u0026lt; \u0026#34; \\n\u0026#34;[i == N + M - 2]; 24 } 25 return 0; 26}  G - SCC 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3#include \u0026lt;atcoder/all\u0026gt;4using namespace std; 5using namespace atcoder; 6typedef long long ll; 7typedef pair\u0026lt;int, int\u0026gt; pii; 8#define pb push_back 9 10int main() { 11 ios::sync_with_stdio(0), cin.tie(0); 12 int n, m; 13 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 14 scc_graph G(n); 15 for (int i = 0; i \u0026lt; m; i++) { 16 int a, b; 17 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 18 G.add_edge(a, b); 19 } 20 auto ans = G.scc(); 21 cout \u0026lt;\u0026lt; ans.size() \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 22 for (auto v : ans) { 23 cout \u0026lt;\u0026lt; v.size(); 24 for (int i : v) { 25 cout \u0026lt;\u0026lt; \u0026#39; \u0026#39; \u0026lt;\u0026lt; i; 26 } 27 cout \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 28 } 29 return 0; 30}  H - Two SAT 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3#include \u0026lt;atcoder/all\u0026gt;4using namespace std; 5using namespace atcoder; 6typedef long long ll; 7typedef pair\u0026lt;int, int\u0026gt; pii; 8#define pb push_back 9 10int main() { 11 ios::sync_with_stdio(0), cin.tie(0); 12 int n, d; 13 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; d; 14 vector\u0026lt;int\u0026gt; a(n * 2); 15 two_sat ts(n * 2); 16 for (int i = 0; i \u0026lt; n; i++) { 17 cin \u0026gt;\u0026gt; a[i] \u0026gt;\u0026gt; a[i + n]; 18 ts.add_clause(i, 1, i + n, 1); 19 } 20 for (int i = 0; i \u0026lt; 2 * n; i++) { 21 for (int j = i + 1; j \u0026lt; 2 * n; j++) { 22 if (abs(a[i] - a[j]) \u0026lt; d) { 23 ts.add_clause(i, 0, j, 0); 24 } 25 } 26 } 27 bool sat = ts.satisfiable(); 28 if (sat) { 29 cout \u0026lt;\u0026lt; \u0026#34;Yes\\n\u0026#34;; 30 } else { 31 cout \u0026lt;\u0026lt; \u0026#34;No\\n\u0026#34;; 32 return 0; 33 } 34 auto ans = ts.answer(); 35 for (int i = 0; i \u0026lt; n; i++) { 36 if (ans[i]) { 37 cout \u0026lt;\u0026lt; a[i] \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 38 } else { 39 cout \u0026lt;\u0026lt; a[i + n] \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 40 } 41 } 42 return 0; 43}  ","date":"2021-09-20T10:03:41+08:00","permalink":"https://Luke2336.github.io/p/atcoder-practice2/","title":"AtCode Library Practice Contest"},{"content":" 今天和學長去巨城逛街。  晚餐吃了 4F 的美食街，挑了石鍋拌飯吃，$180。 有看到一條 MAC 的口紅，有喜歡但沒有特價，就沒買了。   晚上看了來自深淵 深沉靈魂的黎明。  ","date":"2021-09-19T10:02:27+08:00","permalink":"https://Luke2336.github.io/p/20210919/","title":"2021/09/19 日記"},{"content":" 晚上看了電影「來自紅花坂」（コクリコ坂から）。  AZ 疫苗  大約從昨天 10 點過後開始發燒，目前總共吃了三顆退燒藥。 一整天幾乎都在睡覺，主要的症狀有頭痛、眼窩痛、發燒、肌肉關節痠痛。  ","date":"2021-09-18T20:24:47+08:00","image":"https://Luke2336.github.io/post/Diary/20210918/T.jpg","permalink":"https://Luke2336.github.io/p/20210918/","title":"2021/09/18 日記"},{"content":" 下午去馬偕打 AZ，因為之前針灸有暈過針，所以就被要求躺著打了。  ","date":"2021-09-17T14:16:44+08:00","image":"https://Luke2336.github.io/post/Diary/20210917/AZ.jpg","permalink":"https://Luke2336.github.io/p/20210917/","title":"2021/09/17 日記"},{"content":" 隨機演算法複習了星期一教的東西，新的進度不多，只多了 Min-Cut 的 Contraction Approach。 體育課線上，大概半小時多就下課了。  Code CSES1688 - Company Queries II  LCA 模板題。  1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#pragma GCC optimization (\u0026#34;O3\u0026#34;) 4#include\u0026lt;bits/stdc++.h\u0026gt;5using namespace std; 6typedef long long ll; 7typedef pair\u0026lt;int, int\u0026gt; pii; 8#define pb push_back 9 10class SparseTableTarjan { 11 private: 12 int maxlg; 13 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; anc; 14 vector\u0026lt;int\u0026gt; dep; 15 void dfs(int u, vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt;\u0026amp; edge, int d) { 16 dep[u] = d; 17 for (int i = 1; i \u0026lt; maxlg; i++) 18 if (anc[u][i - 1] == -1) break; 19 else anc[u][i] = anc[anc[u][i - 1]][i - 1]; 20 for (int a : edge[u]) { 21 if (dep[a] != -1) continue; 22 anc[a][0] = u; 23 dfs(a, edge, d + 1); 24 } 25 } 26 public: 27 SparseTableTarjan(vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt;\u0026amp; edge, int root) { 28 int n = edge.size(); 29 maxlg = ceil(log2(n)); 30 anc.assign(n, vector\u0026lt;int\u0026gt;(maxlg, -1)); 31 dep.assign(n, -1); 32 dfs(root, edge, 0); 33 } 34 int lca(int a, int b) { 35 if (dep[a] \u0026gt; dep[b]) swap(a, b); 36 for (int k = 0; dep[b] - dep[a]; k++) 37 if (((dep[b] - dep[a]) \u0026gt;\u0026gt; k) \u0026amp; 1) b = anc[b][k]; 38 if (a == b) return a; 39 for (int k = maxlg - 1; k \u0026gt;= 0; k--) 40 if (anc[a][k] != anc[b][k]) 41 a = anc[a][k], b = anc[b][k]; 42 return anc[a][0]; 43 } 44 int dist(int a, int b) { 45 return dep[a] + dep[b] - 2 * dep[lca(a, b)]; 46 } 47}; 48 49int main() { 50 ios::sync_with_stdio(0), cin.tie(0); 51 int n, q; 52 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; q; 53 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; G(n); 54 for (int i = 1; i \u0026lt; n; i++) { 55 int p; 56 cin \u0026gt;\u0026gt; p; 57 p--; 58 G[i].pb(p); 59 G[p].pb(i); 60 } 61 SparseTableTarjan ST(G, 0); 62 while (q--) { 63 int a, b; 64 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 65 cout \u0026lt;\u0026lt; ST.lca(a - 1, b - 1) + 1 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 66 } 67 return 0; 68}  ","date":"2021-09-16T11:59:06+08:00","permalink":"https://Luke2336.github.io/p/20210916/","title":"2021/09/16 日記"},{"content":" 今天才發現專題二換指導老師，要重新給兩個老師簽名，覺得好麻煩，好不想處理。 心情不太好，覺得有些熱壞了。 中午去剪頭髮，花了 $320 洗加剪。 晚上很累，跟 PCCA 開會，然後吃了摩斯，之後就睡了。  ","date":"2021-09-15T17:52:35+08:00","permalink":"https://Luke2336.github.io/p/20210915/","title":"2021/09/15 日記"},{"content":" 一早起床才發現早八的西文要到 9/28 才開始上課。 下午上了賽局理論，覺得內容很感興趣，但英授的品質不佳。 約了專題教授明天下午聊天。 晚上去吃了甕窯雞。  ","date":"2021-09-14T17:51:01+08:00","permalink":"https://Luke2336.github.io/p/20210914/","title":"2021/09/14 日記"},{"content":" 跑了一趟系辦，把免修的文件作更改，順路去生輔組辦事。 資訊工程研討只要寫 150 字的心得，但他請的講者，有三分之一我都沒興趣。 待在宿舍上課感覺有些煩躁。 專題的事讓我有些憂鬱。 把一些舊課本丟到清交二手版上便宜賣，只剩下數位電路沒賣掉。  ","date":"2021-09-13T06:40:40+08:00","permalink":"https://Luke2336.github.io/p/20210913/","title":"2021/09/13 日記"},{"content":" 全身肌肉酸痛的一天。  ","date":"2021-09-13T06:40:06+08:00","permalink":"https://Luke2336.github.io/p/20210912/","title":"2021/09/12 日記"},{"content":" 去系辦處理抵免相關事務。  資工系羽暑訓  覺得今天外面的人很少，於是有比較多的場地練習。 跟電機系相比，比較多的時間是在練球，所以練到比較累。  Code ZJ a017: 五則運算 1while True: 2 try: 3 print(eval(input().replace(\u0026#39;/\u0026#39;, \u0026#39;//\u0026#39;))) 4 except: 5 break ZJ b557: 直角三角形 1#include \u0026lt;bits/stdc++.h\u0026gt; 2using namespace std; 3vector\u0026lt;tuple\u0026lt;int, int, int\u0026gt;\u0026gt; v; 4void init() { 5 for (int i = 1; i \u0026lt;= 100; i++) { 6 for (int j = i; j \u0026lt;= 100; j++) { 7 for (int k = j; k \u0026lt;= 100; k++) { 8 if (i * i + j * j == k * k) { 9 v.emplace_back(i, j, k); 10 } 11 } 12 } 13 } 14} 15int main() { 16 init(); 17 int T; 18 cin \u0026gt;\u0026gt; T; 19 while (T--) { 20 int n; 21 cin \u0026gt;\u0026gt; n; 22 int cnt[101] = {}; 23 for (int i = 0; i \u0026lt; n; i++) { 24 int l; 25 cin \u0026gt;\u0026gt; l; 26 cnt[l]++; 27 } 28 long long ans = 0; 29 for (auto t : v) { 30 ans += cnt[get\u0026lt;0\u0026gt;(t)] * cnt[get\u0026lt;1\u0026gt;(t)] * cnt[get\u0026lt;2\u0026gt;(t)]; 31 } 32 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 33 } 34 return 0; 35} ZJ b971: 等差數列 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8int main() { 9 ios::sync_with_stdio(0), cin.tie(0); 10 int a, b, d; 11 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; d; 12 for (int i = a; i != b; i += d) { 13 cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34; \u0026#34;; 14 } 15 cout \u0026lt;\u0026lt; b \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 16 return 0; 17}  CSES1707 - Graph Girth  枚舉拔每條邊 (i, j)，做 BFS 找 i, j 的最短路  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8int main() { 9 ios::sync_with_stdio(0), cin.tie(0); 10 int n, m; 11 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 12 int INF = n + 10; 13 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; G(n + 1); 14 for (int i = 0, a, b; i \u0026lt; m; i++) { 15 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 16 G[a].pb(b); 17 G[b].pb(a); 18 } 19 int ans = INF; 20 for (int i = 1; i \u0026lt;= n; i++) { 21 for (int j : G[i]) { 22 vector\u0026lt;bool\u0026gt; visit(n + 1); 23 queue\u0026lt;int\u0026gt; q, dis; 24 q.push(i), dis.push(1); 25 visit[i] = true; 26 while (!q.empty()) { 27 int u = q.front(); 28 q.pop(); 29 int d = dis.front(); 30 dis.pop(); 31 if (u == j) { 32 ans = min(ans, d); 33 break; 34 } 35 for (int uu : G[u]) { 36 if ((i == u \u0026amp;\u0026amp; j == uu) || (j == u \u0026amp;\u0026amp; i == uu)) 37 continue; 38 if (!visit[uu]) { 39 visit[uu] = true; 40 q.push(uu), dis.push(d + 1); 41 } 42 } 43 } 44 } 45 } 46 if (ans == INF) ans = -1; 47 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 48 return 0; 49}  ","date":"2021-09-11T08:48:10+08:00","permalink":"https://Luke2336.github.io/p/20210911/","title":"2021/09/11 日記"},{"content":"整體來說我都是在 WFH，只有在剛二級時回台北體驗 4 天的 Office 生活。我的 Team 的辦公室是在 101 的 73 樓，其他像是板橋和新店的實習生數量就比較多。\n期間認識了滿多人，有一部分是在國外留學，暑假在台灣實習的朋友，有一部分是台大的朋友，當然清交也有少部分的人，剛好自己的學妹和直屬學姊都有申請上。STEP 女生收得滿多的，於是有時候就會遠端一起聊天，互相認識。比較有趣的是，台灣的 Intern 在中間自己辦了一次互相認識的活動。不然今年遠端，intern 們就比較沒機會了解互相的 project。\n如果不是明年要畢業了，真的很希望能有機會實體 intern 一次。\n申請  請看這篇。  時間  20210621～20210910。 每週五天，每天八小時，但其實時間很彈性，不用像某些公司還得打卡。 每個人的時間大約都是 12 週以上，時間是配合放暑假和開學的時間自己決定的。  內容  每個人都會分到一個 host 跟一個 co-host，然後會 weekly 或 biweekly 開會。 我的 project 大致上是用 Python 寫 unit test 相關的東西。 有機會參與到 Team 裡的會議，但印象中不是強制的。 內部有各種課程影片或演講，都可以自由觀看和參加。 除了自己 Team 內的會議，大部分的活動都是用英文進行。 比較喜歡的部分是，Google 內部有很多短網址可以使用，也有自己內部的 search engine。 幾乎可以看到內部大部分的 code，有一套還不錯用的 code review 系統，對 code review 也很講究。 midpoint 和 final 各有一次自我評量，還有 host 的評價，也會開會討論進度，覺得是很有幫助的制度，會讓自己知道哪裡還需要改善。 最後結束的時候會有一次 presentation 的機會。  自我成長  覺得體驗了 Software Engineer 的生活，讓我能更清楚的考慮自己未來升學和就業的方向。有機會和內部的工程師聊天，讓我多了一些新的價值觀，也漸漸學會要如何調適工作和生活。 對 Python 和 Git 等工具變得比較熟悉，原本真的有點像一張白紙，只能說自己平常技能樹點得太 Theoretical 了。整體來說，碰到了不少偏底層的東西，體會到為什麼學校的基礎課程有演算法、計算機組織、作業系統等等了。 了解 Design Doc. 該長怎樣，看了很多 Doc 後覺得進步很多，覺得以後自己寫 side project 時也可以做類似的紀錄。  福利  優渥的薪水，具體數字沒辦法說，據說 SWE intern 比 STEP 高薪。 有租屋補助，所以我認為不管是不是北部人都可以來體驗。 進辦公室後，有早午餐吃，還有很棒的零食區，還可以每天練習拉花。 有轉正的機會，但主要是看 project 的結果和 host 的評價。  ","date":"2021-09-10T13:18:58+08:00","image":"https://Luke2336.github.io/post/Other/Google-Intern/scene.jpg","permalink":"https://Luke2336.github.io/p/google-intern/","title":"Google Intern Experience"},{"content":"預約疫苗  總算預約到疫苗了，打算把中秋連假用來消耗副作用。  結束實習  今天是實習最後一天，和 Host 討論了 Conversion 相關的話題。 總體來說，這次實習算是有及格吧。  Code CSES1680 - Longest Flight Route  找點 1 到點 n 的最長路徑。 拓樸排序＋DP。  1// DP on DAG 2// Topological Sort 3#pragma GCC optimization (\u0026#34;O3\u0026#34;) 4#include\u0026lt;bits/stdc++.h\u0026gt;5using namespace std; 6typedef long long ll; 7typedef pair\u0026lt;int, int\u0026gt; pii; 8#define pb push_back 9 10int main() { 11 ios::sync_with_stdio(0), cin.tie(0); 12 int n, m; 13 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 14 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; G(n + 1); 15 vector\u0026lt;int\u0026gt; par(n + 1); 16 vector\u0026lt;int\u0026gt; deg(n + 1); 17 vector\u0026lt;int\u0026gt; dis(n + 1, -1e9); 18 dis[1] = 0; 19 for (int i = 0; i \u0026lt; m; i++) { 20 int a, b; 21 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 22 G[a].pb(b); 23 deg[b]++; 24 } 25 queue\u0026lt;int\u0026gt; q; 26 for (int i = 1; i \u0026lt;= n; i++) { 27 if (!deg[i]) { 28 q.push(i); 29 } 30 } 31 while (!q.empty()) { 32 int u = q.front(); 33 q.pop(); 34 for (int uu : G[u]) { 35 deg[uu]--; 36 if (!deg[uu]) { 37 q.push(uu); 38 } 39 if (dis[uu] \u0026lt; dis[u] + 1) { 40 dis[uu] = dis[u] + 1; 41 par[uu] = u; 42 } 43 } 44 } 45 if (dis[n] \u0026lt; 0) { 46 cout \u0026lt;\u0026lt; \u0026#34;IMPOSSIBLE\\n\u0026#34;; 47 } else { 48 vector\u0026lt;int\u0026gt; ans; 49 int v = n; 50 while (v) { 51 ans.pb(v); 52 v = par[v]; 53 } 54 cout \u0026lt;\u0026lt; ans.size() \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 55 for (int i = ans.size() - 1; i \u0026gt;= 0; i--) { 56 cout \u0026lt;\u0026lt; ans[i] \u0026lt;\u0026lt; \u0026#34; \\n\u0026#34;[!i]; 57 } 58 } 59 return 0; 60}  CSES1682 - Flight Routes Check  判斷圖是不是一個 SCC，若不是找一對 (a, b) 使得 a 走不到 b。 Tarjan Algorithm。  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; G; 9vector\u0026lt;int\u0026gt; visit; 10vector\u0026lt;int\u0026gt; low; 11vector\u0026lt;int\u0026gt; id; 12vector\u0026lt;bool\u0026gt; inStk; 13stack\u0026lt;int\u0026gt; st; 14int t; 15 16void dfs(int u) { 17 visit[u] = low[u] = ++t; 18 st.push(u); 19 inStk[u] = true; 20 for (int uu : G[u]) { 21 if (!visit[uu]) { 22 dfs(uu); 23 } 24 if (inStk[uu]) 25 low[u] = min(low[u], low[uu]); 26 } 27 if (visit[u] == low[u]) { 28 while (1) { 29 int uu = st.top(); 30 st.pop(); 31 inStk[uu] = false; 32 id[uu] = u; 33 if (uu == u) { 34 break; 35 } 36 } 37 } 38} 39 40vector\u0026lt;int\u0026gt; SCC(int n) { 41 inStk.resize(n); 42 visit.resize(n); 43 low.resize(n); 44 id.resize(n, -1); 45 t = 0; 46 for (int i = 0; i \u0026lt; n; i++) { 47 if (!visit[i]) { 48 dfs(i); 49 } 50 } 51 vector\u0026lt;int\u0026gt; ret; 52 for (int i = 0; i \u0026lt; n; i++) { 53 if (id[i] == i) { 54 ret.pb(i); 55 } 56 } 57 return ret; 58} 59 60int main() { 61 ios::sync_with_stdio(0), cin.tie(0); 62 int n, m; 63 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 64 G.resize(n); 65 for (int i = 0; i \u0026lt; m; i++) { 66 int a, b; 67 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 68 a--, b--; 69 G[a].pb(b); 70 } 71 auto ans = SCC(n); 72 if (ans.size() == 1) { 73 cout \u0026lt;\u0026lt; \u0026#34;YES\\n\u0026#34;; 74 } else { 75 cout \u0026lt;\u0026lt; \u0026#34;NO\\n\u0026#34;; 76 for (int i = 0; i \u0026lt; n; i++) { 77 for (int j : G[i]) { 78 if (id[i] != id[j]) { 79 cout \u0026lt;\u0026lt; j + 1 \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; i + 1 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 80 return 0; 81 } 82 } 83 } 84 // all components are SCC 85 cout \u0026lt;\u0026lt; ans[0] + 1 \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; ans[1] + 1 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 86 } 87 return 0; 88}  CSES1087 - Shortest Subsequence  給一個字串 S，找一個最短字串 P 使得 P 不是 S 的子字串。 Greedy。  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7 8int main() { 9 ios::sync_with_stdio(0), cin.tie(0); 10 string s; 11 cin \u0026gt;\u0026gt; s; 12 vector\u0026lt;int\u0026gt; a(s.length()); 13 for (int i = 0; s[i]; i++) { 14 if (s[i] == \u0026#39;A\u0026#39;) a[i] = 1; 15 else if (s[i] == \u0026#39;C\u0026#39;) a[i] = 2; 16 else if (s[i] == \u0026#39;G\u0026#39;) a[i] = 4; 17 else a[i] = 8; 18 } 19 int st = 0; // Bit Set 20 vector\u0026lt;int\u0026gt; ans; 21 for (int i = 0; i \u0026lt; a.size(); i++) { 22 st = st | a[i]; 23 if (st == 15) { 24 st = 0; 25 ans.pb(a[i]); 26 } 27 } 28 for (int i = 1; i \u0026lt;= 8; i \u0026lt;\u0026lt;= 1) { 29 if ((st \u0026amp; i) == 0) { 30 ans.pb(i); 31 break; 32 } 33 } 34 string out = \u0026#34;\u0026#34;; 35 for (int i = 0; i \u0026lt; ans.size(); i++) { 36 if (ans[i] == 1) out += \u0026#34;A\u0026#34;; 37 else if (ans[i] == 2) out += \u0026#34;C\u0026#34;; 38 else if (ans[i] == 4) out += \u0026#34;G\u0026#34;; 39 else out += \u0026#34;T\u0026#34;; 40 } 41 cout \u0026lt;\u0026lt; out \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 42 return 0; 43}  CSES1756 - Acyclic Graph Edges  給一個無向圖，求輸出一個 Acyclic Orientation 的構造。 Greedy 另小的點指向大的點，則必無環。  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 int n, m; 7 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 8 for (int i = 0; i \u0026lt; m; i++) { 9 int a, b; 10 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 11 if (a \u0026gt; b) swap(a, b); 12 cout \u0026lt;\u0026lt; a \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; b \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 13 } 14 return 0; 15}  ","date":"2021-09-10T13:07:38+08:00","image":"https://Luke2336.github.io/post/Diary/20210910/vaccine.png","permalink":"https://Luke2336.github.io/p/20210910/","title":"2021/09/10 日記"},{"content":" 今天順利報告完了，另外一個 Intern 被問了比較多問題。  ","date":"2021-09-09T17:31:30+08:00","permalink":"https://Luke2336.github.io/p/20210909/","title":"2021/09/09 日記"},{"content":" 今天和學姊做英文的 Mock Interview，有幾個缺點需要改進。  應該要先說明做法在開始寫 code。 寫 code 時可以一邊解釋。 coding style。   晚上吃了麥當勞當晚餐。  ","date":"2021-09-08T18:04:10+08:00","permalink":"https://Luke2336.github.io/p/20210908/","title":"2021/09/08 日記"},{"content":" 請了一天的假打年度賽。 今天一整天都不太舒服，先是腹痛和胸痛，晚餐前又覺得快要暈倒，一直冒冷汗。  年度賽  拿了第三名，但其實感覺沒有打得特別好，只是其他隊爛掉了而已，風向歪歪的。 題解：https://github.com/mzshieh/2021-ycpc  ","date":"2021-09-07T20:51:21+08:00","image":"https://Luke2336.github.io/post/Diary/20210907/Scoreboard.jpg","permalink":"https://Luke2336.github.io/p/20210907/","title":"2021/09/07 日記"},{"content":" 今天試著先讓 host 聽我的 presentation。 晚上吃了 KFC。  ","date":"2021-09-06T17:40:10+08:00","permalink":"https://Luke2336.github.io/p/20210906/","title":"2021/09/06 日記"},{"content":"覺得以前做得到的事或想做的事，現在都做不到了，為此感覺很憂鬱。\n書法 ","date":"2021-09-05T18:10:07+08:00","image":"https://Luke2336.github.io/post/Diary/20210905/%E6%9B%B8%E6%B3%95.JPG","permalink":"https://Luke2336.github.io/p/20210905/","title":"2021/09/05 日記"},{"content":" 今天去苗栗走走，但遇到大雨。  Tarjan 寫了找割點和橋的模板，但不知道哪裡壞了。\n1void dfs(int i, int par, int \u0026amp;t, const vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; \u0026amp;G, 2\tvector\u0026lt;int\u0026gt; \u0026amp;visit, vector\u0026lt;int\u0026gt; \u0026amp;low, vector\u0026lt;bool\u0026gt; \u0026amp;ap, vector\u0026lt;pii\u0026gt; \u0026amp;bridge) { 3\tvisit[i] = low[i] = ++t; 4\tint chd = 0; 5\tfor (int j : G[i]) { 6\tif (j == par) continue; 7\tif (!visit[j]) { 8\tdfs(j, i, t, G, visit, low, ap, bridge); 9\tchd++; 10\tlow[i] = min(low[i], low[j]); 11\tif (low[j] \u0026gt;= visit[i]) 12\tap[i] = true; 13\tif (low[j] \u0026gt; visit[i]) 14\tbridge.emplace_back(i, j); 15\t} else { 16\tlow[i] = min(low[i], low[j]); 17\t} 18\t} 19\tif (par == -1 \u0026amp;\u0026amp; chd \u0026gt; 1) // root 20\tap[i] = true; 21} 22 23vector\u0026lt;pii\u0026gt; find_bridge(const vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; \u0026amp;G) { 24\tconst int n = G.size(); 25\tint t = 0; 26\tvector\u0026lt;int\u0026gt; visit(n), low(n); 27\tvector\u0026lt;bool\u0026gt; ap(n); 28\tvector\u0026lt;pii\u0026gt; bridge; 29\tfor (int i = 0; i \u0026lt; n; i++) 30\tif (!visit[i]) 31\tdfs(i, -1, t, G, visit, low, ap, bridge); 32\treturn bridge; 33}  ","date":"2021-09-04T19:07:56+08:00","permalink":"https://Luke2336.github.io/p/20210904/","title":"2021/09/04 日記"},{"content":" 大部分的時間都用來擬稿。  ","date":"2021-09-04T19:07:51+08:00","permalink":"https://Luke2336.github.io/p/20210903/","title":"2021/09/03 日記"},{"content":" 下午開會才知道下週要用英文報告 QQ 晚上吃完飯，收到了網購的書法用具，就開始練書法了。  ","date":"2021-09-02T08:18:13+08:00","permalink":"https://Luke2336.github.io/p/20210902/","title":"2021/09/02 日記"},{"content":" 只有修掉一些小 bug，沒有太多進度。 晚上在思考自己跟男友的價值觀、家庭背景、政治傾向是否都太不同。  ","date":"2021-09-02T08:18:06+08:00","permalink":"https://Luke2336.github.io/p/20210901/","title":"2021/09/01 日記"},{"content":" 工作到很晚的一天。 網購了寫書法的用具。  ","date":"2021-08-31T02:46:18+08:00","permalink":"https://Luke2336.github.io/p/20210831/","title":"2021/08/31 日記"},{"content":"遊戲  今天貓咪大戰爭多了暑假關卡。  交換  最近還是看到北京有封城相關的新聞流出，於是對交換有所疑慮。 另外一個考慮的點是，如果需要隔離的話，13 萬獎學金實際上不夠用，算算去跟回的隔離費用就剛好打平了。  羽球  晚上和電機系的朋友打球。  ","date":"2021-08-30T17:06:02+08:00","permalink":"https://Luke2336.github.io/p/20210830/","title":"2021/08/30 日記"},{"content":"AtCoder Beginning Contest 192 A. Signed Difficulty 1#pragma GCC optimization(\u0026#34;O3\u0026#34;) 2#include \u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7int main() 8{ 9 ios::sync_with_stdio(0), cin.tie(0); 10 int X, Y; 11 char c; 12 cin \u0026gt;\u0026gt; X \u0026gt;\u0026gt; c \u0026gt;\u0026gt; Y; 13 if (Y \u0026lt;= 2) 14 cout \u0026lt;\u0026lt; X \u0026lt;\u0026lt; \u0026#34;-\\n\u0026#34;; 15 else if (Y \u0026lt;= 6) 16 cout \u0026lt;\u0026lt; X \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 17 else 18 cout \u0026lt;\u0026lt; X \u0026lt;\u0026lt; \u0026#34;+\\n\u0026#34;; 19 return 0; 20}  B. Same Name 1#pragma GCC optimization(\u0026#34;O3\u0026#34;) 2#include \u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7typedef pair\u0026lt;string, string\u0026gt; pss; 8int main() 9{ 10 ios::sync_with_stdio(0), cin.tie(0); 11 int n; 12 cin \u0026gt;\u0026gt; n; 13 vector\u0026lt;pss\u0026gt; v(n); 14 for (int i = 0; i \u0026lt; n; i++) 15 cin \u0026gt;\u0026gt; v[i].first \u0026gt;\u0026gt; v[i].second; 16 sort(v.begin(), v.end()); 17 bool same = false; 18 for (int i = 1; i \u0026lt; n; i++) 19 if (v[i] == v[i - 1]) 20 same = true; 21 if (same) 22 cout \u0026lt;\u0026lt; \u0026#34;Yes\\n\u0026#34;; 23 else 24 cout \u0026lt;\u0026lt; \u0026#34;No\\n\u0026#34;; 25 return 0; 26}  C. Many Balls 1#pragma GCC optimization(\u0026#34;O3\u0026#34;) 2#include \u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7int main() 8{ 9 ios::sync_with_stdio(0), cin.tie(0); 10 ll n; 11 cin \u0026gt;\u0026gt; n; 12 string ans = \u0026#34;\u0026#34;; 13 while (n) 14 { 15 if (n % 2 == 1) 16 ans = \u0026#34;A\u0026#34; + ans, n--; 17 else 18 ans = \u0026#34;B\u0026#34; + ans, n \u0026gt;\u0026gt;= 1; 19 } 20 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 21 return 0; 22}  D. Pair of Balls 建圖後做拓樸排序。\n1#pragma GCC optimization(\u0026#34;O3\u0026#34;) 2#include \u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6#define pb push_back 7int main() 8{ 9 ios::sync_with_stdio(0), cin.tie(0); 10 int n, m; 11 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 12 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; v(m); 13 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; G(n + 1); 14 vector\u0026lt;int\u0026gt; deg(n + 1); 15 for (int i = 0; i \u0026lt; m; i++) 16 { 17 int k; 18 cin \u0026gt;\u0026gt; k; 19 v[i].resize(k); 20 for (int j = 0; j \u0026lt; k; j++) 21 cin \u0026gt;\u0026gt; v[i][j]; 22 for (int j = 1; j \u0026lt; k; j++) 23 G[v[i][j - 1]].pb(v[i][j]), deg[v[i][j]]++; 24 } 25 queue\u0026lt;int\u0026gt; q; 26 for (int i = 1; i \u0026lt;= n; i++) 27 if (deg[i] == 0) 28 q.push(i); 29 while (!q.empty()) 30 { 31 int u = q.front(); 32 q.pop(); 33 for (int uu : G[u]) 34 { 35 deg[uu]--; 36 if (deg[uu] == 0) 37 q.push(uu); 38 } 39 } 40 for (int i = 1; i \u0026lt;= n; i++) 41 if (deg[i]) 42 { 43 cout \u0026lt;\u0026lt; \u0026#34;No\\n\u0026#34;; 44 return 0; 45 } 46 cout \u0026lt;\u0026lt; \u0026#34;Yes\\n\u0026#34;; 47 return 0; 48}  F. Max Sum Counting 排序後做背包 DP。\n1#pragma GCC optimization(\u0026#34;O3\u0026#34;) 2#pragma GCC optimization(\u0026#34;O3\u0026#34;) 3#include \u0026lt;bits/stdc++.h\u0026gt;4using namespace std; 5typedef long long ll; 6typedef pair\u0026lt;int, int\u0026gt; pii; 7#define pb push_back 8const ll mod = 998244353; 9int main() 10{ 11 ios::sync_with_stdio(0), cin.tie(0); 12 int n; 13 cin \u0026gt;\u0026gt; n; 14 vector\u0026lt;pii\u0026gt; v(n); 15 for (int i = 0; i \u0026lt; n; i++) 16 cin \u0026gt;\u0026gt; v[i].first; 17 for (int i = 0; i \u0026lt; n; i++) 18 cin \u0026gt;\u0026gt; v[i].second; 19 sort(v.begin(), v.end()); 20 vector\u0026lt;ll\u0026gt; dp[2]; 21 dp[0].resize(5001); 22 dp[1].resize(5001); 23 dp[0][0] = 1; 24 ll ans = 0; 25 for (int i = 0; i \u0026lt; n; i++) 26 { 27 for (int j = 5000; j \u0026gt;= v[i].second; j--) 28 { 29 int a = dp[0][j] + dp[1][j]; 30 int b = dp[1][j - v[i].second] + dp[0][j - v[i].second]; 31 dp[0][j] = a % mod; 32 dp[1][j] = b % mod; 33 if (j \u0026lt;= v[i].first) 34 ans = (ans + dp[1][j]) % mod; 35 } 36 } 37 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 38 return 0; 39}  ","date":"2021-08-29T21:51:11+08:00","image":"https://Luke2336.github.io/post/Other/AtCoder_ABC216/1.png","permalink":"https://Luke2336.github.io/p/atcoder_abc216/","title":"AtCoder Beginning Contest 216"},{"content":"das Wetter    中文 單數 複數     雲 die Wolke die Wolken   雨 der Regen    雨滴 der Regentropfen die Regentropfen   雨衣 der Regenmantel die Regenmätnel   雨傘 der Regenschirm die Regenschirme   彩虹 der Regenbogen die Regenbögen   閃電 der Biltz die Biltze   雷 der Donner    風 der Wind die Winde   雪 der Schnee    雪花 der Schneeflocke die Schneeflocken   雪人 der Schneemann die Schneemänner   冰 das Eis    冰雹 der Eiszapfen die Eiszapfen   淹水 die Flut die Fluten   龍捲風 der Tornado die Tornados   溫度計 das Thermometer die Thermometer   風向儀 die Wetterfahne die Watterfahnen    ","date":"2021-08-29T11:02:52+08:00","permalink":"https://Luke2336.github.io/p/german-weather/","title":"[德文] 天氣"},{"content":"die Kontinente  der Kontinent die Kontinente Nordamerika Südamerika Europa Asien Africa Australien Antaktis  ","date":"2021-08-29T10:06:51+08:00","permalink":"https://Luke2336.github.io/p/german-continent/","title":"[德文] 七大洲"},{"content":" 又被隊友放鴿子。 把昨天下的遊戲刪了，因為覺得無聊，又得一直看到廣告。 看到卡車 FB 分享幸發亭冰店要歇業了，有點難過。  English Learning English with Emma How to talk about your boss in English Everyday English: Going to the PHARMACY AtCoder ABC216 ","date":"2021-08-29T09:32:56+08:00","image":"https://Luke2336.github.io/post/Diary/20210829/cat2.png","permalink":"https://Luke2336.github.io/p/20210829/","title":"2021/08/29 日記"},{"content":"das Obst    中文 單數 複數     蘋果 der Apfel die Äpfel   柳橙 die Orange die Orangen   柳橙汁 der Orangensaft der Orangensäfte   香蕉 die Banane die Bananen   葡萄 die Weitraube die Weintrauben   葡萄乾 die Rosine die Rosinen   果凍 das Gelee die Gelees   柚子 der Pampelmuse die Pampelmusen   櫻桃 die Kirsche die Kirschen   橄欖 die Olive die Oliven   奇異果 die Kiwi die Kiwis   無花果 die Feige die Feigen   檸檬 die Zitrone die Zitronen   萊姆 die Limone die Limonen   梨子 die Birne die Birnen   李子 die Pflaume die Pflaumen   酪梨 die Avocado die Avocaods   桃子 der Pfirsich die Pfirsiche   西瓜 die Wassemelone die Wassemelonen   哈密瓜 die Honigmelone die Honigmelonen   椰子 die Kokosnuss die Kokosnüsse   芒果 die Mango die Mangos   莓果 die Beere die Beeren   鳳梨 die Ananas die Ananas    ","date":"2021-08-29T00:43:37+08:00","permalink":"https://Luke2336.github.io/p/german-flute/","title":"[德文] 水果"},{"content":"die Zahlen     German     0 null   1 eins   2 zwei   3 drei   4 vier   5 fünf   6 sechs   7 sieben   8 acht   9 neun   10 zehn   11 elf   12 zwölf   16 sechzehn   17 siebzehn   20 zwanzig   21 einundzwanzig   30 dreißig   100 hundert   101 hunderteins   200 zweihundert   1000 eintausend   1,000,000 eine Million   1,000,000,000 eine Milliarde   1,000,000,000,000 eine Billion    ","date":"2021-08-28T23:21:04+08:00","permalink":"https://Luke2336.github.io/p/german-number/","title":"[德文] 數字"},{"content":" 晚上和學長和旺陽聊了一些投資和遊戲相關的話題。 預約了 BNT。  Facebook Hacker Cup 2021 Qualification Round  早上起床先把 A1 和 A2 解掉，但其實只需要解一題就可以晉級了。  手遊  這兩天又把「貓咪大戰爭」裝起來了～ 裝了一款叫「萌宅物語」的遊戲，基本上是跟貓的互動。  ","date":"2021-08-28T06:58:58+08:00","image":"https://Luke2336.github.io/post/Diary/20210828/cat1.png","permalink":"https://Luke2336.github.io/p/20210828/","title":"2021/08/28 日記"},{"content":"暑修  暑修成績出來了，算一算有 A+。  工作  今天都在修 CL 的 bug。  生活 覺得生活中沒有什麼特別想做的事情，平日也因為工作累到晚上沒什麼力氣吸收新的東西，好希望能找到自己想做的事情，但至今尚未開始探索。\n德語資源  Languageguide.org 國立教育廣播電臺 - 德心應口  讀書筆記 不怕23K，每月2000元滾千萬の雞尾酒投資法（毎月5000円で自動的にお金が増える方法）   發現自己的「窮人思維」\n 多數人為了眼前的「安心」，選擇沒有「自由」的生活 7 Qustions  你是否為了錢在工作？  窮人思維是「為了錢工作」 富人思維是「讓錢工作已獲得安心和自由」   3000 元和一小時哪個重要？  讓金錢轉取時間   買了屬於自己的房子會覺得幸福嗎？  讓房產為自己工作，否則多是負債   嚮往年收一千萬元嗎？  富人思維不拘泥收入，關注能為自己創造收入的資產   天氣不好是誰的錯？  怪罪環境是窮人思維   你想付多少稅金？  創造一個系統，從薪水預扣一定額度給未來的自己   你喜歡借錢嗎？  好借款是讓別人幫你還     什麼都不做是最大的風險    理解「金錢奴隸系統」的真面目\n 「價值」是解決問題得到的報酬，「金錢」是儲藏價值的容器 紙幣不是貨幣  貨幣的定義：價值的儲藏、交易的媒介、同質化 印鈔＝通膨稅 國債 通膨率 2%，35 年後紙幣價值砍半   投資可以免稅的資產    知道「自己的現金流」\n 資產：能把現金放入你口袋的東西 負債：從你口袋掏出現金的東西  優良負債：別人會幫你還   四種工作方式  Business Owner Investor Employee Self-employed      注意到「無法變成有錢人不是你的錯」\n 一整天 12000~16000 個思考中，95% 是跟前一天同樣的思考，80% 是負面思考 避開危險 → 大腦採用先行動的機制 RAS（網狀活化系統） 六歲前決定對金錢的信念（錄音帶內容），十三歲切換為播放模式 複寫錄音帶是可行的，但要先有所意識 沒有生命危險的恐懼是通往全新未來的訊號    改寫淺意識，掌握「富人思維」\n 小我 vs. 大我（意識腦 vs. 潛意識）  想像自己會成功 不要否定型思考   改變潛意識方法  請別人幫忙改寫：向成功的人學習 遮蔽負面資訊：被討厭的勇氣 限制接收的資訊：主動找尋資訊 模仿自己憧憬的人      創造「每月兩千元讓資產自動增加的系統」\n 雞尾酒投資法 香檳杯擺好就不打亂 ETF 不動本金 每年做一次平衡 自我投資 投資有兩條規則。 第一條規則：永遠不要虧損。 第二條規則：永遠不要忘記第一條規則。       作為奴僕的人，卻以為自己活在自由之中。\n  所謂常識，就是人到 18 歲為止所累積的各種偏見。\n  正視問題，才能有所改變。\n  運氣是準備碰上機會。\n  Luck is when preparation meets opportunity.\n  改造世界的力量就在你潛意識中。\n   ","date":"2021-08-27T18:59:25+08:00","permalink":"https://Luke2336.github.io/p/20210827/","title":"2021/08/27 日記"},{"content":"工作  Host 把 Design Doc. 給更多人 Review 了，感覺很多地方要改。 下午進到 Code Review，很多東西要改，讓我有點憂鬱。  ","date":"2021-08-26T17:59:42+08:00","permalink":"https://Luke2336.github.io/p/20210826/","title":"2021/08/26 日記"},{"content":" 去資工系辦想要交免修申請，結果未開放收件。 請系辦問了註冊組，降轉的人最快三下加退選完一週才能申請提早畢業。 但我到時候修零學分，還得繳三分之一的學雜費，覺得超級嘔。 下午約了電機系的朋友去舊館打球，覺得精疲力盡。  ","date":"2021-08-25T21:27:41+08:00","permalink":"https://Luke2336.github.io/p/20210825/","title":"2021/08/25 日記"},{"content":" 開會時 Design Doc. 被點出不少地方要改，示意圖被稱讚畫的不錯。 CL 被說切的不好，之後要重新整理，下午花了點時間研究。  git reabase -i git add -p    ","date":"2021-08-24T22:04:22+08:00","permalink":"https://Luke2336.github.io/p/20210824/","title":"2021/08/24 日記"},{"content":" 大部分的時間都在弄 Design Doc.，畫了一些流程圖。  ","date":"2021-08-24T22:04:16+08:00","permalink":"https://Luke2336.github.io/p/20210823/","title":"2021/08/23 日記"},{"content":"準備中高級英檢  臺灣測驗中心 - 單字表  ","date":"2021-08-22T12:08:41+08:00","permalink":"https://Luke2336.github.io/p/20210822/","title":"2021/08/22 日記"},{"content":"原因  因為不想修原系的電子學和電子實驗。 在三上時決定要轉系，三下就修資工的課為主。 看到下一屆的修業規定較適合自己，不用修計網概、編譯器、微處理機等等，於是決定降轉。 自己的成績滿足提畢需求，因此降轉不影響畢業。  準備  上機考前三名。 平均成績高於 85 分，系排 25~50%。 自傳及動機著重在自己不適合原系，強調自己能準時畢業（差 4 門專業選修即符合畢業標準）。 有利資料為選出自己專業科目的優異成績及演算法競賽成績。  審查標準  轉系名額上限為教育部核定名額的兩成 第一志願必須為資工系，操行須在82分以上。 申請文件  歷年成績單（含排名） 自傳及轉系動機說明（兩頁內） 其他有利審查之資料   就學業成績、上機考成績、重點科目（如：計算機概論、基礎程式設計、微積分等）與課外競賽表現擇優錄取。  心得  這屆資工和電機收的名額都很多，但建議還是要將專業科目修到 80 分以上，且上機考有基本的分數，證明自己能適應資工系。 因為原系有選課權，所以才會已經修了很多課，不至於延畢。 等待的時間很焦慮，因為突然發現電機系不開英文班的電子學和實驗，於是無法用原系的修業規定畢業，需要提出申訴之類的手段。  ","date":"2021-08-21T20:31:26+08:00","permalink":"https://Luke2336.github.io/p/transfer/","title":"交大資工轉系經驗"},{"content":" 媽媽說今天帶小乖去獸醫院，是蜂窩性組織炎，所以有腫塊。 參考這篇改了 Github 的認證方式。  隊練 2005-2006 ACM-ICPC, NEERC, Southern Subregional Contest ","date":"2021-08-21T07:47:59+08:00","image":"https://Luke2336.github.io/post/Diary/20210821/Standing.png","permalink":"https://Luke2336.github.io/p/20210821/","title":"2021/08/21 日記"},{"content":"拉花 請學長幫我泡的咖啡，覺得超級開心的，於是 bug 就有順利修掉。\n夕陽 在 office 的最後一天，於是就很認真的享受夕陽。\n回新竹 因為事故的關係，過糊口後就都在塞車，花了很久才回到新竹。\n","date":"2021-08-21T07:47:54+08:00","image":"https://Luke2336.github.io/post/Diary/20210820/scene2.jpg","permalink":"https://Luke2336.github.io/p/20210820/","title":"2021/08/20 日記"},{"content":"彩虹 下午的彩虹～\n小可魚 和 co-host 聊了一些 personal 的想法，接觸到滿不一樣的價值觀。\n","date":"2021-08-21T07:47:49+08:00","image":"https://Luke2336.github.io/post/Diary/20210819/scene.jpg","permalink":"https://Luke2336.github.io/p/20210819/","title":"2021/08/19 日記"},{"content":" 工作上有點卡關，但 edison 提供了我不少想法。 午餐很好吃，但晚上身體不舒服就吃不下晚餐，就被學姊牆破塞了摩斯的洋蔥圈。  ","date":"2021-08-21T07:47:41+08:00","permalink":"https://Luke2336.github.io/p/20210818/","title":"2021/08/18 日記"},{"content":"轉系通過  一直刷舊的註冊組網頁，刷到很焦慮。 傍晚才看到 Dcard 的 Link，降轉成功，不知道能不能在下學期提畢。  第一天上班  早上找不到正確的路口進去，繞了很大一圈，幸好有跟 edison 約。 中午前就跟著學長認識環境，看看風景。 發現自己 Team 的另一個 Intern 人很好。 因為 Intern 的一樓通行證只能到五點，所以晚上學姊請我們吃鼎泰豐。 夜景超美的！！  ","date":"2021-08-17T07:22:01+08:00","image":"https://Luke2336.github.io/post/Diary/20210817/scene.jpg","permalink":"https://Luke2336.github.io/p/20210817/","title":"2021/08/17 日記"},{"content":" 昨晚嚴重失眠，中間躺了四個小時左右。 第一天在家工作，覺得干擾很多。 把免修申請表寫完，要免修的科目有機率、線代、導師時間、資訊工程研討。希望明天轉系結果早點出來。  ","date":"2021-08-16T17:12:30+08:00","permalink":"https://Luke2336.github.io/p/20210816/","title":"2021/08/16 日記"},{"content":" 回基隆，準備下週二進辦公室。 發現電子學和電子實驗的英文班都停開了，轉系沒過，可能畢業困難。突然覺得被 chungsheng 烏鴉嘴中了。  課表  排好了轉系沒過的課表。 基本上是要把隨機演算法和賽局理論退掉，加選電子學。  ","date":"2021-08-15T10:32:11+08:00","permalink":"https://Luke2336.github.io/p/20210815/","title":"2021/08/15 日記"},{"content":" 過敏日。 早上有推了一些工作進度。 晚上去找學長聊天，吃了清夜的廣東粥和酪梨牛奶。  聊了一些關於伴侶的話題，還有一些自我肯定的事。    ","date":"2021-08-15T10:31:51+08:00","permalink":"https://Luke2336.github.io/p/20210814/","title":"2021/08/14 日記"},{"content":" 今天比較焦慮，覺得工作進度有些落後，Host 有問我要不要把工作的時間延長到開學後一週，我認為值得考慮。 晚上跟 LinLee 去清夜吃牛肉麵。  實習倒數四週 我在 Google Taiwan ChromeOS Team 實習的日子將要倒數四週。\n 第一個月主要是在熟悉 ChromeOS 內部的工具，還有熟悉用 Chromebook 開發。公司內部提供了很多影片，可以提供 remote onboard 的實習生們進入狀況。 第二個月則是開始我的 project 的撰寫，主要時間都花在熟悉看 code，因為我以前對 python 的實作量很少，所以花了些時間研究 python 的 OOP 還有一些 Library。 今天早上和學妹 Nina 一起訪問我的 Host，他有給了我們一些職涯上的建議，也有對於轉正有些提醒。另外，提到了實習生的專案多是實驗性的。滿特別的是提到 SWE 大部分的工作時間是處理 bug，還有提到 Google Taiwan 的工作多少會碰到一些硬體的部分，建議修交大的 OSDI、高等 UNIX 和微處理機。 意識到自己平常是走資訊科學的路線，而非資訊工程。  ","date":"2021-08-13T21:23:10+08:00","permalink":"https://Luke2336.github.io/p/20210813/","title":"2021/08/13 日記"},{"content":" 今天很早就醒了，寫了台大東亞儒家課程的 HW6，之後就只剩 HW7，課程就結束了。 睡眠時間從原本超過 8 小時，到今天不到 6 小時，讓我有些擔心。 把 Design Doc. 的草稿傳給 Host，但沒有收到什麼回應，可能是寫太少了吧。  Google - Level 2  今天 Google 公布台灣辦公室降到 Level 2，下週二開始 intern 就可以去 office 了。很期待見到 Team 裡的人、其他 intern 還有 Jasmine。  ","date":"2021-08-12T05:29:22+08:00","permalink":"https://Luke2336.github.io/p/20210812/","title":"2021/08/12 日記"},{"content":" 開始寫 Design Doc.，很開心 Irene 把她寫的借我參考。 晚上吃了韓式炸雞，工作到很晚。  ","date":"2021-08-11T18:54:45+08:00","permalink":"https://Luke2336.github.io/p/20210811/","title":"2021/08/11 日記"},{"content":" 嗜睡的一天。  ","date":"2021-08-11T18:54:37+08:00","permalink":"https://Luke2336.github.io/p/20210810/","title":"2021/08/10 日記"},{"content":" 因為工作進度很焦慮。  ","date":"2021-08-11T18:54:29+08:00","permalink":"https://Luke2336.github.io/p/20210809/","title":"2021/08/09 日記"},{"content":" 今天是父親節，爸媽開車來新竹找我，於是順便去食品路修了腳踏車。  修腳踏車  捷安特 新竹 羿成單車生活館。 前後輪的內外胎、煞車線、鏈條，總共 $3300。  拆箱 - Google 包裹  等了很久終於從美國寄來了，有一件 T-shirt、一個 Intern 帽帽、一個後背包。 前兩次的 SWAG，分別是 Google 的水壺、高級水壺、Google 的無線快充盤。  ","date":"2021-08-08T13:17:52+08:00","image":"https://Luke2336.github.io/post/Diary/20210808/Google.jpg","permalink":"https://Luke2336.github.io/p/20210808/","title":"2021/08/08 日記"},{"content":" Chrome 的恐龍小遊戲有東奧版。 下午和隊友練習，覺得自己的狀態不甚好。 晚上用 Uber Eat 叫了清夜的鹹酥雞吃。  隊練 2016, IX Samara Regional Intercollegiate Programming Contest Python  讀從圖書館借的決心打底！Python 深度學習基礎養成。  Plot 1import numpy as np 2import matplotlib.pyplot as plt 3 4x = np.linspace(0, 2 * np.pi) 5y_sin= np.sin(x) 6y_cos= np.cos(x) 7 8plt.xlabel(\u0026#34;x value\u0026#34;) 9plt.ylabel(\u0026#34;y value\u0026#34;) 10plt.title(\u0026#34;sin/cos\u0026#34;) 11plt.plot(x, y_sin, label=\u0026#34;sin\u0026#34;) 12plt.plot(x, y_cos, label=\u0026#34;cos\u0026#34;, linestyle=\u0026#34;dashed\u0026#34;) 13plt.legend() 14plt.show() 1import numpy as np 2import matplotlib.pyplot as plt 3 4x1 = np.random.rand(100) - 1.0 5y1 = np.random.rand(100) 6x2 = np.random.rand(100) 7y2 = np.random.rand(100) 8 9plt.scatter(x1, y1, marker=\u0026#39;+\u0026#39;) 10plt.scatter(x2, y2, marker=\u0026#39;x\u0026#39;) 11plt.show() 1import numpy as np 2import matplotlib.pyplot as plt 3 4img = np.array([[0, 1, 2, 3], 5 [4, 5, 6, 7], 6 [8, 9, 10 ,11], 7 [12, 13, 14, 15]]) 8 9plt.imshow(img, \u0026#39;gray\u0026#39;) 10plt.colorbar() 11plt.show() ","date":"2021-08-07T10:23:07+08:00","image":"https://Luke2336.github.io/post/Diary/20210807/game.png","permalink":"https://Luke2336.github.io/p/20210807/","title":"2021/08/07 日記"},{"content":" 台灣的 Intern 們創了個群組，發現很多 Intern 都是熟人。  ","date":"2021-08-07T10:23:01+08:00","permalink":"https://Luke2336.github.io/p/20210806/","title":"2021/08/06 日記"},{"content":" 因為工作的進度感到有些焦慮。  ","date":"2021-08-05T20:04:11+08:00","permalink":"https://Luke2336.github.io/p/20210805/","title":"2021/08/05 日記"},{"content":" 今天大部分時間都在過敏，睡了午覺後有好轉。 工作有些卡住，因此約 Host 明早討論。  ","date":"2021-08-04T17:41:15+08:00","permalink":"https://Luke2336.github.io/p/20210804/","title":"2021/08/04 日記"},{"content":" 看到一些有趣的文章，內容是講陸生來交大交換的心得。 被 host 形容目前的表現「中規中矩」，然後感覺他也有些擔心我的進度。 有些猶豫開學要不要退一門課，四門主科不知道會不會太重，但很猶豫該退哪一門課，剩下的課都滿有興趣的。 希望能把資訊工程研討免修，這樣應該會多出不少時間。  ","date":"2021-08-03T16:20:56+08:00","permalink":"https://Luke2336.github.io/p/20210803/","title":"2021/08/03 日記"},{"content":" 早上把 code 給 host 看，被說「不錯不錯」，覺得很開心。 TTYh 給了我一篇 Paper，要我寫 Summary，讓我壓力很大，晚上睡不著。  ","date":"2021-08-02T21:16:43+08:00","permalink":"https://Luke2336.github.io/p/20210802/","title":"2021/08/02 日記"},{"content":" Floksiki  黃綠的配色很好看！   Momentum  Plugin，每天會換一張風景照，覺得很有趣。    ","date":"2021-08-01T16:25:52+08:00","image":"https://Luke2336.github.io/post/Other/ChromeTheme/Theme.png","permalink":"https://Luke2336.github.io/p/chromethemes/","title":"Chrome Themes 推薦"},{"content":" 換了 Chrome 的主題。 決定放棄 ICCAD 比賽，專心實習。  ","date":"2021-08-01T16:20:04+08:00","permalink":"https://Luke2336.github.io/p/20210801/","title":"2021/08/01 日記"},{"content":" 跟學長約去清大聊天，晚餐吃了竹源的炒麵。  ","date":"2021-07-31T12:58:05+08:00","permalink":"https://Luke2336.github.io/p/20210731/","title":"2021/07/31 日記"},{"content":" 早上上了台大的線上課，因為身體不舒服就睡著了。 下午試著趕了些工作進度，對 Python 的 import 還是無法掌握 QAQ 晚上因為手被門夾到，掛急診，幸好沒骨折。  ","date":"2021-07-31T12:57:57+08:00","permalink":"https://Luke2336.github.io/p/20210730/","title":"2021/07/30 日記"},{"content":" 今天因為沒有要開會，就跟 Team 裡的人聊天，感覺這個暑假沒機會進辦公室了 QAQ 生理期來，很累很想睡。  ","date":"2021-07-29T11:07:46+08:00","permalink":"https://Luke2336.github.io/p/20210729/","title":"2021/07/29 日記"},{"content":" 因為打完球的關係，全身痠痛。 花了較多時間工作。 讀了 The State of Developer Ecosystem 2021，是一篇 JetBrains 對程式語言和生態圈做的調查。  ","date":"2021-07-28T11:08:44+08:00","permalink":"https://Luke2336.github.io/p/20210728/","title":"2021/07/28 日記"},{"content":" 填完了自己的 Midpoint Evaluation。 和 Host 開了會，大致知道最終目標。 下午去了學校的圖書館借書，因為是第一天開放，人很少。借了以下幾本書：  貓戰士第一部曲 1~4 集 不怕23K, 每月2000元滾出千萬の雞尾酒投資法 投資金律 : 建立獲利投資組合的四大關鍵和十四個關卡   晚上約了陳去舊館打球，結果人滿多的，學校就滾動式調整成每小時清場。因為戴著口罩，覺得口罩濕了之後特別喘，所以打不到一小時就收工了。 晚上跟 Lin Lee 散步，決定回歸 Pushenn。  ","date":"2021-07-28T11:08:38+08:00","permalink":"https://Luke2336.github.io/p/20210727/","title":"2021/07/27 日記"},{"content":" 和學姊聊過之後，決定繼續實習。 參加了一下 Intern week 的活動。  ","date":"2021-07-28T11:08:30+08:00","permalink":"https://Luke2336.github.io/p/20210726/","title":"2021/07/26 日記"},{"content":" 基本上都在昏睡。  ","date":"2021-07-25T10:23:03+08:00","permalink":"https://Luke2336.github.io/p/20210725/","title":"2021/07/25 日記"},{"content":" 晚上和隊友隊練，但到一半我就因為過敏不想練了。 之後跟隊友說要退出 Pusheen。  ","date":"2021-07-25T10:22:54+08:00","permalink":"https://Luke2336.github.io/p/20210724/","title":"2021/07/24 日記"},{"content":" 下午去看醫生。  Google Doodle   看到 Doodle 推出新的東京奧運系列小遊戲。\n  News\n  ","date":"2021-07-23T14:15:37+08:00","image":"https://Luke2336.github.io/post/Diary/20210723/Doodle.png","permalink":"https://Luke2336.github.io/p/20210723/","title":"2021/07/23 日記"},{"content":" 颱風靠近了，開始間歇性大雨。  ","date":"2021-07-22T16:12:43+08:00","permalink":"https://Luke2336.github.io/p/20210722/","title":"2021/07/22 日記"},{"content":" 一早就被註冊組的人打電話催成績，不是啊，不是應該打給老師叫他送成績嗎，我已經寫信催過了啊！晚上終於看到老師送成績了！！ 這學期成績平均高於總平均，開心～ 今天算是稍有進度的一天。 晚上看了 Netflix 的 Great Pretender。 晚上左下腹劇痛。  ","date":"2021-07-21T10:14:47+08:00","permalink":"https://Luke2336.github.io/p/20210721/","title":"2021/07/21 日記"},{"content":" 因為跟台大的朋友聊了他的實習狀況，發現自己落後很多，有點恐慌。  ","date":"2021-07-21T10:14:40+08:00","permalink":"https://Luke2336.github.io/p/20210720/","title":"2021/07/20 日記"},{"content":" 下午和 Host 聊了一下 project。 晚上去看醫生，然後吃了麥當勞。 睡前更新了 Blog 的 theme，改用 git submodule 去管理，之後更新比較方便。  ","date":"2021-07-20T00:49:35+08:00","permalink":"https://Luke2336.github.io/p/20210719/","title":"2021/07/19 日記"},{"content":" 下午頭很痛，還是繼續燒到 37.5，但還是試著補了上週的一點點工作進度。 幫 Blog 上了留言區，參考了這篇，使用 Utterances 的 preferred-color-scheme。參考了文章1和文章2，優化了 SEO 搜尋。 和ㄠㄨ討論完後，決定我負責看 paper，他負責寫 code。  ","date":"2021-07-18T10:15:47+08:00","permalink":"https://Luke2336.github.io/p/20210718/","title":"2021/07/18 日記"},{"content":" 上午去診所看醫生。 傍晚很無聊，就去交大課程助理發了修課心得。 晚上和隊友練習。  隊練 2020, XIII Samara Regional Intercollegiate Programming Contest  隊友表示不喜歡我挑的這套題，太多水題了。 比較喜歡的題有 C, D, F, G。     ID Solver Type     A Hyperbola 水題   B Hyperbola 暴力, 二分搜   C     D Hyperbola BFS   E LinLee 水題   F LinLee Tree, Greedy   G Hyperbola 互動題   H LinLee 水題   I LinLee 水題, Sort   J Hyperbola 手推   K Hyperbola 幾何   L Hyperbola DP   M Kelly 水題, Sort    ","date":"2021-07-17T17:37:48+08:00","image":"https://Luke2336.github.io/post/Diary/20210717/course.png","permalink":"https://Luke2336.github.io/p/20210717/","title":"2021/07/17 日記"},{"content":" 下午和學姊 meeting，得到了一些小啟發，能找個人聊聊很棒。 看了神內，MRI 的檢查結果正常。 晚餐吃了麥當勞的「都是腿」套餐。  ","date":"2021-07-16T17:14:49+08:00","permalink":"https://Luke2336.github.io/p/20210716/","title":"2021/07/16 日記"},{"content":" 繳了暑宿費 $4568。 身體還是不舒服到沒辦法工作。  ","date":"2021-07-15T13:53:48+08:00","permalink":"https://Luke2336.github.io/p/20210715/","title":"2021/07/15 日記"},{"content":" 今天考轉系考，壓力很大。  Code SPOJ - PT07Y 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 int n, m; 5 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 6 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; G(n + 1); 7 for (int i = 0; i \u0026lt; m; ++i) { 8 int u, v; 9 cin \u0026gt;\u0026gt; u \u0026gt;\u0026gt; v; 10 G[u].push_back(v); 11 G[v].push_back(u); 12 } 13 if (m != n - 1) { 14 printf(\u0026#34;NO\\n\u0026#34;); 15 } else { 16 vector\u0026lt;bool\u0026gt; visit(n + 1); 17 queue\u0026lt;int\u0026gt; q; 18 q.push(1); 19 visit[1] = true; 20 while (!q.empty()) { 21 int u = q.front(); 22 q.pop(); 23 for (int uu : G[u]) { 24 if (!visit[uu]) { 25 q.push(uu); 26 visit[uu] = true; 27 } 28 } 29 } 30 for (int i = 1; i \u0026lt;= n; ++i) { 31 if (!visit[i]) { 32 printf(\u0026#34;NO\\n\u0026#34;); 33 return 0; 34 } 35 } 36 printf(\u0026#34;YES\\n\u0026#34;); 37 } 38 return 0; 39}  GPE 總共有 169 人考試，160 分及格，大概 42 人。\n pA (100) 水題。 pB (80) 大數題，一直解不出來。 pC (100) 背包問題。 pD (100) BFS。  A 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 ios::sync_with_stdio(0); 5 cin.tie(0); 6 int N, M, P; 7 cin \u0026gt;\u0026gt; N \u0026gt;\u0026gt; M \u0026gt;\u0026gt; P; 8 vector\u0026lt;int\u0026gt; v(P); 9 for (int i = 0; i \u0026lt; P; i++) { 10 int x, y; 11 cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y; 12 v[i] = x; 13 } 14 sort(v.begin(), v.end()); 15 int ans = max(v[0], N - 2 - v.back()); 16 for (int i = 1; i \u0026lt; P; i++) { 17 ans = max(ans, (v[i] - v[i - 1]) / 2); 18 } 19 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 20 return 0; 21}  B 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define maxn 100005 4#define maxl 80 5long long dp[maxn][maxl] = {}; 6int main() { 7 ios::sync_with_stdio(0); 8 cin.tie(0); 9 long long n, r, b; 10 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; r \u0026gt;\u0026gt; b; 11 dp[0][0] = 1; 12 for (int i = 1; i \u0026lt; maxn; i++) { 13 for (int j = 0; j \u0026lt; maxl; j++) { 14 dp[i][j] += dp[i - 1][j] * r; 15 dp[i][j + 1] += dp[i][j] / 10; 16 dp[i][j] %= 10; 17 } 18 dp[i][0] += b; 19 for (int j = 0; j \u0026lt; maxl; j++) { 20 while (dp[i][j] \u0026lt; 0) { 21 dp[i][j + 1]--; 22 dp[i][j] += 10; 23 } 24 } 25 } 26 while (n--) { 27 int x; 28 cin \u0026gt;\u0026gt; x; 29 string ans = \u0026#34;\u0026#34;; 30 bool flag = false; 31 for (int i = maxl - 1; i \u0026gt;= 0; i--) { 32 if (dp[x][i]) 33 flag = true; 34 if (!flag) 35 continue; 36 ans += char(dp[x][i] + \u0026#39;0\u0026#39;); 37 } 38 if (ans.length() == 0) 39 ans = \u0026#34;0\u0026#34;; 40 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 41 } 42 return 0; 43}  C 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 ios::sync_with_stdio(0); 5 cin.tie(0); 6 int n; 7 cin \u0026gt;\u0026gt; n; 8 vector\u0026lt;int\u0026gt; a(n), c(n); 9 int sum = 0; 10 for (int i = 0; i \u0026lt; n; i++) { 11 cin \u0026gt;\u0026gt; a[i] \u0026gt;\u0026gt; c[i]; 12 sum += a[i]; 13 } 14 vector\u0026lt;int\u0026gt; dp(sum + 1, n * 1000); 15 dp[0] = 0; 16 for (int i = 0; i \u0026lt; n; i++) { 17 for (int j = sum; j \u0026gt;= a[i]; j--) 18 dp[j] = min(dp[j], dp[j - a[i]] + c[i]); 19 } 20 for (int j = sum - 1; j \u0026gt;= 0; j--) 21 dp[j] = min(dp[j + 1], dp[j]); 22 int T; 23 cin \u0026gt;\u0026gt; T; 24 while (T--) { 25 long long P; 26 cin \u0026gt;\u0026gt; P; 27 if (P \u0026gt; sum) { 28 cout \u0026lt;\u0026lt; 0 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 29 } else { 30 cout \u0026lt;\u0026lt; dp[P] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 31 } 32 } 33 return 0; 34}  D 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, int\u0026gt; pii; 4int main() { 5 ios::sync_with_stdio(0); 6 cin.tie(0); 7 int N, M, P; 8 cin \u0026gt;\u0026gt; N \u0026gt;\u0026gt; M \u0026gt;\u0026gt; P; 9 queue\u0026lt;int\u0026gt; qx, qy; 10 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; dis(N, vector\u0026lt;int\u0026gt;(M, -1)); 11 for (int i = 0; i \u0026lt; P; i++) { 12 int x, y; 13 cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y; 14 qx.push(x); 15 qy.push(y); 16 dis[x][y] = 0; 17 } 18 int ans = 0; 19 int dx[4] = {1, -1, 0, 0}; 20 int dy[4] = {0, 0, 1, -1}; 21 while (!qx.empty()) { 22 int x = qx.front(); 23 qx.pop(); 24 int y = qy.front(); 25 qy.pop(); 26 for (int di = 0; di \u0026lt; 4; di++) { 27 int xx = x + dx[di]; 28 int yy = y + dy[di]; 29 if (xx \u0026lt; 0 || xx \u0026gt;= N || yy \u0026lt; 0 || yy \u0026gt;= M) 30 continue; 31 if (dis[xx][yy] != -1) continue; 32 dis[xx][yy] = dis[x][y] + 1; 33 qx.push(xx), qy.push(yy); 34 ans = max(ans, dis[xx][yy]); 35 } 36 } 37 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 38 return 0; 39}  ","date":"2021-07-14T17:49:47+08:00","permalink":"https://Luke2336.github.io/p/20210714/","title":"2021/07/14 日記"},{"content":" 今天腦袋都很昏，不太能做事，僅僅開了會。 為隔天下午的上機考刷題，練練手感。  Code SPOJ - SAMER08F 1#include \u0026lt;iostream\u0026gt;2using namespace std; 3int main() { 4 int n; 5 while (cin \u0026gt;\u0026gt; n) { 6 if (!n) break; 7 cout \u0026lt;\u0026lt; n * (n + 1) * (2 * n + 1) / 6 \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 8 } 9 return 0; 10}  SPOJ - ACPC10A 1while True: 2 a, b, c = map(int, input().split()) 3 if a == 0 and b == 0 and c == 0: 4 break 5 if a * c == b * b: 6 print(\u0026#34;GP \u0026#34; + str(c * c // b)) 7 elif a + c == b + b: 8 print(\u0026#34;AP \u0026#34; + str(c + c - b)) SPOJ - AGGRCOW 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 int T; 5 cin \u0026gt;\u0026gt; T; 6 for (int t = 0; t \u0026lt; T; ++t) { 7 int n, c; 8 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; c; 9 vector\u0026lt;int\u0026gt; a(n); 10 for (int i = 0; i \u0026lt; n; ++i) 11 cin \u0026gt;\u0026gt; a[i]; 12 sort(a.begin(), a.end()); 13 int L = 1, R = a.back(); 14 int ans = 0; 15 while (L \u0026lt;= R) { 16 int mid = (L + R) \u0026gt;\u0026gt; 1; 17 int last = 0, now = 0; 18 bool success = true; 19 for (int i = 1; i \u0026lt; c; i++) { 20 while (a[now] - a[last] \u0026lt; mid \u0026amp;\u0026amp; now \u0026lt; n) 21 ++now; 22 last = now; 23 if (now \u0026gt;= n) { 24 success = false; 25 break; 26 } 27 } 28 if (success) L = mid + 1, ans = max(ans, mid); 29 else R = mid - 1; 30 } 31 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 32 } 33 return 0; 34}  SPOJ - CANDY 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 while (1) { 5 int n; 6 cin \u0026gt;\u0026gt; n; 7 if (n == -1) break; 8 vector\u0026lt;int\u0026gt; v(n); 9 int sum = 0; 10 for (int i = 0; i \u0026lt; n; ++i) { 11 cin \u0026gt;\u0026gt; v[i]; 12 sum += v[i]; 13 } 14 if (sum % n) 15 cout \u0026lt;\u0026lt; \u0026#34;-1\\n\u0026#34;; 16 else { 17 int ans = 0; 18 for (int i = 0; i \u0026lt; n; i++) 19 ans += max(0, v[i] - sum / n); 20 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 21 } 22 } 23 return 0; 24}  ","date":"2021-07-13T14:27:38+08:00","permalink":"https://Luke2336.github.io/p/20210713/","title":"2021/07/13 日記"},{"content":" 早上和 Host 討論過後，壓力有比較小一點，也比較有方向，下午有了些嘗試。 台大通識課感覺還算滿涼的，每週只需要看影片跟寫 600 字作業。第一份作業拿了 92 分，覺得滿開心的。 晚上自己試著寫 ICCAD 的 placement。  Code SPOJ - FCTRL 1for T in range(int(input())): 2 cnt2 = cnt5 = 0 3 n = int(input()) 4 j = 2 5 while j \u0026lt;= n: 6 cnt2 += n // j 7 j *= 2 8 j = 5 9 while j \u0026lt;= n: 10 cnt5 += n // j 11 j *= 5 12 print(min(cnt2, cnt5)) SPOJ - NSTEPS 1for t in range(int(input())): 2 x, y = map(int, input().split()) 3 if x == y or x == y + 2: 4 if x % 2 == 0 and x == y: 5 print(y * 2) 6 elif x % 4 == 1 and y % 4 == 1: 7 print(y // 4 * 8 + 1) 8 elif x % 4 == 2 and y % 4 == 0: 9 print(y // 4 * 8 + 2) 10 elif x % 4 == 3 and y % 4 == 1: 11 print(y // 4 * 8 + 3) 12 elif x % 4 == 3 and y % 4 == 3: 13 print(y // 4 * 8 + 5) 14 elif x % 4 == 0 and y % 4 == 2: 15 print(y // 4 * 8 + 6) 16 elif x % 4 == 1 and y % 4 == 3: 17 print(y // 4 * 8 + 7) 18 else: 19 print(\u0026#34;No Number\u0026#34;) 20 else: 21 print(\u0026#34;No Number\u0026#34;) SPOJ - LCASQ 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define L 20 4int main() { 5 int n; 6 cin \u0026gt;\u0026gt; n; 7 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; anc(n, vector\u0026lt;int\u0026gt;(L, -1)); 8 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; G(n); 9 for (int i = 0; i \u0026lt; n; ++i) { 10 int c; 11 cin \u0026gt;\u0026gt; c; 12 G[i].resize(c); 13 for (int j = 0; j \u0026lt; c; ++j) { 14 cin \u0026gt;\u0026gt; G[i][j]; 15 anc[G[i][j]][0] = i; 16 } 17 } 18 for (int a = 1; a \u0026lt; L; ++a) { 19 for (int i = 0; i \u0026lt; n; ++i) { 20 int j = anc[i][a - 1]; 21 if (j == -1) continue; 22 anc[i][a] = anc[j][a - 1]; 23 } 24 } 25 int p = 0; 26 for (int i = 0; i \u0026lt; n; ++i) 27 if (anc[i][0] == -1) p = i; 28 vector\u0026lt;int\u0026gt; dis(n, -1); 29 queue\u0026lt;int\u0026gt; q; 30 q.push(p); 31 dis[p] = 0; 32 while (!q.empty()) { 33 int u = q.front(); 34 q.pop(); 35 for (int uu : G[u]) { 36 dis[uu] = dis[u] + 1; 37 q.push(uu); 38 } 39 } 40 int Q; 41 cin \u0026gt;\u0026gt; Q; 42 while (Q--) { 43 int u, v; 44 cin \u0026gt;\u0026gt; u \u0026gt;\u0026gt; v; 45 if (dis[u] \u0026lt; dis[v]) 46 swap(u, v); 47 for (int i = L - 1; i \u0026gt;= 0; --i) 48 if (dis[u] - (1 \u0026lt;\u0026lt; i) \u0026gt;= dis[v]) 49 u = anc[u][i]; 50 while (u != v) { 51 for (int i = L - 1; i \u0026gt;= 0; --i) 52 if (anc[u][i] != anc[v][i]) 53 u = anc[u][i], v = anc[v][i]; 54 if (anc[u][0] == anc[v][0]) 55 u = v = anc[u][0]; 56 } 57 cout \u0026lt;\u0026lt; u \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 58 } 59 return 0; 60}  ","date":"2021-07-12T19:49:41+08:00","permalink":"https://Luke2336.github.io/p/20210712/","title":"2021/07/12 日記"},{"content":" 沒做什麼事的一天，整個下午幾乎都在睡。 和 Host 約了隔天早上討論。 晚上和ㄠㄨ討論了一下 ICCAD，發現我們上個版本寫壞了，繞出來 overflows。  ","date":"2021-07-12T19:49:35+08:00","permalink":"https://Luke2336.github.io/p/20210711/","title":"2021/07/11 日記"},{"content":" 晚上跟 MT 聊天。 被隊友放鴿子。  ","date":"2021-07-10T21:49:35+08:00","permalink":"https://Luke2336.github.io/p/20210710/","title":"2021/07/10 日記"},{"content":" 花了些時間複習 python。  Code TIOJ 1004. 猶太人敢死隊問題 1n = int(input()) 2L = [True] * n 3i = 0 4last = 0 5while True in L: 6 while not L[i]: 7 i = (i + 1) % n 8 i = (i + 1) % n 9 while not L[i]: 10 i = (i + 1) % n 11 L[i] = False 12 last = i 13 i = (i + 1) % n 14print(last + 1) TIOJ 1005. 圓周率問題 1from math import gcd 2from math import sqrt 3while True: 4 N = int(input()) 5 if N == 0: 6 break 7 L = [] 8 for i in range(N): 9 L.append(int(input())) 10 cnt = 0 11 for i in L: 12 for j in L: 13 if i \u0026lt; j and gcd(i, j) == 1: 14 cnt += 1 15 if cnt == 0: 16 print(\u0026#39;No estimate for this data set.\u0026#39;) 17 else: 18 ans = sqrt(6 * N * (N - 1) / 2 / cnt) 19 print(\u0026#39;%.6f\u0026#39; % ans) SPOJ - TESTINT 1print(int(input()) + int(input())) SPOJ - STRHH 1n = int(input()) 2for i in range(n): 3 s = input() 4 for i in range(0, len(s) // 2, 2): 5 print(s[i], end=\u0026#39;\u0026#39;) 6 print(\u0026#39;\u0026#39;) SPOJ - CPTTRN1 1for t in range(int(input())): 2 l, c = [int(x) for x in input().split()] 3 if t != 0: 4 print(\u0026#39;\u0026#39;) 5 for i in range(l): 6 for j in range(c): 7 if (i + j) % 2 == 0: 8 print(\u0026#39;*\u0026#39;, end=\u0026#39;\u0026#39;) 9 else: 10 print(\u0026#39;.\u0026#39;, end=\u0026#39;\u0026#39;) 11 print(\u0026#39;\u0026#39;) SPOJ - SMPWOW 1print(\u0026#39;W\u0026#39; + \u0026#39;o\u0026#39; * int(input()) + \u0026#39;w\u0026#39;) SPOJ - CPTTRN2 1for t in range(int(input())): 2 if t != 0: 3 print() 4 l, c = map(int, input().split()) 5 for i in range(l): 6 if i == 0 or i == l - 1 or c == 1: 7 print(\u0026#39;*\u0026#39; * c) 8 else: 9 print(\u0026#39;*\u0026#39; + \u0026#39;.\u0026#39; * (c - 2) + \u0026#39;*\u0026#39;) SPOJ - PRIME1 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3vector\u0026lt;int\u0026gt; prime; 4void genPrime() { 5 bool notprime[35000] = {}; 6 prime.emplace_back(2); 7 for (int i = 3; i \u0026lt; 35000; i += 2) { 8 if (notprime[i]) continue; 9 prime.emplace_back(i); 10 for (int j = i * i; j \u0026lt; 35000; j += i) 11 notprime[j] = true; 12 } 13} 14bool check(int x) { 15 if (x == 1) return false; 16 for (int i = 0; i \u0026lt; prime.size() \u0026amp;\u0026amp; prime[i] * prime[i] \u0026lt;= x; ++i) 17 if (x == prime[i]) 18 return true; 19 else if (x % prime[i] == 0) 20 return false; 21 return true; 22} 23int main() { 24 ios::sync_with_stdio(0); 25 cin.tie(0); 26 int T; 27 cin \u0026gt;\u0026gt; T; 28 genPrime(); 29 while (T--) { 30 int n, m; 31 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 32 for (int i = n; i \u0026lt;= m; ++i) { 33 if (check(i)) 34 cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 35 } 36 if (T) 37 cout \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 38 } 39 return 0; 40}  SPOJ - FCTRL2 1for i in range(int(input())): 2 n = int(input()) 3 ans = n 4 for i in range(1, n): 5 ans *= i 6 print(ans) SPOJ - ONP 1for t in range(int(input())): 2 s = input() 3 st = [] 4 for i in s: 5 if i == \u0026#39;)\u0026#39;: 6 print(st[-1], end=\u0026#39;\u0026#39;) 7 st.pop() 8 elif i.isalpha(): 9 print(i, end=\u0026#39;\u0026#39;) 10 elif i != \u0026#39;(\u0026#39;: 11 st.append(i) 12 print(\u0026#39;\u0026#39;) ","date":"2021-07-09T17:16:06+08:00","permalink":"https://Luke2336.github.io/p/20210709/","title":"2021/07/09 日記"},{"content":" 整天都昏昏沈沈的。  ","date":"2021-07-08T23:00:19+08:00","permalink":"https://Luke2336.github.io/p/20210708/","title":"2021/07/08 日記"},{"content":" 都在過敏，所以很早睡。  ","date":"2021-07-08T22:51:43+08:00","permalink":"https://Luke2336.github.io/p/20210707/","title":"2021/07/07 日記"},{"content":"心情不太好，覺得自己能力很糟糕。\n","date":"2021-07-08T22:51:35+08:00","permalink":"https://Luke2336.github.io/p/20210706/","title":"2021/07/06 日記"},{"content":" 白天因為壓力大的緣故，什麼都沒做。 男朋友又一次提了休學的建議，但我覺得自己上學期有努力做到很好，下學期應該也做得到吧。 專題的事讓我壓力很大，星期三傍晚要跟老師當面談。 傍晚大概把 FastDP 實作出來，用來找 optimal region。後來發現忘記考慮 layer 的 weight 了，可能要自己實作 quick select。 晚上有弄實習的工作了，發現自己 document 有少讀，所以才會卡住。  ","date":"2021-07-05T22:37:06+08:00","permalink":"https://Luke2336.github.io/p/20210705/","title":"2021/07/05 日記"},{"content":" 稍微讀了一下專題的進度。 晚飯前練習寫 code。 晚上和ㄠㄨ開會討論 ICCAD 的 cell movement。  Code CSES 2183. Missing Coin Sum 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 ios::sync_with_stdio(0), cin.tie(0); 5 int n; 6 cin \u0026gt;\u0026gt; n; 7 vector\u0026lt;int\u0026gt; v(n); 8 for (int i = 0; i \u0026lt; n; ++i) 9 cin \u0026gt;\u0026gt; v[i]; 10 sort(v.begin(), v.end()); 11 if (v[0] \u0026gt; 1) { 12 cout \u0026lt;\u0026lt; \u0026#34;1\\n\u0026#34;; 13 return 0; 14 } 15 long long sum = v[0]; 16 for (int i = 1; i \u0026lt; n; i++) { 17 if (sum \u0026lt; v[i] - 1) { 18 cout \u0026lt;\u0026lt; sum + 1 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 19 return 0; 20 } 21 sum += v[i]; 22 } 23 cout \u0026lt;\u0026lt; sum + 1 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 24 return 0; 25}  CSES 2216. Collecting Numbers 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 ios::sync_with_stdio(0), cin.tie(0); 5 int n; 6 cin \u0026gt;\u0026gt; n; 7 vector\u0026lt;int\u0026gt; v(n); 8 for (int i = 0; i \u0026lt; n; i++) 9 cin \u0026gt;\u0026gt; v[i]; 10 vector\u0026lt;int\u0026gt; pos(n + 1); 11 for (int i = 0; i \u0026lt; n; i++) 12 pos[v[i]] = i; 13 int ans = 1; 14 for (int i = 2; i \u0026lt;= n; i++) 15 if (pos[i - 1] \u0026gt; pos[i]) 16 ans++; 17 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 18 return 0; 19}  CSES 2217. Collecting Numbers II 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 ios::sync_with_stdio(0), cin.tie(0); 5 int n, q; 6 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; q; 7 vector\u0026lt;int\u0026gt; v(n); 8 for (int i = 0; i \u0026lt; n; i++) 9 cin \u0026gt;\u0026gt; v[i]; 10 vector\u0026lt;int\u0026gt; pos(n + 1); 11 for (int i = 0; i \u0026lt; n; i++) 12 pos[v[i]] = i; 13 int ans = 1; 14 for (int i = 2; i \u0026lt;= n; i++) 15 if (pos[i - 1] \u0026gt; pos[i]) 16 ans++; 17 while (q--) { 18 int a, b; 19 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 20 a--, b--; 21 int va = v[a]; 22 int vb = v[b]; 23 swap(v[a], v[b]); 24 set\u0026lt;int\u0026gt; s {max(va, 2), min(va + 1, n), max(vb, 2), min(vb + 1, n)}; 25 for (int i : s) 26 if (pos[i - 1] \u0026gt; pos[i]) 27 ans--; 28 pos[va] = b, pos[vb] = a; 29 for (int i : s) 30 if (pos[i - 1] \u0026gt; pos[i]) 31 ans++; 32 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 33 } 34 return 0; 35}  CSES 1753. String Matching 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3void z_build(string \u0026amp;s, vector\u0026lt;int\u0026gt; \u0026amp;z) { 4 int bst = z[0] = 0; 5 for (int i = 1; s[i]; ++i) { 6 if (z[bst] + bst \u0026lt; i) z[i] = 0; 7 else z[i] = min(z[bst] + bst - i, z[i - bst]); 8 while (s[z[i]] == s[i + z[i]]) ++z[i]; 9 if (z[i] + i \u0026gt; z[bst] + bst) bst = i; 10 } 11} 12int z_match(string \u0026amp;s, string \u0026amp;t) { 13 int ans = 0; 14 int lens = s.length(), lent = t.length(); 15 vector\u0026lt;int\u0026gt; z(lens + lent + 1); 16 string st = s + \u0026#34;$\u0026#34; + t; 17 z_build(st, z); 18 for (int i = lens + 1; st[i]; ++i) 19 if (z[i] == lens) ++ans; 20 return ans; 21} 22int main() { 23 ios::sync_with_stdio(0), cin.tie(0); 24 string s, p; 25 cin \u0026gt;\u0026gt; s \u0026gt;\u0026gt; p; 26 cout \u0026lt;\u0026lt; z_match(p, s) \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 27 return 0; 28}  ","date":"2021-07-04T09:54:24+08:00","permalink":"https://Luke2336.github.io/p/20210704/","title":"2021/07/04 日記"},{"content":"沒睡好的一天，幾乎什麼事都沒做。\n隊練 因為心情不好和頭痛，所以大概練到三小時，我就提早收工了。\n2015 ACM Syrian Collegiate Programming Contest 簡單題滿多的一套題，前面開得很順，鍵盤幾乎沒有空下來。\nJ. Smooth Developer 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 ios::sync_with_stdio(0), cin.tie(0); 5 int T; cin \u0026gt;\u0026gt; T; 6 while (T--) { 7 int n, k; 8 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; k; 9 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; G(n + 1); 10 map\u0026lt;string, int\u0026gt; mp; 11 vector\u0026lt;string\u0026gt; Name; 12 int sz = 0; 13 for (int i = 0; i \u0026lt; n; i++) { 14 string name; 15 cin \u0026gt;\u0026gt; name; 16 if (mp[name] == 0) { 17 mp[name] = ++sz; 18 Name.push_back(name); 19 } 20 int v = mp[name]; 21 int c; cin \u0026gt;\u0026gt; c; 22 for (int j = 0; j \u0026lt; c; ++j) { 23 cin \u0026gt;\u0026gt; name; 24 if (mp[name] == 0) { 25 mp[name] = ++sz; 26 Name.push_back(name); 27 } 28 int u = mp[name]; 29 G[v].push_back(u); 30 } 31 } 32 vector\u0026lt;bool\u0026gt; visit(n + 1); 33 for (int i = 0; i \u0026lt; k; ++i) { 34 string name; 35 cin \u0026gt;\u0026gt; name; 36 int v = mp[name]; 37 queue\u0026lt;int\u0026gt; q; 38 q.push(v); 39 visit[v] = true; 40 while (!q.empty()) { 41 int u = q.front(); q.pop(); 42 for (int uu : G[u]) { 43 if (visit[uu]) continue; 44 visit[uu] = true; 45 q.push(uu); 46 } 47 } 48 } 49 for (int i = 0; i \u0026lt; n; i++) 50 if (visit[i + 1]) 51 cout \u0026lt;\u0026lt; Name[i] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 52 } 53 return 0; 54}  M. ACPC Headquarters : AASTMT (Stairway to Heaven) 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, int\u0026gt; pii; 4int main() { 5 ios::sync_with_stdio(0); 6 cin.tie(0); 7 int T; cin \u0026gt;\u0026gt; T; 8 while (T--) { 9 int n; cin \u0026gt;\u0026gt; n; 10 map\u0026lt;string, vector\u0026lt;pii\u0026gt;\u0026gt; mp; 11 for (int i = 0; i \u0026lt; n; i++) { 12 string name; 13 cin \u0026gt;\u0026gt; name; 14 int S, E; 15 cin \u0026gt;\u0026gt; S \u0026gt;\u0026gt; E; 16 int V; cin \u0026gt;\u0026gt; V; 17 for (int i = 0; i \u0026lt; V; ++i) { 18 cin \u0026gt;\u0026gt; name; 19 mp[name].emplace_back(S, E); 20 } 21 } 22 vector\u0026lt;string\u0026gt; ans; 23 for (auto pr : mp) { 24 string name = pr.first; 25 auto v = pr.second; 26 sort(v.begin(), v.end()); 27 int L = 0; 28 bool overlap = false; 29 for (pii p : v) { 30 if (p.first \u0026lt;= L) { 31 overlap = true; 32 break; 33 } 34 L = max(L, p.second); 35 } 36 if (overlap) 37 ans.push_back(name); 38 } 39 cout \u0026lt;\u0026lt; ans.size() \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 40 for (auto s : ans) 41 cout \u0026lt;\u0026lt; s \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 42 } 43 return 0; 44}  ","date":"2021-07-03T08:43:09+08:00","image":"https://Luke2336.github.io/post/Diary/20210703/Standing.png","permalink":"https://Luke2336.github.io/p/20210703/","title":"2021/07/03 日記"},{"content":" 早上心情不好，覺得異常疲倦，工作也因此不太順利。 晚上看到轉系上機考的資訊公佈，7/14 下午要考試，於是就開始練手感。  Code ZJ. f698: 後序運算式 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4int main() { 5 ios::sync_with_stdio(0); 6 cin.tie(0); 7 string s; 8 stringstream ss; 9 getline(cin, s); 10 ss.str(s); 11 vector\u0026lt;ll\u0026gt; v; 12 while (ss \u0026gt;\u0026gt; s) { 13 if (isdigit(s.back())) { 14 v.push_back(stoi(s)); 15 } else { 16 ll r = v.back(); v.pop_back(); 17 ll l = v.back(); v.pop_back(); 18 if (s[0] == \u0026#39;+\u0026#39;) { 19 v.push_back(l + r); 20 } else if (s[0] == \u0026#39;-\u0026#39;) { 21 v.push_back(l - r); 22 } else if (s[0] == \u0026#39;*\u0026#39;) { 23 v.push_back(l * r); 24 } else { 25 v.push_back(l / r); 26 } 27 } 28 } 29 cout \u0026lt;\u0026lt; v.back() \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 30 return 0; 31}  ZJ. f707: 幸運 7 (Lucky Seven) 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 int ans = 0; 5 while (1) { 6 int n; 7 cin \u0026gt;\u0026gt; n; 8 if (!n) break; 9 if (!ans) ans = n; 10 if (n % 7 == 0 \u0026amp;\u0026amp; ans % 7 != 0) 11 ans = n; 12 else if (ans % 7 == 0 \u0026amp;\u0026amp; n % 7 == 0 \u0026amp;\u0026amp; n % 70 \u0026gt; ans % 70) 13 ans = n; 14 else if (ans % 7 != 0 \u0026amp;\u0026amp; n % 7 != 0 \u0026amp;\u0026amp; n % 77 \u0026lt; ans % 77) 15 ans = n; 16 } 17 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 18 return 0; 19}  ZJ. f885: 加總 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4int main() { 5 ios::sync_with_stdio(0); 6 cin.tie(0), cout.tie(0); 7 int T; 8 cin \u0026gt;\u0026gt; T; 9 while (T--) { 10 ll a, x; 11 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; x; 12 ll L = a, R = x; 13 while (L \u0026lt;= R) { 14 ll mid = (L + R) \u0026gt;\u0026gt; 1; 15 ll sum = (a + mid) * (mid - a + 1) \u0026gt;\u0026gt; 1; 16 if (sum \u0026lt; x) L = mid + 1; 17 else R = mid - 1; 18 } 19 cout \u0026lt;\u0026lt; L \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 20 } 21 return 0; 22}  ZJ. f680: 色塊數量 BFS\n1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 int n; 5 cin \u0026gt;\u0026gt; n; 6 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; v(n, vector\u0026lt;int\u0026gt;(n)); 7 for (int i = 0; i \u0026lt; n; ++i) 8 for (int j = 0; j \u0026lt; n; ++j) 9 cin \u0026gt;\u0026gt; v[i][j]; 10 const int dx[4] = {1, -1, 0, 0}; 11 const int dy[4] = {0, 0, 1, -1}; 12 int ans = 0; 13 for (int i = 0; i \u0026lt; n; ++i) { 14 for (int j = 0; j \u0026lt; n; ++j) { 15 if (v[i][j] == 0) continue; 16 ++ans; 17 int color = v[i][j]; 18 queue\u0026lt;int\u0026gt; qx, qy; 19 qx.push(i), qy.push(j); 20 v[i][j] = 0; 21 while (!qx.empty()) { 22 int x = qx.front(); qx.pop(); 23 int y = qy.front(); qy.pop(); 24 for (int di = 0; di \u0026lt; 4; ++di) { 25 int xx = x + dx[di]; 26 int yy = y + dy[di]; 27 if (xx \u0026lt; 0 || xx \u0026gt;= n) continue; 28 if (yy \u0026lt; 0 || yy \u0026gt;= n) continue; 29 if (v[xx][yy] == color) { 30 qx.push(xx), qy.push(yy); 31 v[xx][yy] = 0; 32 } 33 } 34 } 35 } 36 } 37 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 38 return 0; 39}  ZJ. f416: 果然我的期中程設考搞錯了什麼 rolling hash\n1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4const int P = 1000000007; 5ll modinv(ll a, ll p) { 6 ll pp = p, y = 0, x = 1; 7 while (a \u0026gt; 1) { 8 ll q = a / p,t = p; 9 p = a % p, a = t, t = y, y = x - q * y, x = t; 10 } 11 if (x \u0026lt; 0) x += pp; 12 return x; 13} 14int main() { 15 ios::sync_with_stdio(0), cin.tie(0); 16 int n; 17 string a, b; 18 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 19 ll hash = 0; 20 ll x = 1; 21 for (int i = 1; i \u0026lt; a.length(); ++i) 22 x = x * 26 % P; 23 for (int i = 0; a[i]; ++i) { 24 int c = a[i] - \u0026#39;A\u0026#39;; 25 hash = (hash * 26 + c) % P; 26 } 27 int len = a.length(); 28 ll now = 0; 29 ll inv = modinv(26, P); 30 int cnt = 0; 31 for (int i = 0; b[i]; ++i) { 32 int c = b[i] - \u0026#39;A\u0026#39;; 33 if (i \u0026gt;= len) 34 now = (now - x * (b[i - len] - \u0026#39;A\u0026#39;) % P + P) % P; 35 now = (now * 26 + c) % P; 36 if (i \u0026gt;= len - 1 \u0026amp;\u0026amp; now == hash) ++cnt; 37 } 38 cout \u0026lt;\u0026lt; (cnt == n ? \u0026#34;YES\u0026#34; : \u0026#34;NO\u0026#34;) \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 39 return 0; 40}  ","date":"2021-07-02T19:58:53+08:00","permalink":"https://Luke2336.github.io/p/20210702/","title":"2021/07/02 日記"},{"content":" 一下子半年就過去了，已經七月了。 今天滿有趣的，下午跟 Team 裡面的人玩 gartic.io。 晚上花了些時間想 ICCAD 的東西，原本考慮 LP，但時間可能太慢不適合。  ","date":"2021-07-01T21:18:14+08:00","permalink":"https://Luke2336.github.io/p/20210701/","title":"2021/07/01 日記"},{"content":" 晚上還是醒了很多次，但入睡速度變快了，早上醒來頭很昏。 下午去做了 MRI。 晚上看了 Erik 的影片，Advanced Data Structure Session 3: Geometric Structures I。  ","date":"2021-06-30T23:40:36+08:00","permalink":"https://Luke2336.github.io/p/20210630/","title":"2021/06/30 日記"},{"content":" 晚上醒來了三四次，每兩小時就醒來一次。最後睡不著，只好五點先吃了早餐再睡。 早上去看醫生，醫生猜測可能是 moyamoya disease，有待排除。  ","date":"2021-06-29T08:21:42+08:00","permalink":"https://Luke2336.github.io/p/20210629/","title":"2021/06/29 日記"},{"content":" 主要的時間都在實習。 晚餐吃了咖哩烏龍麵。 早上起來有些累。 ICCAD 決定用 FastDP 做 optimal region。  ","date":"2021-06-28T12:27:09+08:00","permalink":"https://Luke2336.github.io/p/20210628/","title":"2021/06/28 日記"},{"content":" 因為頭痛加失眠，心情很不好。 有試著認識一下 machine learning 和 deep learning 的一些名詞。 完成了修課心得的更新，成績還沒全部出來就是了。  ","date":"2021-06-27T18:53:25+08:00","permalink":"https://Luke2336.github.io/p/20210627/","title":"2021/06/27 日記"},{"content":" 這週負擔過重，所以今天算是都在還睡眠債。 有試著找一些機器學習相關的 youtube 來看。  ","date":"2021-06-26T20:39:33+08:00","permalink":"https://Luke2336.github.io/p/20210626/","title":"2021/06/26 日記"},{"content":"結束第一週的社畜生活，有些累，但今天有完成預定進度，覺得壓力有小一點。\n","date":"2021-06-25T21:10:18+08:00","permalink":"https://Luke2336.github.io/p/20210625/","title":"2021/06/25 日記"},{"content":"工作效率有回升了，身體還是有些疲倦，因為晚上固定睡兩小時就會醒來。\nToggl 期末主要的時間都花在 ICCAD 和寫 PACA 的 Final project，期末考則是因為生病，所以都考得很糟。\n","date":"2021-06-24T17:37:35+08:00","permalink":"https://Luke2336.github.io/p/20210624/","title":"2021/06/24 日記"},{"content":" 持續有些頭痛，做事效率不高。 去註冊組交了轉系資料。 去找葉老師談了專題的事，預計每兩週的週一早上 8:30 Meeting。  ","date":"2021-06-24T17:37:31+08:00","permalink":"https://Luke2336.github.io/p/20210623/","title":"2021/06/23 日記"},{"content":" 早上去竹東看感染科和神經內科，做了頸動脈和顱內血管超音波，似乎有些異常。 下午是 HR 的 Orientation 和 Host 的 meeting。 到晚上頭還是非常痛，不太能好好做事。  ","date":"2021-06-24T17:37:25+08:00","permalink":"https://Luke2336.github.io/p/20210622/","title":"2021/06/22 日記"},{"content":" 今天是第一天遠端上班，只能說自己的英文有待加強。 晚上將 EDA final report 交出去了，登出大三！ 研究了一下轉系的相關規定及修業規定，沒轉成功，也就是多修個電子學一二、電子實驗，再加上一門選修。降轉成功的話，就可以多修一下資工的碩班課，覺得是自己比較喜歡的，希望能轉成功。  ","date":"2021-06-21T23:51:28+08:00","permalink":"https://Luke2336.github.io/p/20210621/","title":"2021/06/21 日記"},{"content":" 寫完了轉系動機和自傳。 寫完了 ICCAD 的 alpha test。 最近看完了幾部動畫。  花咲くいろは 色づく世界の明日から   研究了一下 FLUTE。  ","date":"2021-06-20T22:07:31+08:00","permalink":"https://Luke2336.github.io/p/20210620/","title":"2021/06/20 日記"},{"content":"ABC A/a    German English     die Ananas pineapple   die Paprika bell pepper   Stift 原子筆    N/n    German English     die Nase nose   die Banane(n) banana     Ich brauche 9 Bananen, aber ich habe nur eine Banane.\n I/i    German English     die Information information   die Musik music     Ich liebe Musik.\n S/s    German English     der Salat salad   die Dose(n) can     Salat ist seht gesund und ich esse ihn gerne.\n U/u    German English     die Uhr watch   der Mund mouth     Wie viel Uhr ist es?\nEs ist 3 Uhr.\n T/t    German English     die Tomate tomato   das Brot bread     Das Brot schmeckt gut.\n E/e    German English     der Esel donkey 驢子   die Ente(n) duck    D/d    German English     die Dose(n) can   die Schokolade chocolate    O/o    German English     die Olive olive（橄欖）   die Hose trousers（長褲）    M/m    German English     das Messer knife   die Lampe light    H/h    German English     die Hand hand   die Hose trousers     Wie viele Finger hat eine Hand?\nEine Hand hat 5 Finger.\n L/l    German English     die Lampe light   der Polizist policeman     Was bst du von Beruf?\nIch bin sit 11 Jahren Polizist.\n F/f    German English     der Fisch fish   der Löffel spoon    Pf/pf    German English     die Pfanne pan   der Apfel apple    V/v    German English     der Vogel bird   der Pullover sweater     Ein Vogel singt.\n W/w    German English     die Wolle wool   die Krawatte(n) tie    G/g    German English     das Geld money   der Igel hedgehog（刺蝟）    K/k    German English     der Koffer suitcase   die Schokolade chocolate    ck    German English     der Rock skirt   der Rucksack backpack    C/c  發 z 和 k 兩種音。     German English     der Cent cent   die CD CD   der Computer computer   die Creme cream    Ch/ch  發 sh 和 k 兩種音。     German English     die Milch milk   das Buck book    Sch/sch    German English     die Schokolade chocolate   die Flasche bottle    St/st    German English     der Stuhl chair   der Stift pan    Sp/sp    German English     der Spiegel mirror   die Spinne(n) spider    B/b    German English     die Banane banana   die Zwiebel onion    P/p    German English     die Pizza pizza   die Paprika bell paper     Ist die Pizza mit Paprika?\nJa, die Pizza ist mit Paprika.\nIch esse Pizza mit Pilzen.\n R/r    German English     die Rose rose   die Schere scissors    Z/z    German English     die Zitrone lemon   die Pizza pizza    Au/au    German English     Auge eye   Bauch belly    Eu/eu    German English     Euro Euro   Flugzeug airfly    Ei/ei    German English     Eis Ice   Kleid dress    ie    German English     Knie knee   Spiegel mirror    Y/y ß Qu/qu X/x J/j Ä/ä Ö/ö Ü/ü ","date":"2021-06-20T13:29:40+08:00","permalink":"https://Luke2336.github.io/p/dw_abc/","title":"[DW] ABC"},{"content":" 將離散考卷重新評分。 用 Simulated Annealing 做 PACA 的 Final Project。 寫完 PACA 的 HW4，卡了很久的 WA，後來才發現它定義的 pos 和 neg 跟我相反。 開始吃了頭暈藥 Diphenidol，覺得有改善。 晚上將 Router 的 bug 解決了！ 很開心今天精神很好，把很多東西解決了！！  ","date":"2021-06-19T09:17:21+08:00","permalink":"https://Luke2336.github.io/p/20210619/","title":"2021/06/19 日記"},{"content":" 早上把 Router 寫了一個進度，但還是有 bug。 下午去看醫生。 晚上改完了離散考卷。  選課結果 選課最後從九點延到兩點截止，選課結果在四點公佈。除了資料探勘外都有選上。\n之後預計將課表選成下面這樣，19 學分，比預計多不少，但我覺得時間上不會太密，中午幾乎都有空檔休息，這樣還滿好的。週五下午也空出來，可以考慮去清大玩。明明覺得這學期 15 學分很累，但還是比預計多選了兩門課。\nCOVID 篩檢 因為頭暈和發燒去看了一般內科，今天剛好是感染科，因為燒了 10 天，現場也量到 37.6，於是就被丟去急診的隔離室，待了兩小時，被戳了兩下採檢，做了 X 光，然後等了一個鐘頭才被放走，花了 2014 元。雖然晚上 PCR 出來是陽性，但還是要自主隔離三天。外套留在男友手裡，於是快冷死了\u0026hellip;\u0026hellip;\n","date":"2021-06-19T09:17:14+08:00","permalink":"https://Luke2336.github.io/p/20210618/","title":"2021/06/18 日記"},{"content":" 早上很早就醒來了，寫了一下 Router，之後回去小睡。 下午把教育學概論的報告趕出來了，比想像中快。 收到 Google 寄來的工作用電腦。  ","date":"2021-06-17T17:27:05+08:00","permalink":"https://Luke2336.github.io/p/20210617/","title":"2021/06/17 日記"},{"content":" 下午大略的把受壓迫者教育學讀完了，寫作方向可能想結合台灣的教改。 被學長邀去煮白醬麵，但已經發燒好幾天，所以就拒絕了。 下午不知道為何流鼻血。 晚上跟ㄠㄨ趕了一下 Router 的進度。  選課  今天多選了幾門課，希望能在初選就選到需要的學分數。 晚上發現「實驗版畫」被手動加選了！！  ","date":"2021-06-16T09:37:17+08:00","permalink":"https://Luke2336.github.io/p/20210616/","title":"2021/06/16 日記"},{"content":" 下午燒到 38 度了，但今天精神特別好。 早上考正規，滿快就寫完了，跟考古題沒差太多。 下午和晚上就忙著改離散作業。 下午因為選課的事打到資工系辦，因為不太爽很多課都沒辦法在第一階段選，於是就又打去課務組問優先權的事。結論如下：  研究所的課：研究所 \u0026gt; 大學部 大學部：預設年級 \u0026gt; 四年級 \u0026gt; 三年級 \u0026hellip;    ","date":"2021-06-16T09:37:12+08:00","permalink":"https://Luke2336.github.io/p/20210615/","title":"2021/06/15 日記"},{"content":" 早上寫了正規的考古題。 晚上讀了《受壓迫者教育學》的第二章。 白天很不舒服，都在昏睡，於是傍晚去看醫生，但一講發燒，就被拒收了 QQ  ","date":"2021-06-14T20:02:07+08:00","permalink":"https://Luke2336.github.io/p/20210614/","title":"2021/06/14 日記"},{"content":" 今天都在複習正規，明天會寫一回考古題。 還是有點燒，大概到 37.5 而已，有些噁心感，頭還是很暈。  正規語言概論 - 期末筆記 ","date":"2021-06-13T21:15:34+08:00","image":"https://Luke2336.github.io/post/Diary/20210613/Photos/16.jpg","permalink":"https://Luke2336.github.io/p/20210613/","title":"2021/06/13 日記"},{"content":" 上午一直在昏睡。 下午也沒做太多事，想改離散作業，但只改了一份就覺得很累，繼續昏睡。 讀了正規的 Lec 9. 10。 最近做事效率下降，連帶的也懶得寫日記。 最近玩了「貓咪大戰爭」，開始卡關了，轉蛋的運氣也都不太好。  ","date":"2021-06-12T22:02:12+08:00","permalink":"https://Luke2336.github.io/p/20210612/","title":"2021/06/12 日記"},{"content":" 早上去了趟竹東。 將這週教育學學習單寫完。 繼續讀了一點《受壓迫者教育學》。  ","date":"2021-06-12T22:02:08+08:00","permalink":"https://Luke2336.github.io/p/20210611/","title":"2021/06/11 日記"},{"content":" 考 EDA 期中考，因為考了些名詞解釋，還有第七章的一些東西，沒有認真讀到，最後就提早交卷了。發燒的狀況下，不太想動腦。 讀了一點點教育學概論期末報告的書《受壓迫者教育學》。  ","date":"2021-06-12T22:02:02+08:00","permalink":"https://Luke2336.github.io/p/20210610/","title":"2021/06/10 日記"},{"content":" 錄了德文期末考的影片。 讀了一點點 EDA。 ICCAD 的 alpha test 延到 6/22。  ","date":"2021-06-09T12:20:17+08:00","permalink":"https://Luke2336.github.io/p/20210609/","title":"2021/06/09 日記"},{"content":" 白天讀了 EDA 的 Lec7，因為壓力大所以一直睡到晚上 8 點。 起床後吃了麥當勞，然後看了正規的 Lec14，感覺結束的有些草率，沒有教到 Linear Reduction。 半夜被樓下抗議說拖椅子的聲音太吵。 因為午覺睡太晚，所以躺到四點左右才睡著。睡前想了一下系羽的學長，於是就作了一個不怎麼愉快的夢。  ","date":"2021-06-09T12:20:11+08:00","permalink":"https://Luke2336.github.io/p/20210608/","title":"2021/06/08 日記"},{"content":" 花了一些時間將英文作文的 Portfolio 修改好。 把 EDA 的練習題寫完。 相對有進度的一天，於是晚上就看了幾集動畫。  ","date":"2021-06-07T00:42:41+08:00","permalink":"https://Luke2336.github.io/p/20210607/","title":"2021/06/07 日記"},{"content":" 前一天沒做什麼事，於是今天壓力也很大，沒辦法做事，覺得很無助。 宿舍的盆栽太久沒管他了，似乎被丟掉了，有些難過。 躺了很久，還是做不到吃晚餐，本來想吃麥當勞，但下去的時候已經打烊了，只好買了兩支冰棒。  ","date":"2021-06-07T00:42:35+08:00","permalink":"https://Luke2336.github.io/p/20210606/","title":"2021/06/06 日記"},{"content":" 幾乎整天都沒做什麼事，壓力好大。 正規第二次期中的成績出來了，感覺考得還行。  ","date":"2021-06-05T00:51:08+08:00","permalink":"https://Luke2336.github.io/p/20210605/","title":"2021/06/05 日記"},{"content":"今天有唸了一些 EDA 的期中考，覺得唸得有些粗淺，不太喜歡細節。下午有把離散 HW6 的解答寫完，晚上運動了一下，剩下的時間都在看動畫。嘴巴因為昨天塗口內膏的關係有好一點，但今天效率仍然不高。\n","date":"2021-06-05T00:51:03+08:00","permalink":"https://Luke2336.github.io/p/20210604/","title":"2021/06/04 日記"},{"content":"早上腦袋昏沈，於是幾乎都在睡，只喝了牛奶。口角內側發炎一週以上了，很痛，吃不太下東西。胃滿痛的，下午醒來時換下腹痛。\n大致上一整天只把英文作文的 Portfolio 美編完，還有把通識學習單寫完。\n","date":"2021-06-03T13:35:18+08:00","permalink":"https://Luke2336.github.io/p/20210603/","title":"2021/06/03 日記"},{"content":"終於有進度的一天！\n 下午將 Portfolio 完成。 飯前看了欠的德文教學影片。 晚上將德文期末考的草稿寫好。 之後寫了一半的離散 HW6 解答。  ","date":"2021-06-03T13:35:13+08:00","permalink":"https://Luke2336.github.io/p/20210602/","title":"2021/06/02 日記"},{"content":"大致上還是昏昏的，沒辦法做什麼事，於是就只把英文寫作的 Portfolio 排版了一下。\n","date":"2021-06-01T00:01:21+08:00","permalink":"https://Luke2336.github.io/p/20210601/","title":"2021/06/01 日記"},{"content":"一整天都在昏睡，只簡單地改了一下幾篇英文作文，我想這學期可能就會這樣被混過，滿難過的。近期起身時，總是頭昏目眩，眼前黑黑的，腦袋也覺得很昏很累，好難受。\n","date":"2021-06-01T00:01:07+08:00","permalink":"https://Luke2336.github.io/p/20210531/","title":"2021/05/31 日記"},{"content":"終於下雨了，有稍微踏出門散散心，有保持不跟人接觸就是了。今天只有看了一下德文的影片，當作放假日。晚上吃了 KFC，覺得心情還不錯。\n","date":"2021-05-31T00:26:39+08:00","permalink":"https://Luke2336.github.io/p/20210530/","title":"2021/05/30 日記"},{"content":"很有進度的一天，寫完了正規作業，晚上也把 PACA 的 HW3，花了一些時間把 Viterbi Algorithm 想清楚。\n","date":"2021-05-31T00:26:31+08:00","permalink":"https://Luke2336.github.io/p/20210529/","title":"2021/05/29 日記"},{"content":"整體上昏睡了滿久的，寫了教育學概論的學習單，還有一些正規 HW5。晚上和隊友補了前一週的題組。\n隊練 2020-2021 ICPC Southwestern European Regional Contest (SWERC 2020) Penalty 有點高的一場，但還是有把能做的都做完，後面很多時間都在搞 pF 模運算的問題。我只有寫了 pC，算是滿巧妙的一題。pK 算是隊友實作一直出事，不然其實就只是 rolling hash 加二分搜而已。pD 算是滿水的，但一開始不在風向上。\nC. Safe Distance 滿有趣的是隊友想到建圖時要把上界跟下界都建成點，維護聯通性。然後我想到把邊排序後做，就不需要二分搜之類的操作。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;double, double\u0026gt; point; 4typedef pair\u0026lt;int, int\u0026gt; pii; 5#define x first 6#define y second 7inline double distance(point a, point b) { 8 return sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y)); 9} 10struct UF { 11 vector\u0026lt;int\u0026gt; par, sz; 12 UF(int n) { 13 par.resize(n), sz.resize(n, 1); 14 for (int i = 0; i \u0026lt; n; i++) par[i] = i; 15 } 16 int parent(int x) { 17 if (par[x] != x) par[x] = parent(par[x]); 18 return par[x]; 19 } 20 void uni(int x, int y) { 21 x = parent(x), y = parent(y); 22 if (x == y) return; 23 if (sz[x] \u0026lt; sz[y]) { 24 int t = x; x = y; y = t; 25 } 26 sz[x] += sz[y], par[y] = x; 27 } 28 bool connect(int x, int y) { 29 return parent(x) == parent(y); 30 } 31}; 32int main() { 33 ios::sync_with_stdio(0); 34 cin.tie(0); 35 int X, Y, N; 36 cin \u0026gt;\u0026gt; X \u0026gt;\u0026gt; Y \u0026gt;\u0026gt; N; 37 vector\u0026lt;point\u0026gt; p(N); 38 for (int i = 0; i \u0026lt; N; i++) cin \u0026gt;\u0026gt; p[i].x \u0026gt;\u0026gt; p[i].y; 39 UF uf(N + 2); 40 vector\u0026lt;pair\u0026lt;double, pii\u0026gt;\u0026gt; dis; 41 for (int i = 0; i \u0026lt; N; i++) 42 for (int j = i + 1; j \u0026lt; N; j++) 43 dis.emplace_back(distance(p[i], p[j]) / 2, pii(i, j)); 44 for (int i = 0; i \u0026lt; N; i++) { 45 dis.emplace_back(p[i].x, pii(i, N)); // up 46 dis.emplace_back(Y - p[i].y, pii(i, N)); // up 47 dis.emplace_back(X - p[i].x, pii(i, N + 1)); // down 48 dis.emplace_back(p[i].y, pii(i, N + 1)); // down 49 } 50 sort(dis.begin(), dis.end()); 51 for (int i = 0; i \u0026lt; dis.size(); i++) { 52 int a = dis[i].y.x, b = dis[i].y.y; 53 uf.uni(a, b); 54 if (uf.connect(N, N + 1)) { 55 cout \u0026lt;\u0026lt; fixed \u0026lt;\u0026lt; setprecision(6) \u0026lt;\u0026lt; dis[i].x \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 56 break; 57 } 58 } 59 return 0; 60}  ","date":"2021-05-31T00:26:23+08:00","permalink":"https://Luke2336.github.io/p/20210528/","title":"2021/05/28 日記"},{"content":"今天改離散作業到五點多才睡，然後中午吃點水餃，改一點作業，就開始上 EDA，是講關於 test 的東西，但講到作業時，我的專注力已經發散掉了，沒什麼認真聽。之後改完作業，花了不少時間登記成績。之後就吃了晚餐，整理一下環境，然後將英文寫作 HW2 修改後交出去。晚上忘記要上口說課，於是遲到了將近一節課。\nToggl 疫情之後，作息就一直有待調整，效率也降低不少，希望之後能盡快調整好步調。最近花了不少時間在做 TA 的工作，但難度都不高就是了。\n","date":"2021-05-27T04:09:47+08:00","permalink":"https://Luke2336.github.io/p/20210527/","title":"2021/05/27 日記"},{"content":"前一晚有睡的比較好，但可能是因為吃了藥，所以整個早上都在昏睡。中午吃了優格，下午寫了兩題正規作業後，又繼續睡到五點，中間做了很多夢，有些分不清楚夢境和現實，夢裡還有夢的感覺。晚上吃了義大利麵，然後就一直都在改離散作業，這件事超殺時間的。因為白天睡太多，於是睡不太著，只好繼續改作業。\n 看到高風險族群的死亡人數逐漸攀升，令人感到有些焦慮，但封鎖後各種經濟上的困難更令人感到不安，無法明確知道這樣的狀況會持續多久。醫療體系明顯超載，但政府解決不了，他也無法說無法負荷。疫苗因為政治因素卡著，這樣的犧牲究竟值得嗎？看到很多文章在以外國的經驗談論英國變種病毒，只能說不管鎖多久都不見得有效，因為只要有存在一個無症狀者，同樣的狀況就要再循環一次，不斷的封鎖不能解決問題，只會導致社會愈來愈動盪，疫苗才能將這個循環打破。台灣真的能撐到國產疫苗完成嗎？\n","date":"2021-05-26T00:22:33+08:00","permalink":"https://Luke2336.github.io/p/20210526/","title":"2021/05/26 日記"},{"content":" 前一晚有些失眠，於是睡到很晚。 中午設錯鬧鐘，睡過頭，於是就沒上到 MT 的課，有些崩潰。 之後寫了四成的正規作業。 午餐吃了水餃，但因為是韭菜的沒什麼胃口。晚餐叫了 pizza，換換口味。  ","date":"2021-05-26T00:13:30+08:00","permalink":"https://Luke2336.github.io/p/20210525/","title":"2021/05/25 日記"},{"content":" 今天滿緊張的，花了很多時間在 Debug，有一些迴圈的 index 寫錯，幸好傍晚有成功寫出來 PACA 的 midterm project。 晚上花了一點時間把羽球的期末報告寫完。  ","date":"2021-05-26T00:13:24+08:00","permalink":"https://Luke2336.github.io/p/20210524/","title":"2021/05/24 日記"},{"content":" 花了不少時間研究用 SAT 解 treewidth 的方法。 下午跟組員討論了英文寫作課的報告。 晚餐自己做了優格義大利麵\u0026hellip;\u0026hellip;  ","date":"2021-05-23T12:18:16+08:00","permalink":"https://Luke2336.github.io/p/20210523/","title":"2021/05/23 日記"},{"content":" 早上寫完了教育學概論這週的學習單，想到要寫期末報告就覺得有些煩。 中午躺了一下，睡起來頭很昏，於是昏睡了很久。 下午研究了一下 PACA Milestone 3，找到了一個感覺滿有趣的題目，是將 Treewidth 用 SAT solver 解。 看到轉系相關的規定公布了，其中四年級的轉系規定，讓我不確定我降轉會不會被接受，「性質相近的科系」沒有具體的定義。 晚上吃優格當晚餐，然後把離散 HW5 的解答寫完。 今天公布了 700 多例，但因為有幾例的檢驗是好幾天前的，於是有了「校正回歸」。 看到第四級的標準，顯然中央不太想進入第四級，很多用詞都留有解釋空間。 看到目前的局勢，不知道我是不是太悲觀了，感覺第三級會維持幾個月。 我已經悶到覺得很憂鬱了，做事效率不斷下降，但再撐一個月就暑假了。  ","date":"2021-05-22T12:18:52+08:00","image":"https://Luke2336.github.io/post/Diary/20210522/%E6%A0%A1%E6%AD%A3%E5%9B%9E%E6%AD%B8.jpg","permalink":"https://Luke2336.github.io/p/20210522/","title":"2021/05/22 日記"},{"content":" +312 本土案例，主要還是集中雙北。網路上流傳的確診足跡地圖 Google Map。 早上把英文作文的 project 發布，中午睡了一下。 下午跟ㄠㄨ把 ICCAD 的問題 email 給主辦單位，完成了 Grid Manager。他說他這幾週要口試，於是 Router 的部分交給我用 Steiner Tree 做做看。 補完了週一的 EDA 影片，把羽球課要寫心得的影片看完，今天算是沒什麼進度，令人擔憂。 最近重新開始玩貓咪大戰爭，不小心有些上癮了 QAQ 晚餐吃了雞腿肉。  ","date":"2021-05-22T12:18:46+08:00","permalink":"https://Luke2336.github.io/p/20210521/","title":"2021/05/21 日記"},{"content":" 今日本土 +286，一半都集中在新北。 早上將衣服洗完，下午將生輔組的資料交了，打算近期不在校園內走動。 下午改完離散 Exam2 了，改起來比想像中快。 葉老師有跟我提了專題的事，目前評估起來是可以嘗試，因為覺得一個學期實在太尷尬了，大部分的老師應該都不太會想收我。 晚上的英文會話滿無聊的，於是有點半耍廢狀態。  週末 TODO  ICCAD 進度 PACA Mid. Proj. Milestone 3 英文寫作 project 教育學概論學習單 EDA 影片 羽球影片心得 正規影片 離散解答  ","date":"2021-05-20T18:09:54+08:00","permalink":"https://Luke2336.github.io/p/20210520/","title":"2021/05/20 日記"},{"content":" 早上異常頭昏，就睡到十一點多，之後的時間主要是佈置新的工作環境。 早餐吃飯糰，中午叫了牛肉麵吃，晚上吃了乾麵。 下午補完了正規 CH11，晚上將德文影片補完了。 今天全國進入三級，+267。今天有另一批 AZ 進到台灣，希望足夠讓第一線人員接種。 看到家裡附近的全聯有一例，覺得有些擔心，基隆的狀況很不樂觀。  ","date":"2021-05-19T23:20:33+08:00","permalink":"https://Luke2336.github.io/p/20210519/","title":"2021/05/19 日記"},{"content":" 今天早上起床因為生理期不舒服，所以中午前幾乎沒有任何工作進度。 下午上了 MT 的課，今天介紹了一些 class，例如 co-NP, RP, co-RP, \u0026hellip;\u0026hellip;。 本土 +240，愈來愈多死亡案例了。 最近非常焦慮，每天都花不少時間看網路新聞。 晚上去看了醫生，拿了較長期的藥，怕近期不方便去醫院。  期末 好炸啊！！！\nPACA  Midterm Project (5/24) HW: Hidden Markov Model HW: Pipelining Final Project: Neural Architecture Search  EDA  ICCAD - Alpha Test (6/5) HW4 Exam (6/10)  English Writing  Project Portfolio  German  Final Exam (6/9)  教育學概論  每週學習單 期末讀書心得 (6/20)  正規  HW5 HW6 Final Exam  離散  HW5, HW6 解答＋改作業 登記程式作業成績  其他  轉系文件 選課 生輔組文件  ","date":"2021-05-18T15:04:56+08:00","permalink":"https://Luke2336.github.io/p/20210518/","title":"2021/05/18 日記"},{"content":" +330 例本土。 早上的英文寫作課沒有合適的遠距環境，讓我有些困擾。 晚上把 EDA 和 PACA 的影片看完。 今天又一輪分區停電，但不知道為何，我家跟交大都不會停。  ","date":"2021-05-18T15:04:48+08:00","permalink":"https://Luke2336.github.io/p/20210517/","title":"2021/05/17 日記"},{"content":" 早上三點多醒來了很久，之後睡到八點多，起床後就一直過敏。中午原本想趕 ICCAD 的進度，但因為過敏，再加上沒有適合遠距的工作環境，於是就去睡午覺了。醒來後，去買了麥當勞當午餐。 錄了 OJ 的使用教學，覺得自己的英文超破的。 今天 +206，雙北的醫療負荷量非常大，隔離病房不足，感覺再過幾天就會到達極限。 事情愈積愈多，但最近卻常常過敏，無法認真做事，希望之後能有所改善。 隊練最近對我來說感到有些倦怠，不知道是不是該退出競程圈了\u0026hellip; 因為熱到受不了，昨晚開始開冷氣了。  TODO  看課程影片 寫離散作業解答 完成英文作文 midterm project PACA midterm project milestone 3：實作 SAT solver 的 Application，可能的題目有：  Bioinformatics\u0026hellip; Euler’s Graeco-Latin square problem The 15-puzzle Maximum Clique 填字遊戲 其他 CSP   ICCAD alpha test (6/5) 教育學概論期末報告 (6/20) 準備 EDA 期末考  ","date":"2021-05-16T16:39:17+08:00","permalink":"https://Luke2336.github.io/p/20210516/","title":"2021/05/16 日記"},{"content":" 從昨日的 +29，直接 +180，雙北進入第三級。封閉了各項公共設施，個人覺得應該將教會、道場等集會場所也封閉比較安全。我覺得非常恐慌，於是就將一些錢給了弟弟，讓他有些現鈔可以避免封城後沒辦法出門工作。 新竹宣布「準第三集」，交大體育館關閉，也沒有對外交通車。 早上將離散的測資出完，希望時限能讓 Python 過。 EDA 的期中考宣布延後，這對我來說滿開心的，少了一項壓力。 晚上原本要打 Code Jam Round 2，但才打開題目，都還沒讀，就覺得心情不好不想打，可能是因為白天很累了，加上對疫情很焦慮。  ","date":"2021-05-15T17:57:12+08:00","permalink":"https://Luke2336.github.io/p/20210515/","title":"2021/05/15 日記"},{"content":" 原本以為今天會進入第三級，但因為基因序列檢查出，基隆、宜蘭、萬華的案例基因序列一樣，於是還停留在第二級。但學校開始有相關措施，例如封鎖邊界，禁止校外人士出入。 早上去竹東檢查，覺得心情不太好，被檢查的小姐唸說分不清楚乳房的位置。 中午因為疫情和諸多因素，有些焦慮，就取消和ㄠㄨ的約定，在床上休息。 離散打算要出程式作業，於是花了些時間想題目，和搞懂 NCTU OJ 的設定。跟老師討論後，出了一題用拓樸排序做最長路徑，另一題是檢查是不是 bipartite graph。  ","date":"2021-05-15T17:50:18+08:00","permalink":"https://Luke2336.github.io/p/20210514/","title":"2021/05/14 日記"},{"content":"今天只有 EDA 有照表操課，但我覺得好累，聽不太下去，所以只聽了一節課就放棄了。早上寫完了兩篇英文作文，放到 medium 上。TA Hour 改了一題離散期中考，覺得比想像中花時間。今天下午收到簡訊說，興達電廠運轉停擺，於是全台分區供電，很幸運的是交大未受此影響。晚上的英文會話因為擔心停電而停課。晚上覺得有些焦慮，遠距打亂了生活步調，讓一切變得很難掌握。之後有把下午的正規影片看完，很意外的是變成中文授課了？\n","date":"2021-05-13T09:06:54+08:00","permalink":"https://Luke2336.github.io/p/20210513/","title":"2021/05/13 日記"},{"content":"昨日升級到第二級警戒，疫情開始嚴重惡化了，傳出多起不明感染源的案例，整個北北基桃和宜蘭近日都有案例傳出，經過了母親節，不知道已經傳播到什麼地步了，感覺過不久就會到第三級警戒了。學校傍晚宣布課程全面線上化。\n拿學校獎學金買的 The Probabilistic Method 到貨了，跟天瓏訂的，覺得超開心的。4/29 下單，5/11 就到了，覺得進貨速度很快。不小心看到 Quantum Computation and Quantum Information 才 1860，好想下手！！\n今早一直過敏，德文課超痛苦的，只好吃一顆抗組織胺。下午的羽球課，因為老師帶校隊去比賽，所以放假。晚上因為 Hyperbola 沒空練習，於是時間就空出來把 EDA Lab3 寫完，主要的時間都花在寫 parser 處理 .dot 檔。課程有所變動，讓我感到有些焦慮，生活步調不知道會不會被打亂。\n德文 - 分離動詞    Trennbares Verb 中文     aussteigen 下車   einsteigen 上車   umsteigen 轉車   ankommen 駛入   einfahren 遇見   einkaufen 購物   fernsehen 看電視   anrefen 到達   aufpassen 注意   abholen 撿起    ","date":"2021-05-12T13:41:03+08:00","permalink":"https://Luke2336.github.io/p/20210512/","title":"2021/05/12 日記"},{"content":"早上是正規期中考，有些緊張，但大致上順利考完了，題目比第一次少。下午 MT 的課滿有趣的，上 FPT-Algorithm，但感覺今天自己的狀況不是很好，無法非常專注。晚上在愛買吃完晚餐後，就累到睡著了。\n","date":"2021-05-12T13:40:58+08:00","permalink":"https://Luke2336.github.io/p/20210511/","title":"2021/05/11 日記"},{"content":"今天早上的英文寫作課，發現很多組都沒有寫這次的作業，覺得大部分的人都不太會給建議。中午的課是在講 Pipeline \u0026amp; Retiming，覺得有些基礎的部分老師花了比較多時間，但關鍵的部分反而被帶過。EDA 的部分覺得有些無趣，大致上是把上次的內容總結，之後開始上下個主題。\n","date":"2021-05-10T09:08:34+08:00","permalink":"https://Luke2336.github.io/p/20210510/","title":"2021/05/10 日記"},{"content":"今天大部分時間都在寫作業，早上吃完早餐後，又去跟小乖玩，下午吃了油雞，晚上回家時大塞車，花了 110 分鐘才到，在路上有些焦慮不適，因此就請 LinLee 來載我，吃了宵夜聊了一下。\n早上大概一個半小時把英文作文寫完，然後就睡了一下才開始弄 EDA Lab3，幸好有弄出一定的進度。\nToggl 這幾週大部分時間都花在寫 EDA 作業上，英文作文也花了不少時間。上週末為了出去玩，有提早把作業趕完，但這週還是累積了一定的工作量。\n","date":"2021-05-10T09:08:26+08:00","permalink":"https://Luke2336.github.io/p/20210509/","title":"2021/05/09 日記"},{"content":"明天是母親節，但我晚上要提早回家，於是就提早跟外婆過了母親節，弟弟因為要上班所以就沒回家。\n","date":"2021-05-10T09:08:17+08:00","permalink":"https://Luke2336.github.io/p/20210508/","title":"2021/05/08 日記"},{"content":"因為沒有找內推，所以整個過程非常漫長。因為 12 月在忙交換的申請，所以就直接拿上一個年度的履歷去投。原本等到 2 月沒下文，以為不會上了，但開學時卻突然收到面試通知。面試算是裸考，沒有準備，幸好是中文面試，兩場連續。因為第一場 HR 弄反連結，於是有點 Delay 到第二場，所以兩場都有點緊張，於是表現的並沒有很好。覺得自己去年面得比較好，但不幸因為疫情被取消。原本以為無望時，3 月底又接到 HR 的通知，說 4 月底開始 team match。之後超怕 match 不到 team，但這幾天終於接到通知了。福利比想像中高，因為疫情也可以選擇 remote 或 on-site，還有不少津貼。\n因為我完全沒有準備，所以沒辦法寫一篇「第一次面試就上手」。全都是靠打比賽的知識撐場，平常和隊友討論的習慣算是有稍微發揮到吧。\n謠傳說，履歷愈早丟，被面試到的機會愈高，後面的日程也比較不會被卡到。\n日程表    Date Status     2020/12/16 Invitation Mail   2020/12/17 Summit Resume   2021/02/23 Interview Information   2021/03/03 2 Online Interview   2021/03/11 Hiring Committee Information Form   2021/03/24 Hiring Committee Approved   2021/05/06 Team Match Result \u0026amp; Offer Get    需要的資料  English Resume 1 Page Transcript  ","date":"2021-05-07T14:49:37+08:00","permalink":"https://Luke2336.github.io/p/google-intern-apply/","title":"Google Internship Application"},{"content":"早上和 Google 的 HR 線上討論 Offer 的內容，薪資比想像中高，很難想像自己的第一次實習就這麼刺激。預計 6 月下旬到 9 月上旬工作，目前是比較想要 On-site，雖然 HR 也有提供 Remote 的選項。\n中午吃完麥當勞後，就去搭往陽明的校車，人滿多的，只花了 65 分鐘就到陽明了，比想像中快速。之後就在他們的圖書館寫作業，等 Cynthia 下課。之後一起走到捷運站，聊了近況。\n在民權西路站，我先在麥當勞耍廢，等同學會的時間到，沒想到之後迷路了很久 QQ 先吃了[路邊烤肉中山店](104台北市中山區中山北路二段183巷4號路邊烤肉wildbbq 中山1樓)，然後因為想吃冰，走到中山站吃了鮮芋仙。有點可惜，只有 5 個人有空，但大家幾乎都沒什麼變，5 個人 5 間不同的學校，生活差滿多的，所以聊起來覺得很新鮮。\n之後就搭客運回家，先去看了小乖，因為很累，所以就直接睡了。\n","date":"2021-05-07T14:42:47+08:00","image":"https://Luke2336.github.io/post/Diary/20210507/%E5%90%8C%E5%AD%B8%E6%9C%83.jpg","permalink":"https://Luke2336.github.io/p/20210507/","title":"2021/05/07 日記"},{"content":"早上六點多又醒來了，心情很糟，之後就沒睡飽。今天的教育學概論比較特別，老師請了一個留德的音樂家來演講。下午的 EDA 出了作業，用 BDD 算 satisfiable 的機率，感覺上難度不高，只需要套 package 就行了，應該是一天可以搞定的。\n下午收到了 Google 的 team match 結果，約了明天早上談 offer，有些緊張，畢竟是第一次找實習。能第一次面試就找到工作真的算是很幸運，但還在猶豫自己適不適合那樣的環境？\n晚上想到要放假，心情就很好，喝了幾口沙瓦。\n","date":"2021-05-06T14:34:04+08:00","permalink":"https://Luke2336.github.io/p/20210506/","title":"2021/05/06 日記"},{"content":"今天羽球課扭傷右腳，打了三場單打，輸了兩場，覺得心情很糟。\n晚上因為 LinLee 想睡覺，Hyperbola 就不想練了，於是我就在宿舍幫我的 SAT solver debug，順便學了一下怎麼寫 shell script，但似乎對於輸出是 SAT 的部分很多是有 bug 的，不知道是不是我把他優化時弄壞了 QAQ 因為沒有時間，可能就拿這份隨便交出去了。\n晚上想到隔天 EDA 還要出作業，就覺得壓力很大。\n","date":"2021-05-05T17:13:25+08:00","permalink":"https://Luke2336.github.io/p/20210505/","title":"2021/05/05 日記"},{"content":"早上正規教了 Turing Machine，下午 MT 上的東西比較難懂，是有關於用 PCP 估計 approximation 的 bound。下午將正規 HW4 寫完了。晚上去竹東看了牙醫和家醫科，排了超音波的時間，智齒的部分已經長出來三顆，預計暑假處理。\n測了 SAT solver 的 milestone 2 benchmark，發現有兩筆無法在幾分鐘內跑出來，看來還有必要加強，發現偶爾會出現 runtime error 或 abort trap: 6。看到 Github 上這篇的結果就明顯比我的好。\n晚上和 T 聊了自己一直不敢跟別人說的缺點，也就是「不敢把自己的想法告訴別人」，覺得有些開心，終於把這件事告訴別人了。\n","date":"2021-05-04T23:37:25+08:00","permalink":"https://Luke2336.github.io/p/20210504/","title":"2021/05/04 日記"},{"content":"英文寫作課，主要是在講引用跟改寫的方法，又多了一樣團體作業，覺得有些煩躁。中午的課不明原因突然停課，於是多了些時間吃午餐和洗衣服。下午的 EDA 還是繼續講 ROBDD 的部分，但因為之前對 BDD 已經有所了解，所以覺得有些無趣。\n晚上有些爆炸，不知道為什麼就是覺得很累很不舒服，可能是前一天過敏藥的影響。\n","date":"2021-05-03T09:50:26+08:00","permalink":"https://Luke2336.github.io/p/20210503/","title":"2021/05/03 日記"},{"content":"幾乎一整天都在過敏，早上去了駁二，太陽很大，看了一些設計相關科系的畢業展，覺得素質普遍不高。下午去逛了夢時代，因為身體不舒服，加上腿很痠痛，所以就提早回新竹了。晚上早早就睡了，但還是覺得全身痠痛，頭也因為吃了抗組織胺有些悶。\n","date":"2021-05-03T09:50:18+08:00","permalink":"https://Luke2336.github.io/p/20210502/","title":"2021/05/02 日記"},{"content":"去了橋頭糖廠和西子灣。晚上買了起司配蘋果酒，覺得很棒。\n","date":"2021-05-03T09:50:05+08:00","image":"https://Luke2336.github.io/post/Diary/20210501/sunset.jpg","permalink":"https://Luke2336.github.io/p/20210501/","title":"2021/05/01 日記"},{"content":"早上去竹東，中午一樣吃了天婦羅。下午在宿舍躺了一下後，走路去清大，處理了 ICCAD 的報名。然後開始寫 Grid Manager 的部分。晚上買了個飯捲吃，因為又想起大一大二的事，所以沒什麼胃口，心情很糟。\nToggl 大部分的時間都花在寫 EDA 作業和寫 SAT solver 上，在英文寫作上也花了不少時間。整個月花在課業上的時間比以前多了不少，希望能繼續維持下去。\n","date":"2021-05-03T09:49:50+08:00","permalink":"https://Luke2336.github.io/p/20210430/","title":"2021/04/30 日記"},{"content":"早上的教育學概論仍然無法專心上課，可能就是興趣問題而已。下午的 EDA 開始在講 Equivalance Checking。晚上的英文會話課覺得有些疲累。\n","date":"2021-04-29T15:03:17+08:00","permalink":"https://Luke2336.github.io/p/20210429/","title":"2021/04/29 日記"},{"content":"早上上了德文，因為準備不太夠，所以短劇演得有些卡。下午羽球課，教切球上網，但因為我的 partner 挑球質量不夠好，所以有點沒練到步伐。下課後留下來幫一個學妹練了切球，我順便練了挑球。因為嘴巴痛去看了醫生，但是只拿到了止痛藥。晚上覺得累到爆，所以去了 PCCA，但只打了一題就放棄了。在床上躺時， 左下腹突然超痛，於是花了一點時間才睡著。\n德文   Spiel 短劇\n  die Durchsage\n  \u0026ldquo;Bitte nicht einsteigen! Dieser Zug endet hier.\u0026rdquo;\n  telefonieren mit 人\n  Der Mann telefoniert mit der Lehrerin.\n= Der Mann ruft die Legreirin an . (anrufen)\n    zu Hause = at home\n  U-Bahn 捷運\n  S-Bahn 區間車\n  ankommen = arrive\n  ","date":"2021-04-28T10:16:34+08:00","permalink":"https://Luke2336.github.io/p/20210428/","title":"2021/04/28 日記"},{"content":"早上正規因為印作業有些遲到，講了 CFL 的 Pumping Lemma，覺得有些難度。中午喝了過期的牛奶配穀片，補了一陣子沒寫的日記。測了 EDA 討論區別人提供的測資，有順利跑出來，reroute 的 cost function 看起來是能 work 的。\n    2 2 2 2 2      1 2 3 3 3 3 3   1 2 3  4 4 3   1 2    4 3   1 2 2  1 4 3   1 1 1 1 1 4 3    4 4 4 4 4     下午上 MT 的課不小心下課時睡著，結果就到結束才醒來，有些可惜。之後心情不太好，就在床上混了一下，然後背了一下德文。晚餐吃了 Pizza，然後把 PACA 的 HW2 寫完，發現用 pyEDA 寫，其實大概不到 100 行。作業的 Queue 這兩天減少許多，覺得很開心。\n PyEDA 的 Tutorial  ","date":"2021-04-27T11:01:54+08:00","permalink":"https://Luke2336.github.io/p/20210427/","title":"2021/04/27 日記"},{"content":"早上的英文作文課，HW3 因為架構寫得好，於是被叫上去發表，HW5 的 Product Review 也被稱讚架構好看，因此心情還不錯。中午凱強的課是上 Google\u0026rsquo;s PageRank，算是簡單的線性代數，用 Adjacent Matrix 表示網頁之間的連結，之後算出每一個的相對分數。在系 K 把影片的心得寫完，然後去 EDA 拿練習卷，之後就回宿舍洗衣服，還有和學妹練習德文。\n晚餐吃了日式料理，覺得滿有趣的。之後就懶懶散散的，稍微寫了一點點 PACA HW2 的 input / output，還有讀了英文作文下次要寫 summary 的文章的前幾段。\n","date":"2021-04-27T11:01:49+08:00","permalink":"https://Luke2336.github.io/p/20210426/","title":"2021/04/26 日記"},{"content":"中午心情還是有些崩潰，只隨便買了鬆餅吃。然後就讓ㄠㄨ陪我把 EDA Lab2 重新寫完，但因為助教給的測資太小，所以測不太出效能。\n晚上去舊館打球，但人超多的，所以打得不太開心，胃也有些痛。\n","date":"2021-04-27T11:01:43+08:00","permalink":"https://Luke2336.github.io/p/20210425/","title":"2021/04/25 日記"},{"content":"中午吃了好吃的薄皮 Pizza，然後就到工四地下室去寫英文作文，但遇到管院 50 週年活動，超級吵雜的，心情很糟。約了某學長一起寫作業，但他姍姍來遲，且一直不自己 Google 他不會的東西，一直問東問西打擾我，讓我做事效率有些低，於是晚餐就藉機解散了。\n晚上自己把英文作文寫完了，然後發上去給 Partner 寫剩餘的部分。\n看到 EDA Lab1 的成績公佈了，我有一筆跑超時，於是分數變超低，心情很不好，就直接去床上躺了。\n","date":"2021-04-27T11:01:35+08:00","permalink":"https://Luke2336.github.io/p/20210424/","title":"2021/04/24 日記"},{"content":"早上和學妹討論德文口試的草稿，順便見識了 Typora，買了水餃吃時，順便裝來玩玩。\n下午在清大寫作業，買了咖啡社的起司蛋糕，還有自己泡了伯爵茶，試著把 EDA Lab2 寫完，但不知道為什麼 Reroute 寫壞了，每次都拔同一個點。\n走到二招，但不知道為什麼沒有營業，到水源街也沒什麼胃口。於是買了校慶擺攤的燒賣來吃，9 個 100 元，略略有些貴。心情因為寫不出來 Lab2，所以很糟糕，WY 給我看了賽馬娘的動畫後，心情有變好一點點。晚上大致完成德文期中考對話的草稿。\nTypora 覺得還滿好用的，但 tab 的問題有些小麻煩就是了，還有程式碼 highlight 的樣式不能自己設定，這幾點就不如 MacDown 方便。但還是決定跳槽一陣子看看，畢竟圖片可調大小是個很棒的誘因。之後有空應該會探索一下有什麼 Theme 是更好看的，目前是用預設的 Github 模式。\n","date":"2021-04-23T12:03:01+08:00","image":"https://Luke2336.github.io/post/Diary/20210423/tea.jpg","permalink":"https://Luke2336.github.io/p/20210423/","title":"2021/04/23 日記"},{"content":"今天早上睡得不好，於是心情也很糟糕。\n早上的教育學概論很無趣，但還是盡量問問題拿分。下午的 EDA 講了一些 routing 的 timing 問題，但 RC-delay 我真的沒辦法直觀的理解。正規則是講完了 NPDA 和 CFG 的等價轉換，可能之後需要一些時間讀懂。TA Hour 一樣沒有人來，於是就把時間拿來寫 EDA Lab2。晚上的英文口說課進入倦怠期了，讓週四疲倦感很高。\n睡前花了些時間想 reroute 用的 Dijkstra 的 cost function 該怎麼設計，應該會試著用路徑上的 max overflow 和 Distance 的線性組合。\n","date":"2021-04-22T11:46:16+08:00","permalink":"https://Luke2336.github.io/p/20210422/","title":"2021/04/22 日記"},{"content":"晚上因為隊友不想練習，我就在宿舍寫作業，把 EDA Lab2 的架構重寫，但最後有些耍廢，開始改起手機桌布和 Terminal。\n德文期中考 早上因為德文期中考沒睡好，做了一個德文的夢。原本以為會是中間組別，結果因為前面幾組空缺，第三組就換我們報告了，算是很順利的結束。\n這個報告是要報告一個食譜，我們選了夏威夷披薩，很多人都報告義大利麵。\n羽球 今天教了切球，用塑膠球切球不太習慣，結果被老師發現握拍不太對。星期日好像真的有些受傷，手很痠很痛。\n","date":"2021-04-22T11:46:10+08:00","permalink":"https://Luke2336.github.io/p/20210421/","title":"2021/04/21 日記"},{"content":"晚上去竹東，之後就都在準備德文期中口頭報告。\n正規期中考成績 早上正規發了考卷，考了 69，要了分數後變成 72，粗心錯了很多基本題。班平均是 58，標準差 22。上了 Nondeterministic Pushdown Automata，覺得很有趣。\n   Score People     0 - 9 1   10 - 19 2   20 - 29 3   40 - 49 7   50 - 59 7   60 - 69 9   70 - 79 9   80 - 89 2   90-99 2   100 - 109 2    難解問題 上了 λ-expander 用來判斷 connectivity，覺得很有趣，總算體會到線性代數的強大了。\n","date":"2021-04-20T22:36:10+08:00","permalink":"https://Luke2336.github.io/p/20210420/","title":"2021/04/20 日記"},{"content":" 早上的英文寫作課，有了體驗相對好的 peer review。但多了一份一週就要做好的 Product Review 要寫，而且是團體作業，讓我覺得壓力有些大，我選擇介紹 HackMd。 中午不小心在餐廳打翻豆漿。 下午的課精神不太好，但還是有聽懂 Viterbi Algorithm。 晚餐吃了好吃又很有飽足感的韓式料理，有很多免費小菜可以選，主菜量也夠大份，低消 $170 還能接受。 晚上很放鬆，洗了舒服的澡，之後耍廢到睡覺。  ","date":"2021-04-19T20:17:37+08:00","permalink":"https://Luke2336.github.io/p/20210419/","title":"2021/04/19 日記"},{"content":"約ㄠㄨ寫 code，因為 ICCAD 的 sample code 出來了，於是把之前的 parser 的 bug 修好了，之後跟他討論了 routing 的作業，晚餐吃了麥當勞。\n系羽 很久沒去打系羽了，這次人很少，不到十個，場地很空。大概練了一下球後，就開始打 play，主要都是在打前場，今天試著讓自己比較能壓迫對手，後場因為太久沒打球，切球切得有些失敗。\n","date":"2021-04-19T14:17:54+08:00","permalink":"https://Luke2336.github.io/p/20210418/","title":"2021/04/18 日記"},{"content":"仍然延續昨天糟糕的狀態，下午只有把正規 HW3 寫完，還了書，吃了自助餐。\n感覺沒有休假感，平日是疲勞，假日是壓力大。\n","date":"2021-04-17T18:37:31+08:00","permalink":"https://Luke2336.github.io/p/20210417/","title":"2021/04/17 日記"},{"content":"早上去竹東，中午吃了好吃的天婦羅。下午做完了德文食譜的投影片，然後小睡了一下，但不小心睡過頭，於是心情很糟糕，崩潰了很久，之後有寫了一些正規 HW3。\n","date":"2021-04-17T18:37:19+08:00","permalink":"https://Luke2336.github.io/p/20210416/","title":"2021/04/16 日記"},{"content":" 早上的教育學概論對我來說很無趣，於是覺得有些憂鬱。 下午的 EDA 出了 Lab 2，我不喜歡作業的測資大小都不限制，都只是口頭說「沒有很大」，這其實根本是沒有用的資訊，因為他沒有定義怎樣算大。 正規教了 CYK algorithm，基本上就是 bottom-up DP，然後 backtrack 建 parsing tree。 晚上上了英文會話，覺得有些累。  檢討 - 粗心 每次我寫完作業後，都不太想檢查，導致都是錯一些簡單的題目。對我來說，我可能覺得我覺得我會算就好了，但看到分數後，還是會覺得不開心。不知道為什麼從小就無法培養檢查的習慣，最近的身心狀態也讓自己不斷壓力很大，所有事情都只想快點做完，從 TODO 清單中刪掉。\n","date":"2021-04-15T16:15:02+08:00","permalink":"https://Luke2336.github.io/p/20210415/","title":"2021/04/15 日記"},{"content":" 以下是我寫的教育學概論期中報告，想說既然寫了，也順便放上來。\n這次作業有兩種選項，一種是寫參考書籍的閱讀報告，另一種是寫「我所關心的教育議題」，我選了後者撰寫。字數限制是 2000~2500 字，我寫了 2100 字。\n因為是通識報告，所以寫的時候並不想只針對自己的科系去舉例，但最後還是有點針對電機資訊相關科系。寫這份報告除了是作業以外，也是在認真思考為什麼現在的制度，大部分的人都有所抱怨。\n這個標題是參考之前網路新聞的標題。\n 大學是不是職業訓練所？ 在資工系，我常常聽到同學們抱怨說，「線性代數、微積分、自動機語言等數學課對於未來沒有太大的幫助」「作業都是手寫證明導致就業時都拿不出像樣的作品集」「讀大學只是為了學歷，平常應該多接 case和做 side project，不應該把時間花在考試和寫作業」。這些言論讓我開始思考了一個問題「工程學院只是為了培養業界需要的工程師嗎？」而這個問題可以延伸到「大學是不是職業訓練所？」以及「大學能不能作為職業訓練所？」\n如果以政治學的角度來看，「大學等同職業訓練所」誰可以獲利，很明顯的，業界能將訓練員工的成本轉嫁到所有納稅人身上，也能更方便的挑選需要的員工；而利益損失的則有學界以及想往學界發展的學生。由這個角度，我想探討究竟是什麼原因讓台灣的大學漸漸變得像職業訓練所，還有我認為哪些是大學應提供的基本能力及大學的社會責任。\n首先，誰真正決定了大學的走向？我認為既不是政府，也不是企業家，而是填志願的學生。像是醫藥、電機、資工、法律等第一志願，都是學生們以就業後的薪水做考量做出的決定，像是數學、哲學、中文、社會學等系，則基於出路的原因較不受歡迎，由此可見，多數人認為大學的科系和未來就業的選擇高度相關。\n再者，為什麼高等教育無法和技職教育獨立並行呢？我認為這受到台灣的社會觀念影響，受過大學、碩士教育的薪水普遍較高，導致多數人認為唸大學是必須的。當大學生們普遍為了文憑而唸大學時，大學就需要去最大化所有大學生的利益，也就是它需要去維護文憑的價值。文憑價值的評量又牽扯到了企業對於那間大學人才的評量，因此最後導致大學需要培養企業需要的人才。\n我認為這會導致一些嚴重的教育議題，大學的課程都是為了培養企業所需的人才而設計的，而不是為了讓學生有獨立思考、發現問題、解決問題等能力，那再過幾代，是不是研究會漸漸枯竭，技術會達到極限，或是沒有足夠多的人才被培養成能傳播知識的人。那假設產業結構出現變化，其他產業興起，過去培養的人是不是都無能去跟上時代呢？\n除此之外，我常聽到同學們抱怨說「學校在教的技術早就退流行了，完全派不上用場」。是的，假若學校都是在教技術，而不是創造技術的基本功或是基礎推理能力，學生們無法舉一反三，那他們學到的知識就永遠停留在他們的二十歲，但他們的下半輩子顯然不能只靠那些知識生活，因此培養自學能力是必須的，像是如何尋找需要的資料，如何檢驗資料的正確性，如何將已經會的知識應用在遇到的問題上，這些都是我認為大學應該培養的技能。\n綜合以上幾點後，我們可以思考，對於只渴望學習就業相關技術的人，大學能帶給他哪些文憑以外的收穫，是否能透過在業界的實務經驗來達到更有效率的學習。以下，我想說明大學其實並不是一個好的職業訓練環境。\n仔細檢視我們的大學制度，假設要四年畢業，一個學期需要修 16 學分，而對於每一個學分，上課、複習、寫作業的時間，平均需要花三小時，再加上體育課或導師時間等零學分的課程，少說一週要花 50 小時上課和讀書，也就是平均一天要花到 8 小時。但請注意到，以上僅僅是完成基本的教師要求，也就是根本就沒有多餘的時間，去針對自己有興趣的部分深入的研究。因此，期待大學生有自主學習甚至研究的能力，其實是不可能的。另外，以大學部的課程來說，扣掉加退選、考試，一門三學分的課，實際一學期也就 45 小時，是無法培養學生的實務能力的。舉例來說，以程式設計課程為例，教師往往是出作業，然後讓學生回去做，然後交完作業後，並不會告訴學生可以怎樣改進等等。反之，在業界，員工只需要專研他負責的部分，而能體驗完整去將一個主題做到最優的情況，不是像在學校裡，必須去最大化所有科目的分數總和，而犧牲了試著去將學習做到最好的機會。在業界，實務的成果也是會受到客戶較多檢驗及要求的，能實際理解怎樣的能力是業界真正需要的。\n總結上段所敘述的幾點，我認為大學中的學習，對於只是想要在業界生存的人其實是沒效率的，他想在大學中獲得的技術，在業界能更有效率地取得並檢驗學習成果。因此，這些人與其抱怨，xx課是他們未來工作不需要學習的，不如說，他們對大學本身的期待是不切實際的，大學不應該被期待是個好的職業訓練所。\n最後，我想提出幾點在大學制度中，受到「職業訓練」這個概念影響的缺陷。首先，我認為「必修學分」這個制度其實是可以被討論的，當我詢問系上教授我們為何需要修必修時，他給我的回應是，xx系畢業的學生應該得學會這些。其實，反過來想，為什麼我們是強制規定學生要會這些東西，而不是讓他們去探索他們想要的生涯規劃中，他們需要哪些能力，需要如何安排自己的學習。第二點，很多科系設定「實習」為必修學分，我認為這個本意是好的，但實務上並沒有好的配套措施，像是實習生為了學分被資方剝削的新聞層出不窮，實際上沒得到學習，而只是被當作廉價勞力的新聞層出不窮。\n總結我對大學與職業教育的看法，我認為大部分的大學科系不應該和職業訓練綁定，大學應該是教導學生學習的能力，由企業給予員工職業的訓練，這樣能讓人們獲得更有效率的學習，也不會被一些東拼西湊的政策影響，造成不管是想走學術或是想去業界的學生，都被強迫學習自己無興趣的東西，或是無時間學習自己更有興趣的東西，讓課堂的學習品質上升，使得教育資源能得發揮最大效益。\n","date":"2021-04-14T19:25:34+08:00","image":"https://Luke2336.github.io/post/Other/PedagogyReport/nctu.gif","permalink":"https://Luke2336.github.io/p/pedagogy-report/","title":"大學是不是職業訓練所？"},{"content":"今天天氣變得有些涼爽。\n早上德文課，講了期中考的考試內容。下午考羽球期中考，考高遠球，我第一個上去考，於是有些緊張，用新球考試感覺還滿舒服的，有幾球有些打偏，於是只考了 84 分，但動作分數被給了滿分 5，於是還行。\n下午吃完了麥當勞之後，就隨手寫完了教育學的期中報告，整份報告目前為止花了我 2.5 小時，大概 21xx 字。之後將離散課的期中教學問卷設定好，E3 真的很麻煩 QAQ\n晚上原本想打球，但後來才想起來因為期中考停練一週。吃了清粥小菜當宵夜，然後借了工程計算機給 Maxwill。\n德文課  Komposita 複合字  冠詞是跟著最末字 Ex. die Suppe, die Murstsuppe   der Gast 客人 der Gastgeber, die Gastgeberin 主人 das Gastgeschenk 伴手禮 die Einladung, -en 邀請函 der Comic 漫畫 mögen 喜歡  過去式 mochten 虛擬式 möchten 想要（含蓄的）        mögen möchten     ich mag möchte   du magst möchtest   er/sie mag möchte   wir mögen möchten   ihr mögt möchtet   sie/Sie mögen möchten     Ich koche haute Abend etwas.  Oh ja! [Wann denn? / Um wie viel Uhr?]   [Um / Gegen] 18:00.  Oh, super! Ich habe Zeit!   Was kochst du denn?  Als Vorspeise essen wir salat. Als Hauptgericht mache ich pizza. Als Dessert essen wir Kuchen. Kommst du?   [Ja, ich komme gern. / Das tut mir leid\u0026hellip;]  ","date":"2021-04-14T17:56:02+08:00","permalink":"https://Luke2336.github.io/p/20210414/","title":"2021/04/14 日記"},{"content":"早上是正規期中考，因為很緊張，寫不完題目，感覺分數會很不理想，心情超糟的。\nMT 請了陪產假，於是今天就是宗達代課，第一節講了枚舉 subset 的方法，以及分析複雜度，因為有些累，所以之後就提早回宿舍耍廢。清了一下盆栽的介殼蟲，修改了一篇英文作文。\n晚上去看了醫生，試著改善睡眠問題，近期常常做噩夢驚醒，導致白天精神不好，情緒也很糟。之後跟學長去吃了六扇門，聊了大約兩小時。\n","date":"2021-04-14T17:55:53+08:00","permalink":"https://Luke2336.github.io/p/20210413/","title":"2021/04/13 日記"},{"content":"早上的英文課是在檢討上次的 Paragraph，我覺得主要的問題應該是結構不太清楚，所以分數有些低。之後是互相交換 Essay 看，我覺得我的伴沒有給我有用的資訊，覺得有些失望。最後有 Timed Writing，覺得自己的問題是想不出單字。\n下午的課因為很累，再加上隔天要期中考，壓力很大，於是就無法專心。晚上吃了日式定食，然後就簡單的複習了一下正規，也看了一下考古題。\n","date":"2021-04-12T15:26:17+08:00","permalink":"https://Luke2336.github.io/p/20210421/","title":"2021/04/12 日記"},{"content":"中午吃了鬆餅，然後就開始寫 SAT solver，算是把大部分都做完了，整體花了 11 小時 500 行左右。可以跑大部分的測資，有些 100 多個 Variable 的測資還是跑不出來。今天主要是加了 Luby Restart 和 Heuristic 選 literal，等整個做完應該會寫一篇文章。\n晚上吃完麥當勞後，就把 report 寫完，洗了澡，打了電話，然後就為昨天的頹廢感到難受，於是正規就沒開始讀，只打掃了一下，順便收了衣服。真心覺得最近狀況很糟，自信心備受打擊，無法調整好狀態。\nToggl 這兩週其實有很認真寫作業，但仍然覺得很緊張，有太多事堆積著，讓我喘不過氣。\n","date":"2021-04-11T22:58:14+08:00","image":"https://Luke2336.github.io/post/Diary/20210411/toggl.png","permalink":"https://Luke2336.github.io/p/20210411/","title":"2021/04/11 日記"},{"content":"早上起床打了 Code Jam 1A，中午吃了烤雞，之後就因為心情不好，所以幾乎都在床上度過。\nGoogle Code Jam 2021 1A 把小測資完成後，就放棄了，最後打到 1376 名，成功晉級 Round 2。\nAppend Sort 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5string int_to_string(int i) { 6 string s = \u0026#34;\u0026#34;; 7 while (i) { 8 s += char(\u0026#39;0\u0026#39; + i % 10); 9 i /= 10; 10 } 11 reverse(s.begin(), s.end()); 12 return s; 13} 14int main() { 15 ios::sync_with_stdio(0), cin.tie(0); 16 int T; cin \u0026gt;\u0026gt; T; 17 for (int ti = 1; ti \u0026lt;= T; ti++) { 18 int n; cin \u0026gt;\u0026gt; n; 19 vector\u0026lt;int\u0026gt; a(n); 20 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; a[i]; 21 vector\u0026lt;string\u0026gt; s(n); 22 for (int i = 0; i \u0026lt; n; i++) 23 s[i] = int_to_string(a[i]); 24 int ans = 0; 25 for (int i = 1; i \u0026lt; n; i++) { 26 if (s[i - 1].length() \u0026lt; s[i].length()) continue; 27 if (s[i - 1].length() == s[i].length()) { 28 if (s[i] \u0026lt;= s[i - 1]) 29 s[i].push_back(\u0026#39;0\u0026#39;), ans++; 30 continue; 31 } 32 string sub = s[i - 1].substr(0, s[i].length()); 33 if (sub \u0026gt; s[i]) { 34 int cnt = s[i - 1].length() - s[i].length() + 1; 35 ans += cnt; 36 while (cnt--) s[i].push_back(\u0026#39;0\u0026#39;); 37 continue; 38 } 39 if (sub == s[i]) { 40 string tmp = s[i - 1]; 41 for (int j = s[i - 1].length() - 1; j \u0026gt;= s[i].length(); j--) { 42 if (s[i - 1][j] != \u0026#39;9\u0026#39;) { 43 tmp[j]++; 44 for (int k = j + 1; k \u0026lt; s[i - 1].length(); k++) 45 tmp[k] = \u0026#39;0\u0026#39;; 46 break; 47 } 48 } 49 if (tmp != s[i - 1]) { 50 ans += s[i - 1].length() - s[i].length(), s[i] = tmp; 51 } else { 52 int cnt = s[i - 1].length() - s[i].length() + 1; 53 ans += cnt; 54 while (cnt--) s[i].push_back(\u0026#39;0\u0026#39;); 55 } 56 continue; 57 } 58 int cnt = s[i - 1].length() - s[i].length(); 59 ans += cnt; 60 while (cnt--) s[i].push_back(\u0026#39;0\u0026#39;); 61 } 62 cout \u0026lt;\u0026lt; \u0026#34;Case #\u0026#34; \u0026lt;\u0026lt; ti \u0026lt;\u0026lt; \u0026#34;: \u0026#34; \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 63 } 64 return 0; 65}  Prime Time 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 int T; cin \u0026gt;\u0026gt; T; 7 for (int ti = 1; ti \u0026lt;= T; ti++) { 8 int m; cin \u0026gt;\u0026gt; m; 9 vector\u0026lt;int\u0026gt; n(m), p(m); 10 int max_sum = 0; 11 for (int i = 0; i \u0026lt; m; i++) { 12 cin \u0026gt;\u0026gt; p[i] \u0026gt;\u0026gt; n[i]; 13 max_sum += p[i] * n[i]; 14 } 15 int ans = 0; 16 for (int i = max_sum - 1; i \u0026gt; 1; i--) { 17 int sum = 0, tmp = i; 18 for (int j = 0; j \u0026lt; m; j++) 19 for (int k = 0; k \u0026lt; n[j]; k++) 20 if (tmp % p[j]) sum += p[j]; 21 else tmp /= p[j]; 22 if (tmp == 1 \u0026amp;\u0026amp; sum == i) { 23 ans = i; 24 break; 25 } 26 } 27 cout \u0026lt;\u0026lt; \u0026#34;Case #\u0026#34; \u0026lt;\u0026lt; ti \u0026lt;\u0026lt; \u0026#34;: \u0026#34; \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 28 } 29 return 0; 30}  Hacked Exam 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 int T; cin \u0026gt;\u0026gt; T; 7 for (int ti = 1; ti \u0026lt;= T; ti++) { 8 int n, q; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; q; 9 vector\u0026lt;string\u0026gt; s(n); 10 vector\u0026lt;int\u0026gt; score(n); 11 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; s[i] \u0026gt;\u0026gt; score[i]; 12 int ans_num = 0; 13 vector\u0026lt;int\u0026gt; t(q); 14 for (int i = 0; i \u0026lt; (1 \u0026lt;\u0026lt; q); i++) { 15 string tmp = \u0026#34;\u0026#34;; 16 for (int j = 0; j \u0026lt; q; j++) 17 if ((1 \u0026lt;\u0026lt; j) \u0026amp; i) tmp += \u0026#39;T\u0026#39;; 18 else tmp += \u0026#39;F\u0026#39;; 19 vector\u0026lt;int\u0026gt; cnt(n); 20 bool legal = true; 21 for (int j = 0; j \u0026lt; n; j++) { 22 for (int k = 0; k \u0026lt; q; k++) 23 if (s[j][k] == tmp[k]) cnt[j]++; 24 if (cnt[j] != score[j]) { 25 legal = false; 26 break; 27 } 28 } 29 if (!legal) continue; 30 ans_num++; 31 for (int j = 0; j \u0026lt; q; j++) 32 if ((1 \u0026lt;\u0026lt; j) \u0026amp; i) t[j]++; 33 } 34 cout \u0026lt;\u0026lt; \u0026#34;Case #\u0026#34; \u0026lt;\u0026lt; ti \u0026lt;\u0026lt; \u0026#34;: \u0026#34;; 35 int cnt = 0; 36 for (int i = 0; i \u0026lt; q; i++) { 37 if (t[i] \u0026gt; ans_num - t[i]) cout \u0026lt;\u0026lt; \u0026#39;T\u0026#39;; 38 else cout \u0026lt;\u0026lt; \u0026#39;F\u0026#39;; 39 cnt += max(t[i], ans_num - t[i]); 40 } 41 int g = gcd(cnt, ans_num); 42 cout \u0026lt;\u0026lt; \u0026#39; \u0026#39; \u0026lt;\u0026lt; cnt / g \u0026lt;\u0026lt; \u0026#39;/\u0026#39; \u0026lt;\u0026lt; ans_num / g \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 43 } 44 return 0; 45}  ","date":"2021-04-10T12:06:29+08:00","image":"https://Luke2336.github.io/post/Diary/20210410/Standing.png","permalink":"https://Luke2336.github.io/p/20210410/","title":"2021/04/10 日記"},{"content":"早上寫了難解的題目，結果只過了 60% 的測資，可能要再剪枝。中午打扮了一下，之後就去清大和ㄠㄨ寫 SAT solver，然後中間去咖啡社吃了抹茶生乳酪塔和奶茶。之後去找王教授聊了 ICCAD 的事，獲得了一些有用的資訊，也意外知道他和交大的陳教授很熟。晚上因為六扇門人很多，於是就去吃了牛肉麵，然後到 124 繼續寫 SAT solver。\n","date":"2021-04-09T09:27:28+08:00","image":"https://Luke2336.github.io/post/Diary/20210409/cake.jpg","permalink":"https://Luke2336.github.io/p/20210409/","title":"2021/04/09 日記"},{"content":"早上起床覺得很疲憊，不知道是不是跟前一天的運動有關。中午累到覺得超想死的。下午的 EDA 講了基因演算法，還有一點點 Routing 的東西，不知道何時才會出第二份作業。正規在講 Normal Form，但已經累到有點難專心。TA hour 有一些學生來拿作業和期中考卷。晚上的英文課覺得有些疲倦，但能有機會練練口說也不錯。\n","date":"2021-04-08T10:44:25+08:00","permalink":"https://Luke2336.github.io/p/20210408/","title":"2021/04/08 日記"},{"content":"早上德文課覺得很疲倦。\n下午的羽球課和助教練習，覺得對隔週的考試有些焦慮。之後帶學妹練高遠球，看到她對於抓擊球點有些進步，自己也很開心。\n晚上因為要準備期中考而停練，於是就把時間花在洗衣服了。之後，花了一點點時間去寫難解問題的程式作業，覺得還算滿好寫的。\n晚上不知道為什麼一直覺得很累很焦慮。\n","date":"2021-04-07T16:29:55+08:00","permalink":"https://Luke2336.github.io/p/20210407/","title":"2021/04/07 日記"},{"content":"今天都在外面，中午吃了海鮮，晚上去桃園逛 IKEA，用餐區比敦北店大很多，賣場整體也比較大。\n","date":"2021-04-07T09:31:20+08:00","permalink":"https://Luke2336.github.io/p/20210406/","title":"2021/04/06 日記"},{"content":"早上印 Codebook，所以有點 Delay，搭了豪泰到北車，然後換捷運到科技大樓，隊友很堅持該去公館站，但我不理他。到台大時，好像認識的人只剩主辦方了，隊伍大概只認識 1/4。打卡得到了一個 Goolge 袋袋，然後就開始打比賽了，中間有發一個餐盒，最後第 8 名。\n晚上跟學妹哆拉一起在 118 巷吃義大利麵，隊友們似乎跑去吃肯德基。和學妹聊了一些關於實習面試的事，還有感情和課業的事。我點了魷魚義大利麵，結果來了雞肉，服務生很自動地發現煮錯了，於是又多等了一下，有麵包、飲料、湯、冰淇淋，感覺很划算。\n回交大時，剛好搭上到南大門的車，於是少走了很多路。據說隊友們留在台北過夜。\nTTCPC 2021 題目共有 13 題，基本上有一半都很水，但有兩題難到爆，題目水準還行，但鑑別度有點差。\n 題本 這次 NTHU 的隊伍程度有些差，不知道為什麼交大沒什麼人報名。 我們主要的問題是 penalty 太高，且常常把鍵盤空下來。      Status Coder Keyword     A AC LinLee 水題   B AC Hyperbola math   C   metroid   D AC Kelly k筆劃   E AC Hyperbola prefix expression   F AC Kelly, LinLee 01背包   G AC Hyperbola Simulation   H AC LinLee, Hyperbola 線段樹, 二分搜   I TLE Hyperbola 幾何, 二分搜   J AC Hyperbola 水題   K   莫隊   L AC LinLee 排組   M AC Hyperbola Greedy    ","date":"2021-04-07T09:31:15+08:00","image":"https://Luke2336.github.io/post/Diary/20210405/Standing.png","permalink":"https://Luke2336.github.io/p/20210405/","title":"2021/04/05 日記"},{"content":"早上吃了優格配堅果，然後去跟ㄠㄨ討論 MiniSAT 的架構，討論到一半就覺得很冷，回宿舍睡了一下，然後才把架構寫完。晚上吃了麥當勞的醬燒豬堡。\n回宿舍後寫了一點英文作文，之後為了隔天要早起，所以 11 點多就去睡了，但看到小白目受傷的訊息，稍微有些焦慮，於是躺了有點久才睡著。\n","date":"2021-04-04T19:36:12+08:00","permalink":"https://Luke2336.github.io/p/20210404/","title":"2021/04/04 日記"},{"content":"看了昨日太魯閣號的新聞，覺得身心受到影響，感覺鬱鬱的。\n中午吃了麥當勞，然後就被許學長約出去在工四一起寫作業，晚餐吃了二餐。基本上大半天的時間都在寫英文作文。跟學長一起寫作業有點煩躁，畢竟他有點吵，但想想有個人陪自己還是好的。\n睡前對了發票，都沒中獎。用牛奶做了優格。據說 Hyperbola 跟ㄠㄨ喝酒喝得很盡興。\n","date":"2021-04-03T10:13:36+08:00","permalink":"https://Luke2336.github.io/p/20210403/","title":"2021/04/03 日記"},{"content":"","date":"2021-04-02T11:43:34+08:00","image":"https://Luke2336.github.io/post/Other/FL5/Note_ch5_1.jpg","permalink":"https://Luke2336.github.io/p/fl5/","title":"正規語言 Lec 5 筆記"},{"content":"原本打算在工四做事，但因為要消毒，就被趕走了。之後去水木的咖啡廳，和ㄠㄨ一起把 F-M 的 bug 修掉。小睡了一小時後，晚餐原本要去清夜吃牛肉麵，但因為沒開，就去旁邊吃海洋牛排，剛坐下來就收到 Hyperbola 的求救訊息，但因為不知道怎麼幫他，所以沒有給出具體的建議。之後去了資電館寫 ICCAD contest 的 code，把上週沒做完的部分結束。回宿舍後就累到直接在床上休息了。\n中午在圖書館旁的草地遇到一隻一公尺以上的蛇。\nEDA HW1 F-M Algorithm  將 Bug 改掉，結果進步了不少。 昨天的版本是每個 Partition 只做一次 F-M，但改成做多次直到 cut 數量收斂，結果進步了 3 倍以上。 因為是平行化同步做，所以每個 Thread 要給不同的 Random Seed。  Cut-Edge 結果    Test shmetis my     1 1 1   2 33 695   3 199 2680   4 18 9325    Code 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3class BucketList { 4 map\u0026lt;int, unordered_set\u0026lt;int\u0026gt;\u0026gt; mp[2]; 5 unordered_map\u0026lt;int, pair\u0026lt;int, int\u0026gt;\u0026gt; Gain; 6 7public: 8 int mx(int b) { 9 while (mp[b].size() \u0026amp;\u0026amp; mp[b].rbegin()-\u0026gt;second.empty()) 10 mp[b].erase(mp[b].rbegin()-\u0026gt;first); 11 if (mp[b].size() == 0) return -1; 12 return mp[b].rbegin()-\u0026gt;first; 13 } 14 int pop(int b) { 15 if (mx(b) \u0026lt; 0) return -1; 16 int ret = *(mp[b].at(mx(b)).begin()); 17 mp[b].at(mx(b)).erase(ret); 18 return ret; 19 } 20 void remove(int v) { mp[Gain.at(v).first].at(Gain.at(v).second).erase(v); } 21 void add(int v, int b, int id) { 22 Gain[v] = make_pair(b, id); 23 mp[b][id].insert(v); 24 } 25}; 26inline bool range(int v, int L, int R) { return L \u0026lt;= v \u0026amp;\u0026amp; v \u0026lt;= R; } 27vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; Nets; 28vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; Cells; 29int FM(vector\u0026lt;bool\u0026gt; \u0026amp;Partition, const int P) { 30 int N = Cells.size(), M = Nets.size(); 31 int M1 = ceil(N * 0.451), M2 = floor(N * 0.549); 32 vector\u0026lt;bool\u0026gt; Lock(N); 33 vector\u0026lt;int\u0026gt; Gain(N), CntCell[2]; 34 CntCell[0].resize(M), CntCell[1].resize(M); 35 for (int i = 0; i \u0026lt; M; i++) { 36 for (int j : Nets[i]) 37 CntCell[Partition[j]][i]++; 38 for (int j : Nets[i]) 39 if (!CntCell[!Partition[j]][i]) --Gain[j]; 40 else if (CntCell[Partition[j]][i] == 1) ++Gain[j]; 41 } 42 BucketList BL; 43 for (int i = 0; i \u0026lt; N; i++) 44 BL.add(i, Partition[i], Gain[i]); 45 vector\u0026lt;int\u0026gt; sumGain; 46 vector\u0026lt;int\u0026gt; swapNode; 47 int sz[2] = {}; 48 for (auto i : Partition) sz[i]++; 49 for (int t = 0; t \u0026lt; N; ++t) { 50 bool b; 51 if (range(sz[0] - 1, M1, M2) \u0026amp;\u0026amp; BL.mx(0) \u0026gt;= BL.mx(1)) b = 0; 52 else if (range(sz[0] + 1, M1, M2) \u0026amp;\u0026amp; BL.mx(0) \u0026lt;= BL.mx(1)) b = 1; 53 else if (range(sz[0] - 1, M1, M2)) b = 0; 54 else if (range(sz[0] + 1, M1, M2)) b = 1; 55 else break; 56 --sz[b], ++sz[!b]; 57 sumGain.push_back(BL.mx(b)); 58 int node = BL.pop(b); 59 if (node \u0026lt; 0) break; 60 Lock[node] = true; 61 swapNode.push_back(node); 62 for (int i : Cells[node]) { 63 --CntCell[b][i], ++CntCell[!b][i]; 64 for (int v : Nets[i]) { 65 if (Lock[v]) continue; 66 if (!CntCell[b][i] \u0026amp;\u0026amp; Partition[v] != b) { 67 BL.remove(v); 68 BL.add(v, !b, --Gain[v]); 69 } else if (CntCell[b][i] == 1 \u0026amp;\u0026amp; Partition[v] == b) { 70 BL.remove(v); 71 BL.add(v, b, ++Gain[v]); 72 } 73 } 74 } 75 } 76 int mx_i = 0; 77 for (int i = 1; i \u0026lt; sumGain.size(); ++i) { 78 sumGain[i] += sumGain[i - 1]; 79 if (sumGain[i] \u0026gt; sumGain[mx_i]) mx_i = i; 80 } 81 if (sumGain.size() \u0026amp;\u0026amp; sumGain[mx_i] \u0026gt; 0) 82 for (int i = 0; i \u0026lt;= mx_i; ++i) 83 Partition[swapNode[i]] = !Partition[swapNode[i]]; 84 int ret = 0; 85 for (int i = 0; i \u0026lt; M; ++i) { 86 bool cut = false; 87 for (int v : Nets[i]) 88 if (Partition[v] != Partition[Nets[i][0]]) cut = true; 89 ret += cut; 90 } 91 return ret; 92} 93 94inline void genRandomBit(vector\u0026lt;bool\u0026gt; \u0026amp;v, unsigned int \u0026amp;seed) { 95 int sz = v.size(); 96 v.clear(); 97 v.resize(sz); 98 fill(v.begin(), v.begin() + (sz \u0026gt;\u0026gt; 1), 1); 99 auto random = std::default_random_engine(seed); 100 shuffle(v.begin(), v.end(), random); 101 seed = random(); 102} 103int main(int argv, char *argc[]) { 104 auto StartTime = std::chrono::system_clock::now(); 105 freopen(argc[1], \u0026#34;r\u0026#34;, stdin); 106 freopen(\u0026#34;output.txt\u0026#34;, \u0026#34;w\u0026#34;, stdout); 107 ios::sync_with_stdio(0), cin.tie(0); 108 int N, M, P = 0; 109 cin \u0026gt;\u0026gt; M \u0026gt;\u0026gt; N; 110 Nets.resize(M), Cells.resize(N); 111 for (int i = 0; i \u0026lt; M; ++i) { 112 string s; 113 getline(cin, s); 114 stringstream ss; 115 ss.str(s); 116 for (int v; ss \u0026gt;\u0026gt; v;) 117 Nets[i].push_back(v - 1), Cells[v - 1].push_back(i); 118 P += Nets[i].size(); 119 } 120 int run = 16; 121 srand(112098); 122 vector\u0026lt;unsigned int\u0026gt; Seeds(run); 123 for (int i = 0; i \u0026lt; run; i++) Seeds[i] = rand(); 124 vector\u0026lt;vector\u0026lt;bool\u0026gt;\u0026gt; Partition(run, vector\u0026lt;bool\u0026gt;(N)); 125 vector\u0026lt;int\u0026gt; CntCut(run, M + 10); 126#pragma omp parallel for 127 for (int i = 0; i \u0026lt; run; ++i) { 128 vector\u0026lt;bool\u0026gt; tmp(N); 129 genRandomBit(tmp, Seeds[i]); 130 deque\u0026lt;int\u0026gt; buffer; 131 int buffer_avg = 0; 132 const int buffer_size = 10; 133 while (1) { 134 int cut = FM(tmp, P); 135 buffer.emplace_back(cut); 136 buffer_avg += cut; 137 if (buffer.size() \u0026gt; buffer_size) { 138 buffer_avg -= buffer.front(); 139 buffer.pop_front(); 140 } 141 if (buffer.size() == buffer_size \u0026amp;\u0026amp; 142 cut * buffer.size() \u0026gt;= buffer_avg) 143 genRandomBit(tmp, Seeds[i]); 144 else if (cut \u0026lt; CntCut[i]) 145 CntCut[i] = cut, Partition[i] = tmp; 146 auto CurrentTime = std::chrono::system_clock::now(); 147 if (CurrentTime - StartTime \u0026gt; std::chrono::seconds(80)) break; 148 } 149 } 150 int ans = 0; 151 for (int i = 1; i \u0026lt; run; ++i) 152 if (CntCut[i] \u0026lt; CntCut[ans]) ans = i; 153 for (int i = 0; i \u0026lt; N; ++i) 154 cout \u0026lt;\u0026lt; Partition[ans][i] \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 155 return 0; 156}  ","date":"2021-04-02T11:34:42+08:00","permalink":"https://Luke2336.github.io/p/20210402/","title":"2021/04/02 日記"},{"content":"一早就因為報告感到異常緊張，於是很不想去上課，覺得自己報告時講出來的東西比準備的少很多，無法達到預期。\n昨天體育課練完球後，全身肌肉都超酸的，尤其是肩膀和腰。主要是因為中後期體力不濟，所以動作變慢，姿勢就容易跑掉。\n中午吃了午餐，然後連續上了三堂課後，感覺超級累。去資工系辦問了轉系的事項，發現有些基礎科目得申請免修，覺得有些麻煩。然後去了 TA hour，晚上上英文課，很沒精神。\n之後把 EDA HW1 寫到可以動，但不太清楚 90 秒該怎麼算，跑出來的結果滿爛的，大概都是商用程式的 100 倍。洗完澡後，去樓下買了冰棒吃，結果摸到三點才睡。\n看完了妖怪庵的第二季，覺得結局有點突然，但還是很好看。\n EDA 上課說了 B* Tree packing 的做法，但還是沒仔細說要怎麼分析 amortized O(1)，問了之後要我們去看 O-Tree 的 Paper。\n","date":"2021-04-01T12:37:54+08:00","permalink":"https://Luke2336.github.io/p/20210401/","title":"2021/04/01 日記"},{"content":"早上的德文課考了動詞，有一個沒背到 QQ\n下午羽球課用發球機練高遠球，覺得很有趣。\n今天隊友都要忙讀書寫作業，於是就停練了一週。\n之後利用時間寫完正規作業，準備了一下教育學概論的報告。\n然後簡單的重寫了 EDA HW1，把 FM alog 用到的 Linked-List 獨立出來成一個 class 去做操作，因為之前寫的時候，發現很多 code 都是相似的。\n","date":"2021-03-31T09:46:44+08:00","permalink":"https://Luke2336.github.io/p/20210331/","title":"2021/03/31 日記"},{"content":"早上試著用做筆記讓自己專心上正規。中午吃了麵包和牛奶，然後去上 MT 的課，Maxwill 今天不舒服沒來上課。晚上去看了夜景，遇到喵喵。但 Hyperbola 突然說要退出 Pusheen，讓我有點緊張，似乎是 LinLee 踩了什麼雷。晚上寫了兩三題正規就去睡了，生理期來了，覺得很疲倦。\n 會覺得 Hyperbola 一旦做出決定，就是很認真的。於是沒有打算做出挽回的舉動，但還是會基於朋友的角度，想去關心他。隊伍的事，其實沒有那麼急迫。或許他會覺得我應該生氣之類的，但老實說就只有擔心而已。覺得能當這麼久的隊友，我已經覺得很開心了。他前陣子將我凍起來，我知道是我自己需要努力，他沒有多餘的力氣幫忙我，完全不會對他有生氣等負面情緒。\n","date":"2021-03-30T11:04:09+08:00","permalink":"https://Luke2336.github.io/p/20210330/","title":"2021/03/30 日記"},{"content":"很崩潰的早晨，覺得週末耗費在情緒上，事情都沒做完。\n英文寫作課的閱讀資料忘記讀了，但還是混過去了。請學妹幫我買午餐，於是吃了飯捲。凱強的課是在講 Midterm Project 要實作 MiniSAT，給了 3 + 2 週，老實說有點不夠用。之後講了 Decision Diagram。EDA 課是在講 Soft 的 Floorplanning 的做法。寫了獎學金的感謝函。\n晚上吃了烤雞，寫了一點點正規作業，然後就開始放鬆了。\n","date":"2021-03-30T11:03:54+08:00","permalink":"https://Luke2336.github.io/p/20210329/","title":"2021/03/29 日記"},{"content":"早上 9 點多就醒了，但因為很難過，就一直拖到 12 點前才下床吃午餐。看完了不機嫌なモノノケ庵共 13 集，看到還有第二季，應該會繼續看。\n下午洗了衣服，讀完正規 Lec 3，然後泡了杯伯爵鮮奶茶喝。之後讀了 Lec 4，然後開始寫 Hw 2。晚餐後，更新了 MacDown，因此可以用 mermaid 畫 State Diagram 了，於是就可以用來畫 Automata 了！\n晚上洗了澡，然後就跑到清大去跟學長重新聊聊，雖然我還是一直哭，但有些話聽完後很有共鳴，之後應該會試著經營這段關係。睡前還是很崩潰，太多情緒了。\n","date":"2021-03-28T14:41:45+08:00","permalink":"https://Luke2336.github.io/p/20210328/","title":"2021/03/28 日記"},{"content":"早上在宿舍打了 2021 Google Code Jam 的 Qualification，讀了一下正規語言，然後就去打電資週的羽球賽了，總共來了 3 男 4 女，於是組了混雙賽，我跟昱廷一組，我覺得自己有時候會搶球，但最後還是幾乎都有贏，可能是球的關係，今天切球狀況很差，殺球也老是敲框。\n晚上跟學長從竹中站搭火車去竹東逛夜市，還滿快樂的，買了炸牛奶、白糖粿、燒仙草吃。回到清大後，因為自己心情的因素，就決定和他斷絕來往了。我不想要再和去年一樣，一直給別人添麻煩了，在我能確保自己不對別人情緒勒索前，我可能不敢再和他接觸。\n回宿舍後很難過，吃了藥後就去躺了，睡眠斷斷續續的。我想這大概是我這輩子做過最暴力的事了。\n2021 Google Code Jam - Qualification Round 只想把需要的 30 分拿滿，就去忙別的事了。第一題是簡單的模擬題，第二題則是 DP，兩題都是 15 分鐘內能解的。\nProblem - Reversort 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 ios::sync_with_stdio(0), cin.tie(0); 5 int T; cin \u0026gt;\u0026gt; T; 6 for (int ti = 1; ti \u0026lt;= T; ti++) { 7 int n; cin \u0026gt;\u0026gt; n; 8 vector\u0026lt;int\u0026gt; v(n); 9 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; v[i]; 10 int cost = 0; 11 for (int i = 0, j; i \u0026lt; n - 1; i++) { 12 for (j = i; j \u0026lt; n; j++) 13 if (v[j] == i + 1) break; 14 cost += j - i + 1; 15 for (int k = i, r = j; k \u0026lt; r; k++, r--) { 16 int tmp = v[k]; v[k] = v[r]; v[r] = tmp; 17 } 18 } 19 cout \u0026lt;\u0026lt; \u0026#34;Case #\u0026#34; \u0026lt;\u0026lt; ti \u0026lt;\u0026lt; \u0026#34;: \u0026#34; \u0026lt;\u0026lt; cost \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 20 } 21 return 0; 22}  Problem - Moons and Umbrellas 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define INF 1e9 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 int T; cin \u0026gt;\u0026gt; T; 7 for (int ti = 1; ti \u0026lt;= T; ti++) { 8 int x, y; 9 string s; 10 cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y \u0026gt;\u0026gt; s; 11 int n = s.length(); 12 vector\u0026lt;int\u0026gt; DPC(n, INF), DPJ(n, INF); 13 DPC[0] = s[0] == \u0026#39;J\u0026#39; ? INF : 0; 14 DPJ[0] = s[0] == \u0026#39;C\u0026#39; ? INF : 0; 15 for (int i = 1; s[i]; i++) { 16 if (s[i] == \u0026#39;C\u0026#39;) { 17 DPC[i] = min(DPC[i - 1], DPJ[i - 1] + y); 18 DPJ[i] = INF; 19 } else if (s[i] == \u0026#39;J\u0026#39;) { 20 DPJ[i] = min(DPJ[i - 1], DPC[i - 1] + x); 21 DPC[i] = INF; 22 } else { 23 DPJ[i] = min(DPJ[i - 1], DPC[i - 1] + x); 24 DPC[i] = min(DPC[i - 1], DPJ[i - 1] + y); 25 } 26 } 27 cout \u0026lt;\u0026lt; \u0026#34;Case #\u0026#34; \u0026lt;\u0026lt; ti \u0026lt;\u0026lt; \u0026#34;: \u0026#34; 28 \u0026lt;\u0026lt; min(DPC[n - 1], DPJ[n - 1]) \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 29 } 30 return 0; 31}  ","date":"2021-03-27T12:19:23+08:00","permalink":"https://Luke2336.github.io/p/20210327/","title":"2021/03/27 日記"},{"content":"早上稍微做了點家事之後，就去清大。因為女二的 Ubike 沒了，於是就去研三，但剛好有個男生跟我同時走到最後一台前面，一不小心就被搶走了 QAQ 之後跟ㄠㄨ在小吃部買了冰炫風，然後去拿空堂的蛋糕跟奶茶，覺得伯爵奶茶很好喝，雖然貴貴的。\n下午他教了我 Makefile 的原理和基礎寫法，然後我們就研究了一下 ICCAD contest 的報名，之後就繼續寫 Code，主要是將原始的 Input 轉成關聯性較強的 Data，像是用 Map 處理字串，還有加上一些指標指回原本的資料。\n晚上吃了清夜的山口的鍋燒烏龍麵和生魚片，之後把下午的 code 處理完，他幫我按摩了一下背，然後我就搭小紅巴回交大。\n","date":"2021-03-27T12:19:16+08:00","permalink":"https://Luke2336.github.io/p/20210326/","title":"2021/03/26 日記"},{"content":"上教育學概論時才知道 HW1 不是只有第一組需要交，覺得作業說明不清楚，很煩躁不舒服。\n中午買了壽司到教室吃。\n下午上了幾節課，都覺得很疲勞，沒辦法專心。\nTA Office Hour 還是沒有人去，於是就利用時間，把教育學的 HW1 補寄給老師。\n傍晚吃了一餐的自助餐之後，順便買了兩個 35 的蛋塔，之後去上了英文課，心情有變好。\n","date":"2021-03-25T10:42:51+08:00","permalink":"https://Luke2336.github.io/p/20210325/","title":"2021/03/25 日記"},{"content":"原本以為今天要考德文，但後來說下週才要考動詞變化。\n體育課練了高遠球，覺得練習有點沒效率，因為同學餵的球質量不好。\n收到 Google HR 的通知了，接下來就等 Team Matching。\n傍晚跟我媽講了找室友的事，結果聽到對方是越南人，我媽就不開心，一直覺得東南亞國家的人會偷東西\u0026hellip;超煩的，台灣人最好是有比較好相處！\nPCCA 今天晚餐吃八方雲集，來的人比平常少很多。 Hyperbola 在忙公司的事，就請假了。\nKattis     Time Status Tag     A 22 AC DP、BFS   B 13     C 36 AC Shortest Path   D 10     E 8  Trie   F 50 AC(3) DP   G 2     H 22 WA Math    A 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 ios::sync_with_stdio(0), cin.tie(0); 5 int n; 6 int s[2]; 7 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; s[0] \u0026gt;\u0026gt; s[1]; 8 vector\u0026lt;int\u0026gt; t(n); 9 for (int i = 0; i \u0026lt; n; i++) 10 cin \u0026gt;\u0026gt; t[i]; 11 if (s[0] \u0026gt; s[1]) { 12 int tmp = s[0]; 13 s[0] = s[1]; 14 s[1] = tmp; 15 } 16 vector\u0026lt;bool\u0026gt; dp(s[0] + 1); 17 dp[0] = 1; 18 int sum = 0; 19 int mx = 0; 20 for (int i = 0; i \u0026lt; n; i++) { 21 sum += t[i]; 22 for (int j = s[0]; j \u0026gt;= t[i]; j--) { 23 dp[j] = dp[j] || dp[j - t[i]]; 24 if (dp[j]) mx = max(mx, j); 25 } 26 if (s[1] \u0026lt; sum - mx) { 27 cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 28 return 0; 29 } 30 } 31 cout \u0026lt;\u0026lt; n \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 32 return 0; 33}  C 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, int\u0026gt; pii; 4#define INF 2100000000 5int main() { 6 ios::sync_with_stdio(0), cin.tie(0); 7 int n, m, T; 8 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m \u0026gt;\u0026gt; T; 9 vector\u0026lt;vector\u0026lt;pii\u0026gt;\u0026gt; G(n); 10 for (int i = 0; i \u0026lt; m; i++) { 11 int u, v, w; 12 cin \u0026gt;\u0026gt; u \u0026gt;\u0026gt; v \u0026gt;\u0026gt; w; 13 G[u].push_back(pii(v, w)); 14 G[v].push_back(pii(u, w)); 15 } 16 int s, t, k; 17 cin \u0026gt;\u0026gt; s \u0026gt;\u0026gt; t \u0026gt;\u0026gt; k; 18 vector\u0026lt;int\u0026gt; spi(n, INF); 19 priority_queue\u0026lt;pii, vector\u0026lt;pii\u0026gt;, greater\u0026lt;pii\u0026gt;\u0026gt; pq; 20 for (int i = 0, x; i \u0026lt; k; i++) { 21 cin \u0026gt;\u0026gt; x; 22 spi[x] = 0; 23 pq.push(pii(spi[x], x)); 24 } 25 while (!pq.empty()) { 26 int u = pq.top().second; 27 pq.pop(); 28 for (auto e : G[u]) { 29 int uu = e.first, w = e.second; 30 if (spi[u] + w \u0026lt; spi[uu]) { 31 spi[uu] = spi[u] + w; 32 pq.push(pii(spi[uu], uu)); 33 } 34 } 35 } 36 long long low = 0, high = INF; 37 int ans = 0; 38 while (low \u0026lt;= high) { 39 int mid = (low + high) \u0026gt;\u0026gt; 1; 40 while (!pq.empty()) pq.pop(); 41 vector\u0026lt;int\u0026gt; dis(n, T + 1); 42 bool fail = true; 43 if (spi[s] \u0026gt;= mid) { 44 dis[s] = 0; 45 pq.push(pii(0, s)); 46 } 47 while (!pq.empty()) { 48 int u = pq.top().second; 49 pq.pop(); 50 for (auto e : G[u]) { 51 int uu = e.first, w = e.second; 52 if (spi[uu] \u0026gt;= mid \u0026amp;\u0026amp; dis[u] + w \u0026lt; dis[uu]) { 53 dis[uu] = dis[u] + w; 54 pq.push(pii(dis[uu], uu)); 55 } 56 } 57 } 58 if (dis[t] \u0026lt;= T) low = mid + 1, ans = mid; 59 else high = mid - 1; 60 } 61 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 62 return 0; 63}  F 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define INF 2000000000 4typedef long long ll; 5int main() { 6 ios::sync_with_stdio(0), cin.tie(0); 7 int l; cin \u0026gt;\u0026gt; l; 8 vector\u0026lt;ll\u0026gt; p(l); 9 for (int i = 0; i \u0026lt; l; i++) cin \u0026gt;\u0026gt; p[i]; 10 vector\u0026lt;ll\u0026gt; d(l); 11 for (int i = 0; i \u0026lt; l - 1; i++) cin \u0026gt;\u0026gt; d[i]; 12 d[l - 1] = 1e6 + 10; 13 vector\u0026lt;ll\u0026gt; sum(l + 1), sum_d(l + 1); 14 for (int i = 1; i \u0026lt;= l; i++) { 15 sum[i] = sum[i - 1] + p[i - 1] * d[i - 1]; 16 sum_d[i] = sum_d[i - 1] + d[i - 1]; 17 } 18 int t, n; cin \u0026gt;\u0026gt; t \u0026gt;\u0026gt; n; 19 vector\u0026lt;int\u0026gt; a(n + 2), b(n + 2); 20 for (int i = 1; i \u0026lt;= n; i++) 21 cin \u0026gt;\u0026gt; a[i] \u0026gt;\u0026gt; b[i]; 22 a[n + 1] = b[n + 1] = t + 1; 23 vector\u0026lt;ll\u0026gt; dp(n + 2, INF); 24 dp[0] = 0; 25 for (int i = 1; i \u0026lt;= n + 1; i++) { 26 for (int j = 0 ; j \u0026lt; i; j++) { 27 int len = a[i] - b[j] - 1; 28 if (!len) dp[i] = min(dp[i], dp[j]); 29 else { 30 int r = upper_bound(sum_d.begin(), sum_d.end(), len) - sum_d.begin() - 1; 31 ll cost = sum[r] + (len - sum_d[r]) * p[r]; 32 dp[i] = min(dp[i], dp[j] + cost); 33 } 34 } 35 } 36 cout \u0026lt;\u0026lt; dp[n + 1] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 37 return 0; 38}  ","date":"2021-03-24T17:50:02+08:00","image":"https://Luke2336.github.io/post/Diary/20210324/Standing.png","permalink":"https://Luke2336.github.io/p/20210324/","title":"2021/03/24 日記"},{"content":"超級濕冷的一天，很懶得出門上課，晚上去竹東，然後稍微寫了 EDA 作業。\n","date":"2021-03-23T11:15:36+08:00","permalink":"https://Luke2336.github.io/p/20210323/","title":"2021/03/23 日記"},{"content":"今天又濕又冷。\n早上五點半就起床，在國光號就都在睡覺，在清大下車後，去吃了永和豆漿，然後才回學校睡覺。\n早上的英文作文課是互相看別人的作文為主，沒有新的作業。中午的課難得我有稍微認真一點聽，下午的 EDA 把 partition 上完了。\n之後我就一直在寫 EDA 的作業，打算用 F-M alogirithm，可能加上 Multithreading 去做。沒有有 GPU 的原因是擔心記憶體的問題，所以可能放到有空再作嘗試。看了一下最大的測資，degree 和大概才 3e5，只有幾條邊非常肥。\n晚餐吃了牛肉麵，然後聊到了一些妥協的話題，心情就有點糟。之後就只寫了一點點作業，然後就去睡了。\n","date":"2021-03-22T14:37:32+08:00","permalink":"https://Luke2336.github.io/p/20210322/","title":"2021/03/22 日記"},{"content":"早上睡到有點晚才起床，玩了貓之後就中午了，之後就一直在研究 CUDA。晚上吃了熱炒，洗了澡，幫媽媽幫白頭髮之後就去睡了。\nCUDA 參考資料  CUDA C/C++ Basics 谭升的博客  GCC 版本問題 CUDA 只支援 GCC5 以前的版本，幸好工作站上有 GCC4.8，所以用 nvcc --compiler-binder /usr/bin/gcc4.8 就解決了編譯的問題了。\nNote  Host vs. Device  Host 是用 CPU 跑 serial 的部分。 Device 是用 GPU 跑 parallel 的部分。 兩者的 Memory 是分開的。   __global__ 要加在 device function code 前面。 cudaMalloc()、cudaMemcpy()、cudaFree()。  Simple Code 1#include\u0026lt;stdio.h\u0026gt;2using namespace std; 3__global__ void add(int *a, int *b, int *c) { 4 *c = *a + *b; 5} 6int main() { 7 int a, b, c; 8 int *d_a, *d_b, *d_c; 9 int size = sizeof(int); 10 cudaMalloc((void**)\u0026amp;d_a, size); 11 cudaMalloc((void**)\u0026amp;d_b, size); 12 cudaMalloc((void**)\u0026amp;d_c, size); 13 a = 2, b = 7; 14 cudaMemcpy(d_a, \u0026amp;a, size, cudaMemcpyHostToDevice); 15 cudaMemcpy(d_b, \u0026amp;b, size, cudaMemcpyHostToDevice); 16 printf(\u0026#34;a = %d\\n\u0026#34;, a); 17 printf(\u0026#34;b = %d\\n\u0026#34;, b); 18 add\u0026lt;\u0026lt;\u0026lt;1, 1\u0026gt;\u0026gt;\u0026gt;(d_a, d_b, d_c); 19 cudaMemcpy(\u0026amp;c, d_c, size, cudaMemcpyDeviceToHost); 20 cudaFree(d_a); 21 cudaFree(d_b); 22 cudaFree(d_c); 23 printf(\u0026#34;c = %d\\n\u0026#34;, c); 24 return 0; 25}  Vector 加法  改成 add\u0026lt;\u0026lt;\u0026lt;1, N\u0026gt;\u0026gt;\u0026gt;(d_a, d_b, d_c); 即可用 threadIdx.x 操作  1#include\u0026lt;stdio.h\u0026gt;2using namespace std; 3__global__ void add(int *a, int *b, int *c) { 4 c[blockIdx.x] = a[blockIdx.x] + b[blockIdx.x]; 5} 6#define N 20 7int main() { 8 int *a, *b, *c; 9 int *d_a, *d_b, *d_c; 10 int size = N * sizeof(int); 11 cudaMalloc((void**)\u0026amp;d_a, size); 12 cudaMalloc((void**)\u0026amp;d_b, size); 13 cudaMalloc((void**)\u0026amp;d_c, size); 14 a = (int*)malloc(size); 15 b = (int*)malloc(size); 16 c = (int*)malloc(size); 17 for (int i = 0; i \u0026lt; N; i++) 18 a[i] = b[i] = i; 19 cudaMemcpy(d_a, a, size, cudaMemcpyHostToDevice); 20 cudaMemcpy(d_b, b, size, cudaMemcpyHostToDevice); 21 add\u0026lt;\u0026lt;\u0026lt;N, 1\u0026gt;\u0026gt;\u0026gt;(d_a, d_b, d_c); 22 cudaMemcpy(c, d_c, size, cudaMemcpyDeviceToHost); 23 cudaFree(d_a); cudaFree(d_b); cudaFree(d_c); 24 free(a); free(b); free(c); 25 for (int i = 0; i \u0026lt; N; i++) 26 printf(\u0026#34;%d %d %d\\n\u0026#34;, a[i], b[i], c[i]); 27 return 0; 28}   多個 block，每個 block 用 M 個 Thread。 每個 Block 會輪流執行，由多個 Thread 去跑完一個 Block 才跑下一個，同一個 Block 中的 Thread 可 shared memory。  1#include\u0026lt;vector\u0026gt;2#include\u0026lt;stdio.h\u0026gt;3using namespace std; 4#define N 1000 5#define M 30 6__global__ void add(int *a, int *b, int *c) { 7 int index = threadIdx.x + blockIdx.x * blockDim.x; 8 if (index \u0026lt; N) 9 c[index] = a[index] + b[index]; 10} 11int main() { 12 int *a, *b, *c; 13 int *d_a, *d_b, *d_c; 14 int size = N * sizeof(int); 15 cudaMalloc((void**)\u0026amp;d_a, size); 16 cudaMalloc((void**)\u0026amp;d_b, size); 17 cudaMalloc((void**)\u0026amp;d_c, size); 18 a = (int*)malloc(size); 19 b = (int*)malloc(size); 20 c = (int*)malloc(size); 21 for (int i = 0; i \u0026lt; N; i++) 22 a[i] = b[i] = i; 23 cudaMemcpy(d_a, a, size, cudaMemcpyHostToDevice); 24 cudaMemcpy(d_b, b, size, cudaMemcpyHostToDevice); 25 add\u0026lt;\u0026lt;\u0026lt;(N+M-1)/M, M\u0026gt;\u0026gt;\u0026gt;(d_a, d_b, d_c); 26 cudaMemcpy(c, d_c, size, cudaMemcpyDeviceToHost); 27 free(a); free(b); free(c); 28 cudaFree(d_a); cudaFree(d_b); cudaFree(d_c); 29 return 0; 30}  ","date":"2021-03-21T17:08:23+08:00","permalink":"https://Luke2336.github.io/p/20210321/","title":"2021/03/21 日記"},{"content":"這週都沒有打球，感覺有些難過。昨晚有夢到打球，但是一球都打不好，算是糟糕的夢。\n公館 早上就跟 T 一塊去台北，然後我去弟弟家睡到中午。\n我們去溫州街那區吃了 pizza，點了一個雞肉馬鈴薯口味 $260 和一個蘋果肉桂口味 $170，每人低消 $150，還需要一成服務費。\n去台大散了步，有看到一個農產市集「穗道」。然後到醉月湖看了鵝和鴨鴨，有幾隻番鴨很大隻。之後去了吃了「台大牛奶大王」的紅豆湯圓牛奶冰 $70，湯圓還滿棒的。\n回家 到基隆後就因為溫差一直過敏，回到家就吃顆藥睡到九點多，然後吃了鹽酥雞就去洗澡睡覺了。\n依依不捨的小乖。\n","date":"2021-03-20T15:47:06+08:00","image":"https://Luke2336.github.io/post/Diary/20210320/ice.jpg","permalink":"https://Luke2336.github.io/p/20210320/","title":"2021/03/20 日記"},{"content":" 寫完計算方法之實務應用 HW1，昨晚的 bug 是忘記每個 cell 只能放一種數字，加了這個條件之後就 ok 了。因為花了不少時間研究怎麼跑 MiniSAT 的執行檔，於是總共花了 4 個小時才搞定這份作業。因為要用 Linux，所以第一次用系計中的工作站。 去 NYCU Open House 聽了兩場演講，有拿到雞排和餐盒。 下午稍微測試了一下 EDA Lab 的工作站。 交了台清交程式競賽的報名費 $300，沒想到交大今年只有 3 隊。 晚上 17:30 - 19:10 吃了導聚，去了建功中學對面的芙歐，點了煙燻鮭魚義大利麵，加上套餐，覺得滿飽的，味道還行，但價位大概都 300 左右，平常應該不太會去吃。 稍微研究了一下 Makefile。 晚上才發現 EDA 的 Homework 是 Hypergraph，覺得有點麻煩。用 Hmatics 跑了一下，感覺還滿快的。計畫是用 FM 演算法寫，KL 複雜度太爛，而且還要處理 Hypergraph，不考慮。現在是在考慮用平行化去做，一開始多放幾個 randome partition 下去跑，再選幾個較好的 case。不過考慮了一下 casche miss，不確定效能夠不夠好。  ","date":"2021-03-19T15:11:31+08:00","permalink":"https://Luke2336.github.io/p/20210319/","title":"2021/03/19 日記"},{"content":" 寫計算方法之實務應用 HW1，用 MiniSAT 解 sudoku。 晚上去一餐體驗了 10 元壽司，覺得吃不飽。 英文會話課上了怎麼描述人的外觀。  ","date":"2021-03-18T10:17:53+08:00","permalink":"https://Luke2336.github.io/p/20210318/","title":"2021/03/18 日記"},{"content":"下午體育課停課，於是將 ICCAD 的 parser bug 修好了，還有把英文作文寫完了。\nPCCA 今天練到 21:30 就因為教室要鎖門，所以就各自回去休息了。不然原本解得還算順利，一直有題目在寫。\n2013-2014 ACM-ICPC East Central North America Regional Contest (ECNA 2013) D、E、I 應該都是有機會開得出來的，H 是插頭 DP，結果 hyperbola 一直用 Flow 亂搞，然後就一堆 penalty\u0026hellip;\nToggl  一到四都排了不少課，所以主要做事的時間就會集中在假日，其中星期五產能最高。 英文寫作速度有待加強，雖然包含了構思和找資料的時間，但還是比想像中多不少。 最近開始固定花時間在弄 ICCAD contest。 有空就有在複習正規語言。 USACO 的進度有些停擺。 MT 的課因為沒有修，一不小心就會忘記複習。  ","date":"2021-03-17T09:28:38+08:00","image":"https://Luke2336.github.io/post/Diary/20210317/toggl.png","permalink":"https://Luke2336.github.io/p/20210317/","title":"2021/03/17 日記"},{"content":"今天心情不好，早午餐都沒吃，把時間拿去睡覺。\n正規課滿不專心的，但上難解問題課我精神就來了。今天是教排容原理和機率方法，機率方法的部分我有七成都聽韓老師講過了，但果然是 MT 上課比較快，雖然說是假設的學生先備知識不同就是了。\n覺得自己機率忘了不少，畢竟上學期的課都沒什麼用到，覺得有些失落。\n晚餐和 Maxwill 和卡車一起去吃豬排。\n","date":"2021-03-17T09:28:31+08:00","permalink":"https://Luke2336.github.io/p/20210316/","title":"2021/03/16 日記"},{"content":"因為英文寫作的組員們都不做事，早上洗完澡後，只好自己印 proposal，結果因為忘東忘西就遲到了 QAQ 分組討論了 Opinion Paragraph 的幾個 Issue（性別平等、梅竹賽、Covid 19、NYCU persona），練習寫了 Topic Sentence。\n買了便利商店的麵包當午餐，恍恍惚惚的上完了中午的課。還是沒想到確切的辦法壓掉 K-L Algorithm 的複雜度。\n下午上課時問了老師 K-L 的複雜度，結果他認為最快只做到 O(rN^3)，但後來我有想到 O(rN^2logN)，看了維基百科已經有人做過了 QAQ\n晚上寫了一點點英文作文，作業是 Opinion Paragraph，我寫的主題是 Gender Equality 中關於 Transgender 的部分，覺得還算好發揮。因為累了，所以寫了一半就休息了。\n","date":"2021-03-15T15:08:58+08:00","permalink":"https://Luke2336.github.io/p/20210315/","title":"2021/03/15 日記"},{"content":"中午賴床了一個半小時，吃了麥當勞，寫完教育學的學習單。然後就騎 Ubike 去清大找學長聊天，但他做完投影片後，就一起去動物園旁的市集買點心吃。\n晚上等他們上完課，也一起買了麥當勞吃。他到這時候才告訴我，他女朋友對於我跟他距離過近，有些嫉妒。\n等到十一點左右我就回去交大，因為心情悶悶的，就上去工四頂樓看星星，找了 LinLee 聊聊。\n","date":"2021-03-15T15:08:53+08:00","permalink":"https://Luke2336.github.io/p/20210314/","title":"2021/03/14 日記"},{"content":" 在清大校友體育館打小梅竹，交大電機贏了七十幾分。我打了兩場混雙，都是對到男雙，一場輸一場贏，第一場的時候被殺球打到臉，超痛的～之後跟隊長他們在風雲吃了牛排，然後就回交大休息了。 最近在人多的地方，有時候會覺得莫名的孤單空虛，有點小憂鬱。這兩天也有點沒食慾，可能是平日的課排太緊湊了，生活過得有點累。 洗完澡後完成了 ICCAD contest problem B 的 parser，寫順了就滿快的。 半妖的夜叉姬追到倒數第二集了，故事比預期的爛。 報名了 5/15 的 GEPT 中高級初試。  ","date":"2021-03-13T18:36:09+08:00","image":"https://Luke2336.github.io/post/Diary/20210313/%E5%B0%8F%E6%A2%85%E7%AB%B9.jpg","permalink":"https://Luke2336.github.io/p/20210313/","title":"2021/03/13 日記"},{"content":"中午去系辦補交交換獎學金的資料，然後遇到導師，跟他聊了一下導聚的時間，他問我想吃什麼，但我想不出來。\n之後去二招吃咖哩，覺得有點吃不完，就分給ㄠㄨ吃。\n然後就一起去台達館找位置寫 ICCAD contest 的 code，他教了我一些寫專案的結構。寫到傍晚我們就一起去清夜吃六扇門，然後我就搭小紅巴回宿舍繼續寫。\n","date":"2021-03-13T18:36:03+08:00","permalink":"https://Luke2336.github.io/p/20210312/","title":"2021/03/12 日記"},{"content":"今天還滿累的，上五節課後，去系辦交資料，接著助教時間，然後吃個飯還要上英文課。覺得這陣子雜事有點多，耗費了不少精神。\n這學期主要的事：\n 修課 PCCA ICCAD contest 專題研究 規劃暑假和大四  傍晚收到 Google 的來信，已經可以送到 Hiring Committee 了，但可能會在 queue 裡待一陣子\u0026hellip;\n趁著傍晚有空就報名了電資週的羽球。\n修課 教育學概論 回答問題後，老師送了我一本書。\n問題：為什麼要用成績評定學生好壞？  以下是老師提到的一些想法。 評量是為了分配資源，以利於國家拔擢人才。 \u0026ldquo;Evaluation is to improve.\u0026rdquo;  EDA  \u0026ldquo;technology-independent\u0026rdquo;  這裡的 technology 是指 node node 是 65nm, 32nm, \u0026hellip;   教了 K-L Algorithm，用來找 balanced 2-partition，但非常的 heuristic。  正規語言 意外的上了一點點 pattern searching 的演算法。\nPattern Searching - KMP  做成一個 DFA accept Pattern。 Time Complexity = O(n + m)  O(n) build dfa O(m) for string matching    USACO 寫完了 Section 2.1。\n 4.1 Beef McNuggets  4.1 Beef McNuggets  有點吃數論的題目～ 題意：給定 N ≤ 10 個正整數 ≤ 256，求最大的正整數不能用這些數字組出來，若無限大則輸出 0。 解法：若 gcd 不為 1 則輸出 0，否則答案會在 256 x 256 以內，DP 解即可。  對於互質的正整數 a, b，最大不能得到的數為 ab - a - b。    1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 freopen(\u0026#34;nuggets.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 5 freopen(\u0026#34;nuggets.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 6 int n; cin \u0026gt;\u0026gt; n; 7 vector\u0026lt;int\u0026gt; a(n); 8 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; a[i]; 9 int g = a[0]; 10 for (int x : a) g = __gcd(x, g); 11 if (g != 1) { 12 cout \u0026lt;\u0026lt; \u0026#34;0\\n\u0026#34;; 13 return 0; 14 } 15 const int M = 256 * 256; 16 bool check[M + 300] = {1}; 17 int ans = 0; 18 for (int i = 0; i \u0026lt; M; i++) 19 if (check[i]) 20 for (int x : a) 21 check[i + x] = true; 22 else ans = i; 23 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 24 return 0; 25}  かくりよの宿飯 看完了 26 集，覺得很好看，可惜只有一季。\n","date":"2021-03-11T10:25:11+08:00","permalink":"https://Luke2336.github.io/p/20210311/","title":"2021/03/11 日記"},{"content":"羽球課 複習了步伐和中場的平球，跑得有點累，右大腿有點拉傷，左腳踝也稍微拐到。感覺比較習慣球拍的手感了，但還是對星期六的小梅竹比賽有點緊張。\nPCCA 今天訂的飯不太好吃。LinLee 因為很累，所以這次就跟路學弟練。雙曲線狀況不太好，今天一直卡題。\n2013-2014 ACM ICPC Central European Regional Contest (CERC 13) ","date":"2021-03-11T10:25:04+08:00","image":"https://Luke2336.github.io/post/Diary/20210310/Standing.png","permalink":"https://Luke2336.github.io/p/20210310/","title":"2021/03/10 日記"},{"content":"和老師聊了一下未來的事，晚上和老師們吃了一餐的 LaLa。\n在臉書發了一篇文，講關於資奧女保名額的事。\n","date":"2021-03-09T10:11:56+08:00","permalink":"https://Luke2336.github.io/p/20210309/","title":"2021/03/09 日記"},{"content":"做了一個關於殭屍和火災的惡夢，沒睡好。藥效持續了很久，到下午都昏昏沈沈的。\n英文課沒有太多進度，大致上就是分好組了，組裡的男生略略積極，於是期中作業就變成運動介紹的部落格了\u0026hellip;\u0026hellip;\n中午的課花了一小時複習演算法概論，覺得那段時間應該翹課才對。今天李一凡對我莫名親近，讓我有點嚇到。\n晚上吃了烏龍麵和湯圓，很早就睡了。\n英文寫作 - Formal Writing 我覺得自己在 Formal Writing 上需要加強的首先就是用字，除此之外就是拉長句子的結構，不行一直短短的很多句點。\n Punctuation, proper grammar, and correct sentence structure Longer / more complex sentences Larger and less common words Avoid phrasal verbs Avoid contractions (I’m, you’re, can’t, don’t, hasn’t, wasn’t, \u0026hellip;) No idioms, slang, text speaks Avoid shortened words  ","date":"2021-03-09T10:11:50+08:00","permalink":"https://Luke2336.github.io/p/20210308/","title":"2021/03/08 日記"},{"content":"かくりよの宿飯，這部動畫很女性向，畫風很合我胃口，於是就入坑了 \u0026gt;\u0026lt;\n最近異常的疲累～下午刷了一點點 USACO。\n不知不覺就寫了快 100 篇日記了。\n羽球 晚上去打了系羽，發現 23 磅有點拉不動長球，感覺應該再好好調整姿勢和協調性。但 23 磅切球的感覺卻非常乾脆，切出來的質量不錯，需要比原本用更多力，卻得到不錯的球速。\n下週的小梅竹要上混雙，有點緊張。\nUSACO 寫完 Chapter 3 了！\n 3.4 American Heritage 3.4 Electric Fence 3.4 Raucous Rockers  3.4 American Heritage  題意：給定一棵二元樹的中序和前序，求輸出後序。 解法：用前序標出中間節點後遞迴。應該可以做到 O(n)，但因為懶，所以用了 O(n^2)。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3string pre, in; 4void solve(int il, int ir, int pl, int pr) { 5 if (il \u0026gt; ir) return; 6 if (il == ir) { cout \u0026lt;\u0026lt; in[il]; return; } 7 int i; 8 for (i = il; in[i] != pre[pl]; i++) {} 9 solve(il, i - 1, pl + 1, pl - il + i); 10 solve(i + 1, ir, pr - ir + i + 1, pr); 11 cout \u0026lt;\u0026lt; pre[pl]; 12} 13int main() { 14 freopen(\u0026#34;heritage.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 15 freopen(\u0026#34;heritage.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 16 cin \u0026gt;\u0026gt; in \u0026gt;\u0026gt; pre; 17 solve(0, in.length() - 1, 0, in.length() - 1); 18 cout \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 19 return 0; 20}  3.4 Electric Fence  題意：給定一個三角形，頂點為 (0, 0), (n, m), (p, 0)，介於 [0, 32000]x[0, 32000] 之間，問有幾個座標點是在三角形裡？ 解法：對每個 y 都算一次邊上的座標，複雜度 O(m)。 官方解法：Pick\u0026rsquo;s Theorem。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 freopen(\u0026#34;fence9.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 5 freopen(\u0026#34;fence9.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 6 int n, m, p; 7 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m \u0026gt;\u0026gt; p; 8 int ans = 0; 9 for (int i = 1; i \u0026lt; m; i++) 10 ans += max(0, ((n + p) * i - 1) / m - n * i / m); 11 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 12 return 0; 13}  3.4 Raucous Rockers  題意：給定 n ≤ 20 首個歌的長度，共有 m ≤ 20 個唱片可以存放歌曲，每張唱片最多存 T ≤ 20 的長度，且存放時要按照輸入的順序，問最多能存幾首歌。 解法：枚舉放了哪些歌，然後 Greedy，O(n 2^n)。或是用 DP 做，O(nmT)。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 freopen(\u0026#34;rockers.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 5 freopen(\u0026#34;rockers.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 6 int n, m, t; 7 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; t \u0026gt;\u0026gt; m; 8 vector\u0026lt;int\u0026gt; v(n); 9 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; v[i]; 10 int N = 1 \u0026lt;\u0026lt; n; 11 int ans = 0; 12 for (int i = 1; i \u0026lt; N; i++) { 13 int c = __builtin_popcount(i); 14 if (c \u0026lt;= ans) continue; 15 int r = 0, cnt = 0; 16 for (int j = 0; j \u0026lt; n; j++) { 17 if ((1 \u0026lt;\u0026lt; j) \u0026amp; i) { 18 if (v[j] \u0026gt; t) r = m; 19 if (cnt + v[j] \u0026gt; t) 20 r++, cnt = v[j]; 21 else cnt += v[j]; 22 } 23 } 24 if (r \u0026lt; m) ans = max(c, ans); 25 } 26 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 27 return 0; 28}  ","date":"2021-03-07T15:27:28+08:00","permalink":"https://Luke2336.github.io/p/20210307/","title":"2021/03/07 日記"},{"content":"寫完正規 HW1 了，畫了一堆自動機。\n晚餐吃了麥當勞，之後心情很不好，不太滿意近況。很想回到以前的身心狀態，但覺得最近的精力不斷下滑，很挫折。\n洗了衣服，看了一部動畫かくりよの宿飯，覺得心情有放鬆一點。主題是我喜歡的，妖怪＋料理，音樂也很好聽。\n","date":"2021-03-06T15:21:22+08:00","image":"https://Luke2336.github.io/post/Diary/20210306/img.png","permalink":"https://Luke2336.github.io/p/20210306/","title":"2021/03/06 日記"},{"content":"早上去找導師簽了交換的文件後，在宿舍混了一下，就去清大吃下午茶和寫作業了。\n晚上跟學長去清夜拿羽球拍和吃義大利麵，然後因為戶外下雨，所以就在台達館聊了一下。\n空堂咖啡 去清大的空堂咖啡吃了下午的甜點，這週是提拉米蘇，加上一杯冰拿鐵。\n還被請了一杯檸檬水，但之後肚子不太舒服\u0026hellip;\u0026hellip;\n然後去台達館找了一個空桌寫正規語言作業，發現旁邊有白板，但筆都沒水了，下次會考慮帶自己的筆去。\n","date":"2021-03-05T11:50:57+08:00","image":"https://Luke2336.github.io/post/Diary/20210305/coffee.jpg","permalink":"https://Luke2336.github.io/p/20210305/","title":"2021/03/05 日記"},{"content":"過敏很嚴重的一天，一直流鼻水，眼睛也很癢，於是就請了 TA office hour。\n早上就覺得很疲倦，上了無趣的教育學概論，已經有想要翹課的衝動了。\n下午去上了 EDA 和正規，覺得正規應該會是我這學期比較感興趣的課。開學第二周就在第二排趴著上課\u0026hellip;\n晚上吃了熟凍麵，覺得很棒，之後就吃了藥一直昏睡。\nEDA 這次上課是在講 EDA 的產值，覺得有點無聊。怎麼感覺電機系的老師都覺得大家以後都會跑去當工程師呢？\n","date":"2021-03-05T11:50:51+08:00","permalink":"https://Luke2336.github.io/p/20210304/","title":"2021/03/04 日記"},{"content":"頭痛很嚴重，好不容易起床上德語課，下週開始有口語圓桌。\nGoogle Intern 面試 體育課請假，在宿舍線上面試。\n連續兩場，慘慘的，HR 把兩場的連結搞錯，於是被 Delay，還直接被面試官 call !!\n兩場都面的不太好，但第一場比較慘，一開始有點沒聽懂問題。寫 code 的狀況也慘慘，很多初始值忘記設。第二場的題目水水的，就很 DP 水題。\n好慘好慘，每次一緊張就胡說八道了\u0026hellip;覺得去年面得比較好。\nPCCA 今天忘記訂餐了，於是就遲到了。曲線忘記要練習了，於是就忙微軟的事請假，只好跟路學弟練。\n2020-2021 ACM-ICPC, Asia Seoul Regional Contest 中段打得有點卡，讀題和解題速度偏慢。這場基本上 penalty 不高，但 pJ 太晚開出來了。\n   problem status coder type     A WA Emilian 實作   B AC LinLee 水題   C AC Kelly tree   D      E AC LinLee greedy   F      G AC LinLee, Emilian 三分搜   H AC Kelly FFT   I      J AC Emilian 高斯消   K      L       pC 只要是在 k 個點中任意兩個的路徑上就可以選。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; G; 4vector\u0026lt;bool\u0026gt; color; 5int k; 6int ans = 0; 7int dfs(int u, int p) { 8 int cnt = 0, r = 0; 9 for (int uu : G[u]) { 10 if (uu == p) continue; 11 int tmp = dfs(uu, u); 12 if (tmp) r++, cnt += tmp; 13 } 14 cnt += color[u]; 15 if (color[u]) ans++; 16 else { 17 if (k - cnt) r++; 18 if (r \u0026gt;= 2) ans++; 19 } 20 return cnt; 21} 22int main () { 23 ios::sync_with_stdio(0), cin.tie(0); 24 int n; 25 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; k; 26 G.resize(n + 1); 27 color.resize(n + 1); 28 for (int i = 1; i \u0026lt; n; i++) { 29 int a, b, w; 30 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; w; 31 G[a].push_back(b); 32 G[b].push_back(a); 33 } 34 for (int i = 0; i \u0026lt; k ; i++) { 35 int c; cin \u0026gt;\u0026gt; c; 36 color[c] = true; 37 } 38 dfs(1, 0); 39 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 40 return 0; 41}  pH 用 FFT 對上下兩排做多項式乘法，再用中間那排算係數和。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4template \u0026lt;typename T, typename VT = vector\u0026lt;complex\u0026lt;T\u0026gt;\u0026gt; \u0026gt; 5struct FFT { 6 const T pi = acos((T)-1.0); 7 unsigned bit_reverse(unsigned a, int len) { 8 a = ((a\u0026amp;0x55555555U)\u0026lt;\u0026lt;1) | ((a\u0026amp;0xAAAAAAAAU)\u0026gt;\u0026gt;1); 9 a = ((a\u0026amp;0x33333333U)\u0026lt;\u0026lt;2) | ((a\u0026amp;0xCCCCCCCCU)\u0026gt;\u0026gt;2); 10 a = ((a\u0026amp;0x0F0F0F0FU)\u0026lt;\u0026lt;4) | ((a\u0026amp;0xF0F0F0F0U)\u0026gt;\u0026gt;4); 11 a = ((a\u0026amp;0x00FF00FFU)\u0026lt;\u0026lt;8) | ((a\u0026amp;0xFF00FF00U)\u0026gt;\u0026gt;8); 12 a = ((a\u0026amp;0x0000FFFFU)\u0026lt;\u0026lt;16) | ((a\u0026amp;0xFFFF0000U)\u0026gt;\u0026gt;16); 13 return a \u0026gt;\u0026gt; (32 - len); 14 } 15 void fft(bool is_inv, VT \u0026amp;in, VT \u0026amp;out, int N) { 16 int bitlen = __lg(N), num = is_inv ? 1 : -1; 17 for (int i = 0; i \u0026lt; N; ++i) 18 out[bit_reverse(i, bitlen)] = in[i]; 19 for (int step = 2, mh = 1; step \u0026lt;= N; step \u0026lt;\u0026lt;= 1, mh \u0026lt;\u0026lt;= 1) { 20 for (int i = 0; i \u0026lt; mh; ++i) { 21 complex\u0026lt;T\u0026gt; wi = exp(complex\u0026lt;T\u0026gt;(0, i * num * pi / mh)); 22 for (int j = i, k = i + mh; j \u0026lt; N; j += step, k += step) { 23 complex\u0026lt;T\u0026gt; u = out[j], t = wi * out[k]; 24 out[j] = u + t, out[k] = u - t; 25 } 26 } 27 } 28 for (int i = 0; is_inv \u0026amp;\u0026amp; i \u0026lt; N; ++i) 29 out[i] /= N; 30 } 31}; 32ll solve(vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; a, int *n) { 33 int mx = 0, N = 131072; 34 FFT\u0026lt;double\u0026gt; F; 35 vector\u0026lt;complex\u0026lt;double\u0026gt;\u0026gt; v[3]; 36 vector\u0026lt;complex\u0026lt;double\u0026gt;\u0026gt; a_fft(N), b_fft(N), ab_fft(N), ab(N); 37 for (int i = 0; i \u0026lt; 3; i++) { 38 v[i].resize(N, complex\u0026lt;double\u0026gt;(0)); 39 for (int j = 0; j \u0026lt; n[i]; j++) 40 v[i][a[i][j] + 30000] = complex\u0026lt;double\u0026gt;(1); 41 } 42 F.fft(0, v[0], a_fft, N); 43 F.fft(0, v[2], b_fft, N); 44 for (int i = 0; i \u0026lt; N; i++) 45 ab_fft[i] = a_fft[i] * b_fft[i]; 46 F.fft(1, ab_fft, ab, N); 47 ll ans = 0; 48 for (int i = 0; i \u0026lt; n[1]; i++) { 49 int goal = (a[1][i] + 30000) \u0026lt;\u0026lt; 1; 50 ans += ll(ab[goal].real() + 1e-6); 51 } 52 return ans; 53} 54int main () { 55 int n[3]; 56 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; a(3); 57 for (int i = 0 ; i \u0026lt; 3; i++) { 58 cin \u0026gt;\u0026gt; n[i]; 59 a[i].resize(n[i]); 60 for (int j = 0; j \u0026lt; n[i]; j++) 61 cin \u0026gt;\u0026gt; a[i][j]; 62 } 63 cout \u0026lt;\u0026lt; solve(a, n) \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 64 return 0; 65}  ","date":"2021-03-03T15:47:20+08:00","image":"https://Luke2336.github.io/post/Diary/20210303/Standing.png","permalink":"https://Luke2336.github.io/p/20210303/","title":"2021/03/03 日記"},{"content":"今天變得很冷，於是一直很想睡。\n早上上了正規語言，大概進度是講 NFA 可以被 DFA 取代。\n下午上難解問題，主題是 NPI，覺得證明滿有趣。另外還教了 Heap\u0026rsquo;s Algorithm，用 O(n!) 枚舉，打算放進 Codebook 裡。\n晚上吃了火雞肉飯，覺得沒胃口。\nHeap\u0026rsquo;s Algorithm 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3void heaps(int k, vector\u0026lt;int\u0026gt; \u0026amp;s, int n) { 4 if (k == 1) { 5 for (int i = 0; i \u0026lt; n; i++) 6 cout \u0026lt;\u0026lt; s[i] \u0026lt;\u0026lt; \u0026#34; \\n\u0026#34;[i == n - 1]; 7 return; 8 } 9 for (int i = 0; i \u0026lt; k - 1; ++i) { 10 heaps(k - 1, s, n); 11 if (k \u0026amp; 1) swap(s[i], s[k - 1]); 12 else swap(s[0], s[k - 1]); 13 } 14 heaps(k - 1, s, n); 15} 16void permutation(int n) { 17 vector\u0026lt;int\u0026gt; v(n); 18 for (int i = 0; i \u0026lt; n; i++) v[i] = i; 19 heaps(n, v, n); 20} 21int main() { 22 int n; cin \u0026gt;\u0026gt; n; 23 permutation(n); 24 return 0; 25}  ","date":"2021-03-02T15:58:19+08:00","permalink":"https://Luke2336.github.io/p/20210302/","title":"2021/03/02 日記"},{"content":"今天是 228 補假，因為昨天很累，所以幾乎都在睡覺。身體不太舒服，心情也不好。\n","date":"2021-03-02T15:58:12+08:00","permalink":"https://Luke2336.github.io/p/20210301/","title":"2021/03/01 日記"},{"content":" 送羽球拍去穿線，結果要星期五才能拿。決定穿穿看 BG65 23 磅。 午餐吃了 Pizza。 和ㄠㄨ討論了 ICCAD 的題目，決定做 pB。 睡了兩次午覺。 晚餐吃了光復路的火鍋，比六扇門貴，但沒有比較好吃。 半夜被 hyperbola 挖去工四開門\u0026hellip;  toggl - 二月 二月結束了，這個月大部分的時間都在練 coding。\n","date":"2021-02-28T22:51:21+08:00","permalink":"https://Luke2336.github.io/p/20210228/","title":"2021/02/28 日記"},{"content":"中午吃了漢堡王。\n去台中後站的泉源公園看了生態湖和帝國製糖廠，看到一隻夜鷺把魚給吞了，然後去大魯閣吃冰。之後搭客運回新竹花了兩小時。\n回宿舍後，看了一集夜叉姬，寫了教育學概論的學習單。買了牛奶，準備做優格。\n","date":"2021-02-27T20:54:56+08:00","permalink":"https://Luke2336.github.io/p/20210227/","title":"2021/02/27 日記"},{"content":"發現忘記把學貸的資料交到生輔組，2/24 就截止了，一早就寄 email 去問，幸好她讓我補交。\n午餐後，複習了德文和正規語言，收了衣服，然後有點累就睡了午覺，追完了「天地創造設計部」目前的進度，還看了 ICCAD contest 的 pA。\n晚上想買湯圓煮，結果大概跑到第 6 家超商才買到花生口味。\n","date":"2021-02-26T14:41:29+08:00","permalink":"https://Luke2336.github.io/p/20210226/","title":"2021/02/26 日記"},{"content":"早上的教育學概論十分無聊，應該是老師的語調太文謅謅了\n下午的 TA Hour 都沒有人來，覺得有點尷尬。\n晚上去打球，結果熱完身，拍線就斷了。大概半個鐘頭後，肚子就愈來愈痛，只好先回宿舍休息。\n第一次打到斷線，剪線有點不知道從何下手，於是就很認真的 google 了一下，結論是先從對稱的位置剪開，讓受力均勻，接下來就從中心點開始向外剪。\n打算週日在拿去清夜穿線，這個週末應該沒辦法打球了，只好等到下週末。在 FB 問了一下，學長是建議穿 BG65 的 22 磅。我想了很久，決定不要穿太高磅，畢竟我沒什麼打殺球，高遠球也沒辦法拉到底線。\n","date":"2021-02-25T10:11:36+08:00","image":"https://Luke2336.github.io/post/Diary/20210225/0.jpg","permalink":"https://Luke2336.github.io/p/20210225/","title":"2021/02/25 日記"},{"content":"過敏很嚴重的一天。\n早上德文課一開始就直接複習上學期的內容，只好快速把記憶拉回來。\n中午和學妹及她的男友吃了奶油廚房。\n下午羽球課，做操做了很久，然後稍微拉了一下球，覺得球感掉了不少。\n睡了一下，之後洗了澡。\n晚上在 PCCA 吃了便當，然後練了五小時的個人題組，覺得今天很挫折，狀態不是很好。\n練題紀錄    ID Status Penalty Difficulty Keywords Date     A        B        C AC +1 6.3 BFS 2021/02/24   D AC +1 7.9 逆序數對 2021/03/01   E AC +2 4.5 DP 2021/02/24   F        G        H        I        J        K (AC) +1 3.3 暴力 2021/02/25   L        M        N (AC) +0 4.8 Union-Find 2021/02/25   O         ","date":"2021-02-25T10:11:29+08:00","permalink":"https://Luke2336.github.io/p/20210224/","title":"2021/02/24 日記"},{"content":"很累的一天，早上、中午、傍晚都睡了一次。\n","date":"2021-02-23T16:37:42+08:00","permalink":"https://Luke2336.github.io/p/20210223/","title":"2021/02/23 日記"},{"content":" NYCU Portal 轟轟烈烈的爆炸了半天，淒慘的開學日。 上學期排名出來了，是平常的 2 倍，感覺好慘～但總排名還是沒受到太多影響。 Mn56的課還沒決定要不要留，感覺 Loading 有點重，很吃實作的樣子，6 個作業加 2 個 project，期中 project 要 1500 行左右。 晚上跟學長去建功一路吃飯。  USACO 寫完 Section 3.3。\n 3.3 Home on the Range 3.3 A Game  3.3 Home on the Range  題意：給定一個邊長為 n ≤ 250 的 0/1 正方形，問邊長大於 2 的各種大小正方形數量？ 解法：Prefix sum，O(n^3)。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 freopen(\u0026#34;range.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 5 freopen(\u0026#34;range.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 6 ios::sync_with_stdio(0), cin.tie(0); 7 int n; cin \u0026gt;\u0026gt; n; 8 vector\u0026lt;string\u0026gt; v(n); 9 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; v[i]; 10 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; cnt(n, vector\u0026lt;int\u0026gt;(n)); 11 for (int i = 0; i \u0026lt; n; i++) 12 for (int j = 0; j \u0026lt; n; j++) 13 if (v[i][j] == \u0026#39;1\u0026#39;) 14 cnt[i][j] = (j ? cnt[i][j - 1] : 0) + 1; 15 vector\u0026lt;int\u0026gt; ans(n + 1); 16 for (int i = 0; i \u0026lt; n; i++) { 17 for (int j = 0; j \u0026lt; n; j++) { 18 for (int k = 0, mi = n; i + k \u0026lt; n; k++) { 19 mi = min(mi, cnt[i + k][j]); 20 if (mi \u0026gt; k) ans[k + 1]++; 21 else break; 22 } 23 } 24 } 25 for (int i = 2; i \u0026lt;= n \u0026amp;\u0026amp; ans[i]; i++) 26 cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; ans[i] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 27 return 0; 28}  3.3 A Game  題意：給定一個長度為 n ≤ 100 的整數陣列，元素介於 1 ~ 200。兩個玩家輪流從頭或尾拿一個元素，假設兩人都用最佳策略，問最後得到的元素和？ 解法：DP，O(n^2)。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 freopen(\u0026#34;game1.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 5 freopen(\u0026#34;game1.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 6 int n; cin \u0026gt;\u0026gt; n; 7 vector\u0026lt;int\u0026gt; a(n); 8 int sum = 0; 9 for (int i = 0; i \u0026lt; n; i++) { 10 cin \u0026gt;\u0026gt; a[i]; 11 sum += a[i]; 12 } 13 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; dp(n, vector\u0026lt;int\u0026gt;(n)); 14 for (int i = 0; i \u0026lt; n; i++) 15 dp[i][i] = a[i]; 16 for (int i = 1; i \u0026lt; n; i++) 17 for (int l = 0, r = i; r \u0026lt; n; l++, r++) 18 if (i % 2) dp[l][r] = min(-a[l] + dp[l + 1][r], -a[r] + dp[l][r - 1]); 19 else dp[l][r] = max(a[l] + dp[l + 1][r], a[r] + dp[l][r - 1]); 20 21 int x = (sum + dp[0][n - 1]) / 2; 22 int y = sum - x; 23 if (n % 2) cout \u0026lt;\u0026lt; x \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; y \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 24 else cout \u0026lt;\u0026lt; y \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 25 return 0; 26}  ","date":"2021-02-22T09:49:40+08:00","permalink":"https://Luke2336.github.io/p/20210222/","title":"2021/02/22 日記"},{"content":" 補了昨天 ABC 192 pF 洗衣服、床單、被套 擦窗戶 晚餐和ㄠㄨ吃了漢堡王  勘吉咬死了一隻鼴鼠 媽媽說小乖聽到「姊姊」會有反應。\n","date":"2021-02-21T14:28:14+08:00","permalink":"https://Luke2336.github.io/p/20210221/","title":"2021/02/21 日記"},{"content":"AtCoder Beginning Contest 192 pD 被卡了很久，pF 沒靈感，只好掉分。\nA. Star $$O(1)$$\n1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 int x; cin \u0026gt;\u0026gt; x; 7 cout \u0026lt;\u0026lt; 100 - x % 100 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 8 return 0; 9}  B. uNrEaDaBlE sTrInG $$O(|S|)$$\n1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 string s; 7 cin \u0026gt;\u0026gt; s; 8 int len = s.length(); 9 bool check = true; 10 for (int i = 0; i \u0026lt; len; i += 2) 11 if (isupper(s[i])) 12 check = false; 13 for (int i = 1; i \u0026lt; len; i += 2) 14 if (islower(s[i])) 15 check = false; 16 if (check) cout \u0026lt;\u0026lt; \u0026#34;Yes\\n\u0026#34;; 17 else cout \u0026lt;\u0026lt; \u0026#34;No\\n\u0026#34;; 18 return 0; 19}  C. Kaprekar Number $$O(K \\log N)$$\n1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4#define pb push_back 5int f(int x) { 6 vector\u0026lt;int\u0026gt; v; 7 while (x) { 8 v.pb(x % 10); 9 x /= 10; 10 } 11 sort(v.begin(), v.end()); 12 int g1 = 0, g2 = 0; 13 for (int i = v.size() - 1; i \u0026gt;= 0; i--) 14 g1 = g1 * 10 + v[i]; 15 for (int i = 0; i \u0026lt; v.size(); i++) 16 g2 = g2 * 10 + v[i]; 17 return g1 - g2; 18} 19int main() { 20 ios::sync_with_stdio(0), cin.tie(0); 21 int n, k; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; k; 22 while (k--) n = f(n); 23 cout \u0026lt;\u0026lt; n \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 24 return 0; 25}  D. Base n  因為 int64 裝不下，就直接開 python 寫了，下次應該會用 __int128_t。 解法：二分搜，但 X 長度為 1 的時候要特判。 被卡了很久，這場的大敗筆 QAQ  $$O(|X| \\log M)$$\n1s = input() 2m = int(input()) 3d = 0 4for c in s: 5 d = max(d, int(c)) 6low = d + 1 7high = 1000000000000000000 8ans = d 9if len(s) \u0026lt;= 1: 10 if int(s) \u0026lt;= m: 11 print(1) 12 else: 13 print(0) 14else: 15 while low \u0026lt;= high: 16 mid = (low + high) // 2 17 cnt = 0 18 for c in s: 19 cnt = cnt * mid + int(c) 20 if cnt \u0026lt;= m: 21 ans = mid 22 low = mid + 1 23 else: 24 high = mid - 1 25 print(ans - d) E. Train  解法：最短路徑 Dijkstra。 被 Long Long Int 卡了一下 QQ  $$O(M \\log N)$$\n1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;ll, int\u0026gt; pii; 6#define pb push_back 7struct edge { 8 int to, t, k; 9 edge(int _to, int _t, int _k) { 10 to = _to, t = _t, k = _k; 11 } 12}; 13int main() { 14 ios::sync_with_stdio(0), cin.tie(0); 15 int n, m, x, y; 16 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y; 17 vector\u0026lt;vector\u0026lt;edge\u0026gt; \u0026gt; G(n + 1); 18 for (int i = 0; i \u0026lt; m; i++) { 19 int a, b, t, k; 20 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; t \u0026gt;\u0026gt; k; 21 G[a].pb(edge(b, t, k)); 22 G[b].pb(edge(a, t, k)); 23 } 24 vector\u0026lt;ll\u0026gt; dis(n + 1, -1); 25 priority_queue\u0026lt;pii, vector\u0026lt;pii\u0026gt;, greater\u0026lt;pii\u0026gt; \u0026gt; pq; 26 dis[x] = 0; 27 pq.push({dis[x], x}); 28 while (!pq.empty()) { 29 int u = pq.top().second; pq.pop(); 30 if (u == y) break; 31 for (edge e : G[u]) { 32 ll time = dis[u]; 33 if (time % e.k) time += e.k - time % e.k; 34 if (dis[e.to] == -1 || dis[e.to] \u0026gt; time + e.t) { 35 dis[e.to] = time + e.t; 36 pq.push({dis[e.to], e.to}); 37 } 38 } 39 } 40 cout \u0026lt;\u0026lt; dis[y] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 41 return 0; 42}  F. Potion  看了 Dreamoon 的講解才想到要怎麼設 DP 狀態，覺得這題是可想出來的難度。 題意：給定 N ≤ 100 個數字 ≤ 1e7，將 k 個數字融合的分數為他們的和，另外每天會增加 k，且只能在第 0 天融合。給定一個數字 1e9 ≤ X ≤ 1e18，問最少要多少天才能湊到剛好 X 的分數。 解法：對於每個 k 都求 DP[i][j] 以 i 個數字和模 j 的最大值。  $$O(N^4)$$\n1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5int main() { 6 ios::sync_with_stdio(0), cin.tie(0); 7 int n; 8 ll x; 9 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; x; 10 vector\u0026lt;int\u0026gt; a(n); 11 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; a[i]; 12 ll ans = x; 13 for (int k = 1; k \u0026lt;= n; k++) { 14 ll dp[100][100] = {}; 15 for (int x : a) { 16 for (int i = k; i \u0026gt;= 1; i--) { 17 for (int j = 0; j \u0026lt; k; j++) { 18 if (dp[i - 1][j] % k != j) continue; 19 if (!dp[i - 1][j] \u0026amp;\u0026amp; i \u0026gt; 1) continue; 20 int r = (j + x) % k; 21 dp[i][r] = max(dp[i][r], dp[i - 1][j] + x); 22 } 23 } 24 } 25 if (dp[k][x % k] \u0026amp;\u0026amp; (x - dp[k][x % k]) % k == 0) 26 ans = min(ans, (x - dp[k][x % k]) / k); 27 } 28 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 29 return 0; 30}  ","date":"2021-02-20T21:11:32+08:00","image":"https://Luke2336.github.io/post/Other/AtCoder_ABC192/1.png","permalink":"https://Luke2336.github.io/p/atcoder_abc192/","title":"AtCoder Beginning Contest 192"},{"content":"在科三頂樓看了夕陽。\n晚上打了 AtCoder ABC 192，結果又掉分了～\n快開學了 學期目標：\n All Pass，不要有 W，成績都 85 up。 訓練自己規律作息，目標 11 點睡，8 點前起床。 夏天前，每天起床或洗澡前跳繩。 一週至少打一次系羽。3/13 有小梅竹！！ 5/8 英檢中高級初試：每天背一點單字。 參加德文圓桌，有空就用 dw.com 學點單字。 寫完 USACO 和 CSES 題單，讓自己能在賽場上有 coding 技能。  Google 收到 Google 的 SWE Interview 通知了，在 3/1 那週，貌似一週直接把兩場面完？\n原本以為不會收到通知了，看來今年申請的人數應該不少，當初好像是公告後的一個月內申請的。去年面完第一次，就因為疫情所以被取消了，希望今年會順利。\nUSACO  3.3 Camelot  3.3 Camelot  寫的有點醜醜的，但其實不難寫，想的難度比較高。因為想不太到夠快的方法，所以就 Google 了一下。 題意：給定一個 R x C ≤ 30 x 26 的棋盤，棋盤上有一個 King 和多個 Knights，棋子可停留在同一格，當 King 和 Knights 在一起時，King 可帶著一個 Knight 照著 Knight 的走法走，問使得所有棋子都在同一格的最少步數？ 解法：如果沒有 King 的話，這題就是對每個點做一次 BFS，最小距離和就是答案。而多了 King 的做法，就是將每個棋做一次 SPFA，紀錄到每一格以遇到 King 或未遇到的最小步數。 複雜度：假設棋子數量為 K。$$O(KRC)$$  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, int\u0026gt; pii; 4#define x first 5#define y second 6#define INF 100000000 7inline int step(pii k, pii p) { 8 return max(abs(k.x - p.x), abs(k.y - p.y)); 9} 10inline bool range(pii p, int R, int C) { 11 return 0 \u0026lt;= p.x \u0026amp;\u0026amp; 0 \u0026lt;= p.y \u0026amp;\u0026amp; p.x \u0026lt; R \u0026amp;\u0026amp; p.y \u0026lt; C; 12} 13int dis[1000][30][35][2]; 14int main() { 15 freopen(\u0026#34;camelot.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 16 freopen(\u0026#34;camelot.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 17 int R, C; 18 cin \u0026gt;\u0026gt; R \u0026gt;\u0026gt; C; 19 int tmp_int; 20 char tmp_ch; 21 cin \u0026gt;\u0026gt; tmp_ch \u0026gt;\u0026gt; tmp_int; 22 pii king = {tmp_int - 1, tmp_ch - \u0026#39;A\u0026#39;}; 23 vector\u0026lt;pii\u0026gt; knight; 24 while (cin \u0026gt;\u0026gt; tmp_ch \u0026gt;\u0026gt; tmp_int) 25 knight.push_back({tmp_int - 1, tmp_ch - \u0026#39;A\u0026#39;}); 26 if (!knight.size()) { 27 cout \u0026lt;\u0026lt; \u0026#34;0\\n\u0026#34;; 28 return 0; 29 } 30 for (int i = 0; i \u0026lt; knight.size(); i++) 31 for (int j = 0; j \u0026lt; R; j++) 32 for (int k = 0; k \u0026lt; C; k++) 33 dis[i][j][k][0] = dis[i][j][k][1] = INF; 34 const int dx[8] = {2, 2, 1, 1, -1, -1, -2, -2}; 35 const int dy[8] = {1, -1, 2, -2, 2, -2, 1, -1}; 36 for (int i = 0; i \u0026lt; knight.size(); i++) { 37 dis[i][knight[i].x][knight[i].y][0] = 0; 38 dis[i][knight[i].x][knight[i].y][1] = step(king, knight[i]); 39 queue\u0026lt;pii\u0026gt; q; 40 q.push(knight[i]); 41 while (!q.empty()) { 42 int xx = q.front().x, yy = q.front().y; 43 q.pop(); 44 for (int di = 0; di \u0026lt; 8; di++) { 45 int a = xx + dx[di], b = yy + dy[di]; 46 if (!range({a, b}, R, C)) continue; 47 bool inque = false; 48 if (dis[i][a][b][0] \u0026gt; dis[i][xx][yy][0] + 1) { 49 dis[i][a][b][0] = dis[i][xx][yy][0] + 1; 50 inque = true; 51 } 52 int d = min(dis[i][xx][yy][0] + step(king, {a, b}), 53 dis[i][xx][yy][1]) + 1; 54 if (dis[i][a][b][1] \u0026gt; d) { 55 dis[i][a][b][1] = d; 56 inque = true; 57 } 58 if (inque) q.push({a, b}); 59 } 60 } 61 } 62 int ans = INF; 63 for (int i = 0; i \u0026lt; R; i++) { 64 for (int j = 0; j \u0026lt; C; j++) { 65 int mi = INF, sum = 0; 66 for (int k = 0; k \u0026lt; knight.size(); k++) { 67 sum += dis[k][i][j][0]; 68 mi = min(mi, dis[k][i][j][1] - dis[k][i][j][0]); 69 } 70 ans = min(ans, sum + mi); 71 } 72 } 73 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 74 return 0; 75}  ","date":"2021-02-20T10:12:03+08:00","image":"https://Luke2336.github.io/post/Diary/20210220/1.jpg","permalink":"https://Luke2336.github.io/p/20210220/","title":"2021/02/20 日記"},{"content":"早上媽媽說大黃走了，他們把他埋在公園。\n今天過敏很嚴重，午餐後就吃了藥，睡到五點才醒來，之後就沒什麼流鼻水了，只是腦袋很昏。\n晚上很累，看了一集動畫就睡了。天地創造設計部還滿好看的。\nUSACO  3.3 Shopping Offers  3.3 Shopping Offers  題意：給定 b ≤ 5 種東西及各自的單價和需要的數量 ≤ 5，以及 s ≤ 99 種組合，每種組合包含數種物品、數量及組合價，問能買到剛好所需物品的最低價格為何？ 解法：DP，i 為把 b 種物品的量 hash 起來，DP[i] 表示其最低所需價格。 寫得好醜 QAQ  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, int\u0026gt; pii; 4int num(int id, int state) { 5 for (int i = 0; i \u0026lt; id; i++) state /= 10; 6 return state %= 10; 7} 8int main() { 9 freopen(\u0026#34;shopping.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 10 freopen(\u0026#34;shopping.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 11 ios::sync_with_stdio(0), cin.tie(0); 12 int s; cin \u0026gt;\u0026gt; s; 13 vector\u0026lt;vector\u0026lt;pii\u0026gt; \u0026gt; v(s); 14 vector\u0026lt;int\u0026gt; p(s); 15 for (int i = 0; i \u0026lt; s; i++) { 16 int n; cin \u0026gt;\u0026gt; n; 17 v[i].resize(n); 18 for (int j = 0; j \u0026lt; n; j++) 19 cin \u0026gt;\u0026gt; v[i][j].first \u0026gt;\u0026gt; v[i][j].second; 20 cin \u0026gt;\u0026gt; p[i]; 21 } 22 int b; cin \u0026gt;\u0026gt; b; 23 vector\u0026lt;pii\u0026gt; r(b); 24 vector\u0026lt;int\u0026gt; dp(55556); 25 for (int i = 0; i \u0026lt; b; i++) { 26 int pp; cin \u0026gt;\u0026gt; r[i].first \u0026gt;\u0026gt; r[i].second \u0026gt;\u0026gt; pp; 27 for (int j = dp.size() - 1; j; j--) { 28 int cnt = num(i, j); 29 if (cnt \u0026lt;= r[i].second) dp[j] += cnt * pp; 30 } 31 } 32 int goal = 0; 33 for (int i = b - 1; i \u0026gt;= 0; i--) 34 goal = goal * 10 + r[i].second; 35 for (int i = 0; i \u0026lt; goal; i++) { 36 vector\u0026lt;int\u0026gt; state(b); 37 for (int j = 0; j \u0026lt; b; j++) state[j] = num(j, i); 38 for (int vi = 0; vi \u0026lt; s; vi++) { 39 bool success = true; 40 vector\u0026lt;int\u0026gt; new_state(state.begin(), state.end()); 41 for (pii p : v[vi]) { 42 int id = -1; 43 for (int ii = 0; ii \u0026lt; b; ii++) 44 if (p.first == r[ii].first) id = ii; 45 if (id == -1) success = false; 46 new_state[id] += p.second; 47 } 48 for (int i = 0; i \u0026lt; b; i++) 49 if (new_state[i] \u0026gt; r[i].second) success = false; 50 if (!success) continue; 51 int st = 0; 52 for (int j = b - 1; j \u0026gt;= 0; j--) 53 st = st * 10 + new_state[j]; 54 dp[st] = min(dp[st], dp[i] + p[vi]); 55 } 56 } 57 cout \u0026lt;\u0026lt; dp[goal] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 58 return 0; 59}  ","date":"2021-02-19T10:23:09+08:00","permalink":"https://Luke2336.github.io/p/20210219/","title":"2021/02/19 日記"},{"content":"早上都在陪小白目玩，他舔了我的腳。\n中午搭車國光回新竹，本來小紅巴跑了，但剛好來了 2 路，就花點小錢早點回學校。到宿舍後，整理了一下書桌和冰箱。\n晚上吃了草莓蛋糕，很開心～\nGoogle Drive 100TB  新聞：Google無限空間雲端掰了！明年起校園免費上限100TB 這個政策完全不管機構的大小，全部配額 100TB，對於人數 10000 人的學校，每人不到 10GB 可用。 檢查了一下兩隻帳號，覺得慘慘的，沒有時間整理這麼多雜亂的資料和相片。目前想到的方法是多開幾個帳號，然後將原本的資料壓縮切割後放進一堆帳號，算了一下需要十幾個 QQ     (GB) Drive Photo Gmail     大學 42 9 0.9   高中 105 73.5 0.09    USACO  3.3 Riding the Fences  3.3 Riding the Fences  題意：給定一個 500 個點以內無向的聯通圖，求找出 Euler Path/Circuit。 解法：如果有奇點就從它開始 DFS，否則從編號最小的點開始。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define MAXN 505 4int G[MAXN][MAXN], deg[MAXN]; 5vector\u0026lt;int\u0026gt; ans; 6void solve(int i) { 7 for (int j = 0; j \u0026lt; MAXN \u0026amp;\u0026amp; deg[i]; j++) 8 while (G[i][j]) { 9 deg[j]--, deg[i]--, G[i][j]--, G[j][i]--; 10 solve(j); 11 } 12 ans.push_back(i); 13} 14int main() { 15 freopen(\u0026#34;fence.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 16 freopen(\u0026#34;fence.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 17 int F; cin \u0026gt;\u0026gt; F; 18 for (int i = 0; i \u0026lt; F; i++) { 19 int a, b; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 20 deg[a]++, deg[b]++, G[a][b]++, G[b][a]++; 21 } 22 for (int i = 0; i \u0026lt; MAXN; i++) 23 if (deg[i] \u0026amp; 1) { solve(i); break;} 24 for (int i = 0; i \u0026lt; MAXN; i++) 25 if (deg[i]) { solve(i); break;} 26 for (int i = ans.size() - 1; i \u0026gt;= 0; i--) 27 cout \u0026lt;\u0026lt; ans[i] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 28 return 0; 29}  ","date":"2021-02-19T08:09:48+08:00","image":"https://Luke2336.github.io/post/Diary/20210218/cat1.jpg","permalink":"https://Luke2336.github.io/p/20210218/","title":"2021/02/18 日記"},{"content":"雨很大又很冷。晚餐吃了水餃、醉雞和昨晚剩下的蝦。\n今天也是刷了一天 USACO，覺得莫名的累，腦袋常常覺得脹脹的，於是變得很焦躁沒耐心。\n更新 ~/.bashrc 將 g++ 改成 g++-9 -std=c++17，把礙眼的 warning 減少了。\nCodeforces 更新了 User Profile Profile 多了類似 Github 的區塊，比起隊友我的題數真的好少 QAQ\nUSACO 寫完了 Section 3.2。\n 3.1 Stamps 3.2 Factorials 3.2 Stringsobits 3.2 Spinning Wheels 3.2 Feed Ratios 3.2 Magic Squares 3.2 Sweet Butter  3.1 Stamps  題意：給定 N ≤ 50 種價值的郵票，最大價值 M ≤ 10000，問最多只用 K ≤ 200 種郵票，能湊出的數為 1 ~ 多少？ 解法：DP。狀態 DP[i] 設為湊出 i 需要的最少數量，O(N) 轉移，複雜度為 O(MNK)。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 freopen(\u0026#34;stamps.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 5 freopen(\u0026#34;stamps.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 6 int k, n; cin \u0026gt;\u0026gt; k \u0026gt;\u0026gt; n; 7 vector\u0026lt;int\u0026gt; v(n); 8 int mx = 0; 9 for (int i = 0; i \u0026lt; n; i++) { 10 cin \u0026gt;\u0026gt; v[i]; 11 mx = max(mx, v[i]); 12 } 13 mx *= k; 14 vector\u0026lt;int\u0026gt; dp(mx + 2, k + 1); 15 dp[0] = 0; 16 for (int i = 0; i \u0026lt;= mx; i++) 17 for (int j = 0; j \u0026lt; n; j++) 18 if (i \u0026gt;= v[j]) 19 dp[i] = min(dp[i], dp[i - v[j]] + 1); 20 int ans = 0; 21 for (; dp[ans] \u0026lt;= k; ans++); 22 cout \u0026lt;\u0026lt; ans - 1 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 23 return 0; 24}  3.2 Factorials  題意：給定 N ≤ 4220，問 N! 最右邊的非零數字是多少？ Ex. 7! = 5040 是 4。 解法：只有 2 和 5 會產生 0 結尾，把他們提出來另外處理，其他就不斷相乘模 10，最後將多出的 2 或 5 乘上去模 10，複雜度 O(N log N)。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 freopen(\u0026#34;fact4.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 5 freopen(\u0026#34;fact4.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 6 int n; cin \u0026gt;\u0026gt; n; 7 int ans = 1, two = 0, five = 0; 8 for (int i = 1; i \u0026lt;= n; i++) { 9 int x = i; 10 while (x % 2 == 0) x /= 2, two++; 11 while (x % 5 == 0) x /= 5, five++; 12 ans = ans * x % 10; 13 } 14 for (int i = two; i \u0026lt; five; i++) ans = ans * 5 % 10; 15 for (int i = five; i \u0026lt; two; i++) ans = ans * 2 % 10; 16 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 17 return 0; 18}  3.2 Stringsobits  題意：給定 N ≤ 31，集合 S 包含所有 1-bit ≤ L 個的 N-bit 數，問集合 S 中的第 I 個數？ 解法：遞迴檢查前綴為 s 的數在集合中有幾個，這部分可用排列組合計算，這樣就可以決定每一位要放 0 或 1。C(a, b) 的部分是用不斷消去分子和分母的最大公因數。複雜度為 O(N^4)。要小心 I 最大為 2^31，要用 unsigned int。官方解答用 DP 算出 C(a, b)，複雜度可降到 O(N^2)。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef unsigned int ui; 4string s; 5int C(int a, int b) { 6 if (a \u0026lt; b) return 0; 7 vector\u0026lt;int\u0026gt; up, down; 8 for (int i = a; i \u0026gt; b; i--) up.push_back(i); 9 for (int i = a - b; i \u0026gt; 1; i--) down.push_back(i); 10 for (int i = 0; i \u0026lt; down.size(); i++) { 11 for (int j = 0; j \u0026lt; up.size(); j++) { 12 int g = __gcd(down[i], up[j]); 13 down[i] /= g, up[j] /= g; 14 } 15 } 16 int ret = 1; 17 for (int x : up) ret *= x; 18 return ret; 19} 20void solve(int len, int cnt, ui id) { 21 if (!len) return; 22 ui f = 0; 23 for (int i = cnt; i \u0026gt;= 0; i--) f += C(len - 1, i); 24 if (f \u0026lt; id) { 25 s += \u0026#39;1\u0026#39;; 26 solve(len - 1, cnt - 1, id - f); 27 } else { 28 s += \u0026#39;0\u0026#39;; 29 solve(len - 1, cnt, id); 30 } 31} 32int main() { 33 freopen(\u0026#34;kimbits.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 34 freopen(\u0026#34;kimbits.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 35 int N, L; ui I; cin \u0026gt;\u0026gt; N \u0026gt;\u0026gt; L \u0026gt;\u0026gt; I; 36 solve(N, L, I); 37 cout \u0026lt;\u0026lt; s \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 38 return 0; 39}  3.2 Spinning Wheels  讀題讀了很久，最後直接 Google 中文翻譯。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, int\u0026gt; pii; 4int main() { 5 freopen(\u0026#34;spin.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 6 freopen(\u0026#34;spin.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 7 int speed[5]; 8 vector\u0026lt;pii\u0026gt; w[5]; 9 for (int i = 0; i \u0026lt; 5; i++) { 10 int x; cin \u0026gt;\u0026gt; speed[i] \u0026gt;\u0026gt; x; 11 w[i].resize(x); 12 for (int j = 0; j \u0026lt; x; j++) { 13 cin \u0026gt;\u0026gt; w[i][j].first \u0026gt;\u0026gt; w[i][j].second; 14 w[i][j].second += w[i][j].first; 15 } 16 } 17 int ans = -1; 18 for (int t = 0; t \u0026lt; 360 \u0026amp;\u0026amp; ans == -1; t++) { 19 int check[360] = {}; 20 for (int i = 0; i \u0026lt; 5; i++) 21 for (pii p : w[i]) 22 for (int j = p.first; j \u0026lt;= p.second; j++) 23 check[(j + t * speed[i]) % 360]++; 24 for (int i = 0; i \u0026lt; 360; i++) 25 if (check[i] == 5) {ans = t; break;} 26 } 27 if (ans == -1) cout \u0026lt;\u0026lt; \u0026#34;none\\n\u0026#34;; 28 else cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 29 return 0; 30}  3.2 Feed Ratios  暴力枚舉題。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 freopen(\u0026#34;ratios.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 5 freopen(\u0026#34;ratios.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 6 int mi = 1000; 7 int a[4][3]; 8 for (int i = 0; i \u0026lt; 4; i++) 9 for (int j = 0; j \u0026lt; 3; j++) 10 cin \u0026gt;\u0026gt; a[i][j]; 11 int c[4], ans[4]; 12 for (c[1] = 0; c[1] \u0026lt; 100; ++c[1]) { 13 for (c[2] = 0; c[2] \u0026lt; 100; ++c[2]) { 14 for (c[3] = 0; c[3] \u0026lt; 100; ++c[3]) { 15 int cnt[3] = {}, t[3]; 16 bool f = true; 17 int mx = 0; 18 for (int i = 0; i \u0026lt; 3; i++) { 19 for (int j = 1; j \u0026lt;= 3; j++) cnt[i] += c[j] * a[j][i]; 20 if (!a[0][i] \u0026amp;\u0026amp; !cnt[i]) t[i] = 0; 21 else if ((!a[0][i] \u0026amp;\u0026amp; cnt[i]) || cnt[i] % a[0][i]) f = false; 22 else if (a[0][i]) t[i] = cnt[i] / a[0][i]; 23 else t[i] = 0; 24 mx = max(mx, t[i]); 25 } 26 for (int i = 0; i \u0026lt; 3; i++) 27 if (mx * a[0][i] != cnt[i]) 28 f = false; 29 if (f \u0026amp;\u0026amp; (c[0] + c[1] + c[2])) 30 if (mi \u0026gt; c[0] + c[1] + c[2]) 31 mi = c[0] + c[1] + c[2], 32 ans[0] = mx, ans[1] = c[1], 33 ans[2] = c[2], ans[3] = c[3]; 34 35 } 36 } 37 } 38 if (mi \u0026lt; 1000) { 39 for (int i = 1; i \u0026lt; 4; i++) cout \u0026lt;\u0026lt; ans[i] \u0026lt;\u0026lt; \u0026#34; \u0026#34;; 40 cout \u0026lt;\u0026lt; ans[0] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 41 } 42 else cout \u0026lt;\u0026lt; \u0026#34;NONE\\n\u0026#34;; 43 return 0; 44}  3.2 Magic Squares  題意：給定一個由 1 ~ 8 組成的 4 x 2 矩陣，及三種循環操作，求產生目標矩陣的最小操作數方法為何？ 解法：BFS，因為狀態最多 8! 種，將狀態用 8 位整數儲存到 map 裡。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int c[3][8] = {{4, 5, 6, 7, 0, 1, 2, 3}, 4 {3, 0, 1, 2, 7, 4, 5, 6}, 5 {0, 5, 1, 3, 4, 6, 2, 7}}; 6char ch[4] = \u0026#34;ABC\u0026#34;; 7int change(int x, int r) { 8 int a[8] = {}; 9 for (int i = 0; i \u0026lt; 8; i++) { 10 a[7 - i] = x % 10; 11 x /= 10; 12 } 13 int ret = 0; 14 for (int i = 0; i \u0026lt; 8; i++) ret = ret * 10 + a[c[r][i]]; 15 return ret; 16} 17int main() { 18 freopen(\u0026#34;msquare.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 19 freopen(\u0026#34;msquare.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 20 int goal = 0; 21 int a[8]; 22 for (int i = 0; i \u0026lt; 8; i++) cin \u0026gt;\u0026gt; a[i]; 23 for (int i = 0; i \u0026lt; 4; i++) goal = goal * 10 + a[i]; 24 for (int i = 7; i \u0026gt;= 4; i--) goal = goal * 10 + a[i]; 25 map\u0026lt;int, string\u0026gt; m; 26 queue\u0026lt;int\u0026gt; state; 27 state.push(12348765); 28 m[12348765] = \u0026#34;\u0026#34;; 29 while (!state.empty()) { 30 int s = state.front(); state.pop(); 31 if (s == goal) break; 32 for (int i = 0; i \u0026lt; 3; i++) { 33 int ss = change(s, i); 34 if (m.find(ss) != m.end()) continue; 35 m[ss] = m[s] + ch[i]; 36 state.push(ss); 37 } 38 } 39 cout \u0026lt;\u0026lt; m[goal].length() \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34; \u0026lt;\u0026lt; m[goal] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 40 return 0; 41}  3.2 Sweet Butter  題意：給定 N ≤ 500 頭牛，共有 P ≤ 800 個農場和 C ≤ 1450 條路，問要將集合點設在哪，才能使牛隻們走的總距離最小？ 解法：以每個點當起點做一次最短路，這邊用 Dijkstra，總複雜度 O(PC log C)。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, int\u0026gt; pii; 4const int INF = 2000000000; 5int main() { 6 freopen(\u0026#34;butter.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 7 freopen(\u0026#34;butter.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 8 int n, p, c; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; p \u0026gt;\u0026gt; c; 9 vector\u0026lt;int\u0026gt; v(n); 10 vector\u0026lt;vector\u0026lt;pii\u0026gt; \u0026gt; G(p + 1); 11 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; v[i]; 12 while (c--) { 13 int a, b, w; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; w; 14 G[a].push_back(pii(w, b)); 15 G[b].push_back(pii(w, a)); 16 } 17 int ans = INF; 18 for (int i = 1; i \u0026lt;= p; i++) { 19 vector\u0026lt;int\u0026gt; dis(p + 1, INF); 20 priority_queue\u0026lt;pii, vector\u0026lt;pii\u0026gt;, greater\u0026lt;pii\u0026gt; \u0026gt; pq; 21 dis[i] = 0, pq.push(pii(0, i)); 22 while (!pq.empty()) { 23 int u = pq.top().second; pq.pop(); 24 for (pii e : G[u]) { 25 int uu = e.second, w = e.first; 26 if (dis[uu] \u0026gt; dis[u] + w) { 27 dis[uu] = dis[u] + w; 28 pq.push(pii(dis[uu], uu)); 29 } 30 } 31 } 32 int cnt = 0; 33 for (int x : v) cnt += dis[x]; 34 ans = min(ans, cnt); 35 } 36 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 37 return 0; 38}  胡思亂想 早上夢到了在排球場上打羽球，結果因為陽光太刺眼，都看不到球，一直被隊友罵。\n醒過來時，有些想念大一時，常常在打球時稱讚我的學長，「好球」，間單一句話卻帶給我很大的信心。\n從小就發現，自己其實很需要人稱讚，很需要有人鼓勵。\n去年底，隊友對我很不信任，其實讓我很難過，也有點生氣。我很需要有人鼓勵，但卻又不願意告訴別人，於是被自己的個性所困，或許我應該學習怎麼自己給自己鼓勵。期待自己也能給自己的伴侶鼓勵，更期待能互相鼓勵，讓彼此的生活都更舒適。\n","date":"2021-02-17T09:59:41+08:00","permalink":"https://Luke2336.github.io/p/20210217/","title":"2021/02/17 日記"},{"content":"今天又變冷了，睡到 11 點半才起床，弟弟已經回台北了。今天一整天都在刷 USACO，傍晚又睡了午覺，晚餐吃了醉雞和蝦。\nUSACO 寫完 Section 2.4 了，完成了 Chapter 2，希望這週能將 Chapter 3 刷完。\n 2.4 Cow Tours 2.4 Bessie Come Home 2.4 Fractions to Decimals 3.1 Agri-Net 3.1 Score Inflation 3.1 Humble Numbers 3.1 Contact  2.4 Cow Tours  題意：給定一個大小為 N ≤ 150 的圖，這個圖為加上一條邊可聯通的非聯通圖。問加上一條邊後的最小直徑（diameter）為多少。 解法：先做一次 Floyd-Warshall 算出枚舉加入 (i, j)，i、j 兩聯通塊和 i、j 最遠的點距和 i、j 的距離相加，再和未聯通前的最大直徑比較。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3const double INF = 40000000; 4inline double dst(int x, int y, int xx, int yy) { 5 double dx = x - xx, dy = y - yy; 6 return sqrt(dx * dx + dy * dy); 7} 8int main() { 9 freopen(\u0026#34;cowtour.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 10 freopen(\u0026#34;cowtour.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 11 ios::sync_with_stdio(0), cin.tie(0); 12 int n; cin \u0026gt;\u0026gt; n; 13 vector\u0026lt;int\u0026gt; x(n), y(n); 14 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; x[i] \u0026gt;\u0026gt; y[i]; 15 vector\u0026lt;string\u0026gt; m(n); 16 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; m[i]; 17 vector\u0026lt;vector\u0026lt;double\u0026gt; \u0026gt; dis(n, vector\u0026lt;double\u0026gt;(n, 0)); 18 for (int i = 0; i \u0026lt; n; i++) 19 for (int j = i + 1; j \u0026lt; n; j++) 20 dis[i][j] = dis[j][i] = dst(x[i], y[i], x[j], y[j]); 21 vector\u0026lt;vector\u0026lt;double\u0026gt; \u0026gt; dp(n, vector\u0026lt;double\u0026gt;(n, INF)); 22 for (int i = 0; i \u0026lt; n; i++) { 23 dp[i][i] = 0; 24 for (int j = i + 1; j \u0026lt; n; j++) 25 if (m[i][j] == \u0026#39;1\u0026#39;) dp[i][j] = dp[j][i] = dis[i][j]; 26 } 27 for (int i = 0; i \u0026lt; n; i++) 28 for (int j = 0; j \u0026lt; n; j++) 29 for (int k = 0; k \u0026lt; n; k++) 30 dp[j][k] = min(dp[j][k], dp[j][i] + dp[i][k]); 31 vector\u0026lt;double\u0026gt; far(n, 0); 32 for (int i = 0; i \u0026lt; n; i++) 33 for (int j = 0; j \u0026lt; n; j++) 34 if (dp[i][j] + 1 \u0026lt; INF) 35 far[i] = max(far[i], dp[i][j]); 36 double ans = INF; 37 for (int i = 0; i \u0026lt; n; i++) 38 for (int j = i + 1; j \u0026lt; n; j++) 39 if (dp[i][j] + 1 \u0026gt; INF) 40 ans = min(ans, far[i] + far[j] + dis[i][j]); 41 for (int i = 0; i \u0026lt; n; i++) ans = max(ans, far[i]); 42 cout \u0026lt;\u0026lt; fixed \u0026lt;\u0026lt; setprecision(6) \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 43 return 0; 44}  2.4 Bessie Come Home  題意：共有 A ~ Y 和 a ~ z 這些牧場，每個大寫字母的牧場都有一隻牛，給定 P ≤ 10000 條道路，問距離 Z 最近的牧場為何？ 解法：Dijkstra 找最短距離，O(P log P)。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, int\u0026gt; pii; 4const int INF = 100000000; 5inline int id(char c) { 6 if (isupper(c)) return c - \u0026#39;A\u0026#39;; 7 return c - \u0026#39;a\u0026#39; + 26; 8} 9int main() { 10 freopen(\u0026#34;comehome.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 11 freopen(\u0026#34;comehome.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 12 int m; cin \u0026gt;\u0026gt; m; 13 vector\u0026lt;vector\u0026lt;pii\u0026gt; \u0026gt; G(52); 14 while (m--) { 15 char a, b; int w; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; w; 16 G[id(a)].push_back(pii(w, id(b))); 17 G[id(b)].push_back(pii(w, id(a))); 18 } 19 vector\u0026lt;int\u0026gt; dis(52, INF); 20 dis[id(\u0026#39;Z\u0026#39;)] = 0; 21 priority_queue\u0026lt;pii, vector\u0026lt;pii\u0026gt;, greater\u0026lt;pii\u0026gt; \u0026gt; pq; 22 pq.push(pii(0, id(\u0026#39;Z\u0026#39;))); 23 while (!pq.empty()) { 24 int u = pq.top().second; pq.pop(); 25 if (u \u0026lt; 25) { 26 cout \u0026lt;\u0026lt; char(u + \u0026#39;A\u0026#39;) \u0026lt;\u0026lt; \u0026#39; \u0026#39; \u0026lt;\u0026lt; dis[u] \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 27 return 0; 28 } 29 for (pii e : G[u]) { 30 int uu = e.second, w = e.first; 31 if (dis[uu] \u0026gt; dis[u] + w) { 32 dis[uu] = dis[u] + w; 33 pq.push(pii(dis[uu], uu)); 34 } 35 } 36 } 37 return 0; 38}  2.4 Fractions to Decimals  題意：給定 N 和 D ≤ 100000，求 N / Q 的循環小數表示。 解法：當餘數重複出現，則表示出現循環，餘數至多 D 種，所以複雜度 O(D)。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3inline char dec(int x) {return x + \u0026#39;0\u0026#39;;} 4string str(int x) { 5 string s = \u0026#34;\u0026#34;; 6 while (x) { 7 s += char(x % 10 + \u0026#39;0\u0026#39;); 8 x /= 10; 9 } 10 reverse(s.begin(), s.end()); 11 return s; 12} 13void print(string s) { 14 for (int i = 0; s[i]; i++) { 15 cout \u0026lt;\u0026lt; s[i]; 16 if (i % 76 == 75 || i == s.length() - 1) 17 cout \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 18 } 19} 20int main() { 21 freopen(\u0026#34;fracdec.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 22 freopen(\u0026#34;fracdec.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 23 ios::sync_with_stdio(0), cin.tie(0); 24 int N, D; cin \u0026gt;\u0026gt; N \u0026gt;\u0026gt; D; 25 int Q = N / D; 26 if (!N) { 27 cout \u0026lt;\u0026lt; Q \u0026lt;\u0026lt; \u0026#34;.0\\n\u0026#34;; 28 return 0; 29 } 30 N %= D; 31 vector\u0026lt;int\u0026gt; q, r; 32 vector\u0026lt;int\u0026gt; vst(D + 1, -1); 33 r.push_back(N), vst[N] = 0; 34 while (N) { 35 q.push_back(N * 10 / D); 36 r.push_back(N * 10 % D); 37 N = r.back(); 38 if (vst[N] != -1) break; 39 vst[N] = q.size(); 40 } 41 string ans = Q ? str(Q) : \u0026#34;0\u0026#34;; 42 ans += \u0026#34;.\u0026#34;; 43 int rep = vst[r.back()]; 44 for (int i = 0; i \u0026lt; rep; i++) ans += dec(q[i]); 45 if (rep != r.size() - 1) { 46 ans += \u0026#34;(\u0026#34;; 47 for (int i = rep; i \u0026lt; q.size(); i++) 48 ans += dec(q[i]); 49 ans += \u0026#34;)\u0026#34;; 50 } 51 print(ans); 52 return 0; 53}  3.1 Agri-Net  題意：給 N ≤ 100 的 Adjacency Matrix，求 MST。 解法：做 Prim，複雜度 O(N^2)。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define MAXN 105 4#define INF 100000000 5int main() { 6 freopen(\u0026#34;agrinet.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 7 freopen(\u0026#34;agrinet.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 8 int n; cin \u0026gt;\u0026gt; n; 9 int G[MAXN][MAXN]; 10 for (int i = 0; i \u0026lt; n; i++) 11 for (int j = 0; j \u0026lt; n; j++) 12 cin \u0026gt;\u0026gt; G[i][j]; 13 int dis[MAXN] = {}; 14 for (int i = 1; i \u0026lt; n; i++) dis[i] = INF; 15 bool visit[MAXN] = {}; 16 int ans = 0; 17 for (int i = 0; i \u0026lt; n; i++) { 18 int u = 0, mx = INF; 19 for (int j = 1; j \u0026lt; n; j++) 20 if (!visit[j] \u0026amp;\u0026amp; dis[j] \u0026lt; mx) 21 u = j, mx = dis[j]; 22 visit[u] = true; 23 ans += dis[u]; 24 for (int i = 0; i \u0026lt; 100; i++) 25 dis[i] = min(dis[i], G[u][i]); 26 } 27 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 28 return 0; 29}  3.1 Score Inflation  題意：裸的無限背包。 解法：DP，O(MN)。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define MAXM 10005 4int main() { 5 freopen(\u0026#34;inflate.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 6 freopen(\u0026#34;inflate.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 7 int M, N; cin \u0026gt;\u0026gt; M \u0026gt;\u0026gt; N; 8 int dp[MAXM] = {}; 9 while (N--) { 10 int w, t; cin \u0026gt;\u0026gt; w \u0026gt;\u0026gt; t; 11 for (int i = t; i \u0026lt;= M; i++) 12 dp[i] = max(dp[i], dp[i - t] + w); 13 } 14 cout \u0026lt;\u0026lt; dp[M] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 15 return 0; 16}  3.1 Humble Numbers  題意：給定一個大小為 K ≤ 100 的質數集合，問第 N ≤ 100000 個質因數只有集合裡元素的數為何（不含 1）？ 解法：如果用 priority_queue 會 MLE，用 set 會 TLE。用了 DP，不斷計算每個因數目前被用到最大的數為何，複雜度 O(NK)。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 freopen(\u0026#34;humble.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 5 freopen(\u0026#34;humble.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 6 int K, N; cin \u0026gt;\u0026gt; K \u0026gt;\u0026gt; N; 7 vector\u0026lt;int\u0026gt; v(K); 8 for (int i = 0; i \u0026lt; K; i++) cin \u0026gt;\u0026gt; v[i]; 9 vector\u0026lt;int\u0026gt; dp(N + 1); 10 dp[0] = 1; 11 vector\u0026lt;int\u0026gt; p(K); 12 for (int i = 1; i \u0026lt;= N; i++) { 13 dp[i] = dp[p[0]] * v[0]; 14 for (int j = 1; j \u0026lt; K; j++) 15 dp[i] = min(dp[i], dp[p[j]] * v[j]); 16 for (int j = 0; j \u0026lt; K; j++) 17 if (dp[i] == dp[p[j]] * v[j]) p[j]++; 18 } 19 cout \u0026lt;\u0026lt; dp[N] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 20 return 0; 21}  3.1 Contact  題意：給定 1 ≤ a ≤ b ≤ 12 和 1 ≤ N ≤ 50，以及一個長度最長 200000 的 0/1 字串 S，問長度介於 [a, b] 的 0/1 字串和 S 有多少 match 次數，列出前 N 大的頻率的所有字串。 解法：將所有長度為 [a, b] 的子字串前綴加上 1 後 hash 丟進 map 計算次數，O(b|S|)。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, string\u0026gt; pis; 4typedef pair\u0026lt;int, pis\u0026gt; piis; 5int a, b; 6string p; 7vector\u0026lt;piis\u0026gt; ans; 8int mp[(1 \u0026lt;\u0026lt; 13)]; 9void substring(string s) { 10 for (int r = a; r \u0026lt;= b; r++) { 11 int mask = 1 \u0026lt;\u0026lt; r, now = 0; 12 for (int i = 0; s[i]; i++) { 13 now = ((now \u0026lt;\u0026lt; 1) | (s[i] - \u0026#39;0\u0026#39;)) \u0026amp; (mask - 1); 14 if (i \u0026gt;= r - 1) mp[now | mask]++; 15 } 16 } 17} 18void solve(int len) { 19 int pat = 0; 20 for (int i = 0; p[i]; i++) pat = (pat \u0026lt;\u0026lt; 1) | (p[i] - \u0026#39;0\u0026#39;); 21 pat |= (1 \u0026lt;\u0026lt; len); 22 if (a \u0026lt;= len \u0026amp;\u0026amp; mp[pat]) 23 ans.push_back(piis(-mp[pat], pis(len, p))); 24 if (len \u0026gt;= b) return; 25 p += \u0026#39;0\u0026#39;; solve(len + 1); p.pop_back(); 26 p += \u0026#39;1\u0026#39;; solve(len + 1); p.pop_back(); 27} 28int main() { 29 freopen(\u0026#34;contact.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 30 freopen(\u0026#34;contact.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 31 ios::sync_with_stdio(0), cin.tie(0); 32 int n; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; n; 33 string s, ss; 34 while (cin \u0026gt;\u0026gt; ss) s += ss; 35 substring(s); 36 solve(0); 37 sort(ans.begin(), ans.end()); 38 int sz = ans.size(); 39 for (int i = 0, j = 0; i \u0026lt; n \u0026amp;\u0026amp; j \u0026lt; sz; i++) { 40 int f = ans[j].first; 41 cout \u0026lt;\u0026lt; -f \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 42 vector\u0026lt;string\u0026gt; tmp; 43 for (; ans[j].first == f \u0026amp;\u0026amp; j \u0026lt; sz; j++) 44 tmp.push_back(ans[j].second.second); 45 for (int k = 0; k \u0026lt; tmp.size(); k++) 46 cout \u0026lt;\u0026lt; tmp[k] \u0026lt;\u0026lt; \u0026#34; \\n\u0026#34;[k % 6 == 5 || k == tmp.size() - 1]; 47 } 48 return 0; 49}  ","date":"2021-02-16T13:46:37+08:00","permalink":"https://Luke2336.github.io/p/20210216/","title":"2021/02/16 日記"},{"content":"大湖公園、南港車站 下午搭火車去南港，搭捷運去大湖公園散步，野餐的人很多。之後去南港車站吃飯，去 2F 的蔦屋書店看書，然後搭火車回家。\nUSACO  2.4 The Tamworth Two 2.4 Overfencing  2.4 The Tamworth Two  題意：給定一個 10 x 10 的地圖，Farmer 和 Cow 以同樣的方式行走，他們一開始皆面向北，每分鐘可行走一步，當遇到障礙物時，則花一分鐘順時鐘轉 90 度，請問要多久兩者才會相遇在同一格？若不相遇則輸出 0。 解法：模擬。最多有 10 x 10 x 4 = 400 種狀態，兩者則有 400 x 400 = 160000 種狀態，若他們並未相遇，則不可能會相遇。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3char board[12][12]; 4const int dx[4] = {-1, 0, 1, 0}, dy[4] = {0, 1, 0, -1}; 5struct state { 6 int x, y, d; 7 state() {d = 0;} 8 state(int _x, int _y, int _d) { 9 x = _x, y = _y, d = _d; 10 } 11}; 12inline bool same(state A, state B) { 13 return A.x == B.x \u0026amp;\u0026amp; A.y == B.y; 14} 15inline bool ob(int i, int j) { 16 return !board[i][j] || board[i][j] == \u0026#39;*\u0026#39;; 17} 18state next_state(state S) { 19 int xx = S.x + dx[S.d], yy = S.y + dy[S.d]; 20 if (ob(xx, yy)) return state(S.x, S.y, (S.d + 1) % 4); 21 return state(xx, yy, S.d); 22} 23int main() { 24 freopen(\u0026#34;ttwo.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 25 freopen(\u0026#34;ttwo.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 26 state F, C; 27 for (int i = 1; i \u0026lt;= 10; i++) { 28 scanf(\u0026#34; %s\u0026#34;, board[i] + 1); 29 for (int j = 1; j \u0026lt;= 10; j++) 30 if (board[i][j] == \u0026#39;F\u0026#39;) F.x = i, F.y = j; 31 else if (board[i][j] == \u0026#39;C\u0026#39;) C.x = i, C.y = j; 32 } 33 for (int i = 0; i \u0026lt;= 160000; i++) { 34 if (same(F, C)) { 35 cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 36 return 0; 37 } 38 F = next_state(F), C = next_state(C); 39 } 40 cout \u0026lt;\u0026lt; \u0026#34;0\\n\u0026#34;; 41 return 0; 42}  2.4 Overfencing  題意：給定一個 W x H 的地圖，W ≤ 38，H ≤ 100，最外面有兩個柵欄是開的，每個格子都能走到外圍，問離外圍最遠的格子有多遠？ 解法：從外圍的點開始 BFS，複雜度 O(WH)。小技巧是在最外圍加上一圈障礙物，就不會 BFS 超出陣列範圍。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3const int dx[4] = {0, 0, 1, -1}, dy[4] = {1, -1, 0, 0}; 4int main() { 5 freopen(\u0026#34;maze1.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 6 freopen(\u0026#34;maze1.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 7 int w, h; cin \u0026gt;\u0026gt; w \u0026gt;\u0026gt; h; cin.ignore(); 8 char c[205][80]; 9 memset(c, \u0026#39;.\u0026#39;, sizeof(c)); // 加上障礙物 10 for (int i = 2; i \u0026lt;= 2 * h + 2; i++) 11 cin.getline(c[i] + 2, 2 * w + 2); 12 int vst[205][80]; 13 memset(vst, -1, sizeof(vst)); // 設為沒走過 14 queue\u0026lt;int\u0026gt; qx, qy; 15 // 放入外圈的點 16 for (int i = 1; i \u0026lt;= 2 * w + 3; i++) { 17 c[1][i] = c[2 * h + 3][i] = \u0026#39; \u0026#39;; 18 vst[1][i] = vst[2 * h + 3][i] = 0; 19 qx.push(1), qy.push(i); 20 qx.push(2 * h + 3), qy.push(i); 21 } 22 for (int i = 1; i \u0026lt;= 2 * h + 3; i++) { 23 c[i][1] = c[i][2 * w + 3] = \u0026#39; \u0026#39;; 24 vst[i][1] = vst[i][2 * w + 3] = 0; 25 qx.push(i), qy.push(1); 26 qx.push(i), qy.push(2 * w + 3); 27 } 28 int mx = 0; 29 // BFS 30 while (!qx.empty()) { 31 int x = qx.front(); qx.pop(); 32 int y = qy.front(); qy.pop(); 33 mx = vst[x][y]; // 最後走到的點就是答案 34 for (int d = 0; d \u0026lt; 4; d++) { 35 int xx = dx[d] + x, yy = dy[d] + y; 36 // 遇到障礙物或走過的點就跳過 37 if (c[xx][yy] != \u0026#39; \u0026#39; || vst[xx][yy] != -1) continue; 38 vst[xx][yy] = vst[x][y] + 1; 39 qx.push(xx), qy.push(yy); 40 } 41 } 42 cout \u0026lt;\u0026lt; mx / 2 \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 43 return 0; 44}  ","date":"2021-02-15T11:00:39+08:00","image":"https://Luke2336.github.io/post/Diary/20210215/1.jpg","permalink":"https://Luke2336.github.io/p/20210215/","title":"2021/02/15 日記"},{"content":" Learn Kotlin by Example (kotlinlang.org)  Output println() 1fun main() { 2 println(\u0026#34;Hello, World!\u0026#34;) 3} Function fun 1fun sum(x: Int, y: Int): Int { 2 return x + y 3} 4 5// Single-Expression 6fun mul(x: Int, y: Int) = x * y 7 8// Default Arguments 9fun printMSG (msg1: String = \u0026#34;Hello\u0026#34;, msg2: String) { 10 println(\u0026#34;$msg1, $msg2!\u0026#34;) 11} 12 13fun main() { 14 println(sum(1, 2)) 15 println(mul(2, 5)) 16 printMSG(\u0026#34;Hi\u0026#34;, \u0026#34;Jack\u0026#34;) 17 printMSG(msg2 = \u0026#34;Kelly\u0026#34;) 18} vararg 1fun sum(vararg a: Int): Int { 2 var ret = 0 3 for (x in a) ret = ret + x 4 return ret 5} 6 7fun main() { 8 println(sum(1, 0, -1, 2)) 9} Variable val var  val 一定要初始化  1fun main() { 2 val v = 1 // immutalbe 3 var x: Int // mutable 4 x = 1 5 println(x + v) 6} null  用 ? 代表 nullable  1fun main() { 2 var notNull: String = \u0026#34;Hi!\u0026#34; 3 // notNull = null // error 4 var canNull: String? = \u0026#34;Hello!\u0026#34; 5 canNull = null 6 7 fun len(s: String) = println(s.length) 8 9 len(notNull) 10 // len(canNull) // error 11 canNull = \u0026#34;OAO\u0026#34; 12 len(canNull) 13 14 fun nullLen(s: String?) { 15 var L:Int = 0 16 if (s != null) L = s.length 17 println(L) 18 } 19 20 canNull = null 21 nullLen(canNull) 22} Flow Control when 類似 c++ 中的 switch。\n1fun cases(obj: Any) { 2 when (obj) { 3 1 -\u0026gt; println(\u0026#34;One\u0026#34;) 4 is String -\u0026gt; println(\u0026#34;String\u0026#34;) 5 else -\u0026gt; println(\u0026#34;Else\u0026#34;) 6 } 7} 8 9fun main() { 10 cases(1) 11 cases(1.0) 12 cases(\u0026#34;a\u0026#34;) 13} for 1fun main() { 2 val L = listOf(\u0026#34;apple\u0026#34;, \u0026#34;banana\u0026#34;, \u0026#34;orange\u0026#34;) 3 for (x in L) { 4 println(\u0026#34;I like $x.\u0026#34;) 5 } 6} 1fun main() { 2 for (i in 0..3) print(i) //0123 3 println(\u0026#34;\u0026#34;) 4 for (i in 0..8 step 2) print(i) //02468 5 println(\u0026#34;\u0026#34;) 6 for (i in 3 downTo 0) print(i) //3210 7 println(\u0026#34;\u0026#34;) 8 for (i in 8 downTo 0 step 2) print(i) //86420 9 println(\u0026#34;\u0026#34;) 10} while 1fun main() { 2 var i = 0 3 var sum = 0 4 while (i \u0026lt; 5) { 5 sum += i 6 i++ 7 } 8 println(sum) 9} if 1fun main() { 2 val x = \u0026#39;t\u0026#39; 3 if (x in \u0026#39;a\u0026#39;..\u0026#39;e\u0026#39;) 4 println(\u0026#34;Good\u0026#34;) 5 else 6 println(\u0026#34;Bad\u0026#34;) 7} Collections List  MutableList, List mutableListOf(), listOf() add() getOrNull(), getOrElse()  1fun main() { 2 val L: List\u0026lt;Int\u0026gt; = listOf(1, 2, 3) 3 var mL: MutableList\u0026lt;Int\u0026gt; = mutableListOf(0) 4 L.forEach { 5 x -\u0026gt; mL.add(x) 6 } 7 mL.forEach { 8 i -\u0026gt; println(\u0026#34;elemetn: $i\u0026#34;) 9 } 10 println(\u0026#34;L[2] = ${L.getOrNull(2)}\u0026#34;) // 3 11 println(\u0026#34;L[3] = ${L.getOrNull(3)}\u0026#34;) // null 12 println(\u0026#34;L[10] = ${L.getOrElse(10, {it})}\u0026#34;) // 10 13 println(\u0026#34;${L.subList(1, 2)}\u0026#34;) // [2] 14} Search \u0026amp; Sort  sort(), shuffle(), reverse() indexOf(), lastIndexOf() indexOfFirst(), indexOfLast() binarySearch() fill()  1fun main() { 2 var mL: MutableList\u0026lt;Int\u0026gt; = mutableListOf(2, 1, 7, 5, 9, 1) 3 println(mL.indexOf(1)) // 1 4 println(mL.lastIndexOf(1)) // 5 5 mL.sort() // [1, 1, 2, 5, 7, 9] 6 println(mL.indexOf(1)) // 0 7 println(mL.lastIndexOf(1)) // 1 8 println(mL.indexOfFirst{ it \u0026gt; 5 }) // 4 9 println(mL.binarySearch(3)) // -4 10 println(mL.binarySearch(1, 1, 5)) // 1 11 mL.fill(0) 12 println(mL) // [0, 0, 0, 0, 0, 0] 13} Set  Set, MutableSet setOf(), mutableSetOf() add(): return Boolean intersect(), union(), subtract()  1fun main() { 2 val S1: Set\u0026lt;Int\u0026gt; = setOf(4, 3, 2, 1) 3 val S2: Set\u0026lt;Int\u0026gt; = setOf(1, 2, 3, 4) 4 println(\u0026#34;Two sets are equal: ${S1 == S2}\u0026#34;) // true 5 val S3: Set\u0026lt;Int\u0026gt; = setOf(0, 2, 4, 6) 6 println(\u0026#34;S2 union S3: ${S2 union S3}\u0026#34;) // [1, 2, 3, 4, 0, 6] 7 println(\u0026#34;S2 intersect S3: ${S2 intersect S3}\u0026#34;) // [2, 4] 8 println(\u0026#34;S2 subtract S3: ${S2 subtract S3}\u0026#34;) // [1, 3] 9 println(\u0026#34;S3 subtract S2: ${S3 subtract S2}\u0026#34;) // [0, 6] 10 println(\u0026#34;S1 subtract S2: ${S1 subtract S2}\u0026#34;) // [] 11 var S4: MutableSet\u0026lt;Int\u0026gt; = mutableSetOf(1, 2, 3, 4) 12 println(\u0026#34;${S4.add(0)}\u0026#34;) // true 13 println(\u0026#34;${S4.add(1)}\u0026#34;) // false 14} ","date":"2021-02-14T17:14:36+08:00","permalink":"https://Luke2336.github.io/p/hello_kotlin/","title":"Hello, Kotlin!"},{"content":"今天是情人節，帶外婆去東北角走走，看風景。\n早上研究了一下 Kotlin 的 List 和 Set。\n中午原本要去淡水，但在萬瑞(62)就塞車放棄了，改往宜蘭。\n晚上在礁溪玉清溫泉前面的熱炒店吃飯，菜色選擇很少，價位偏高。\n塞車在福隆塞很久。\n黃金瀑布 人還是很多，水量算是充沛。\n三貂角燈塔 雷達站尚在整修，風很大。\n在極東點俯瞰馬崗。\n","date":"2021-02-14T10:07:12+08:00","image":"https://Luke2336.github.io/post/Diary/20210214/3.jpg","permalink":"https://Luke2336.github.io/p/20210214/","title":"2021/02/14 日記"},{"content":"貓咪 早上去餵小乖和小咪。\n七堵友蚋、石公潭、萬崁路 石公潭、附近的礦坑\n萬崁路上的一心宮門口的櫻花樹。\n萬里、龜吼漁港 買了某店的芋圓，沒幾個客人卻等了超過 10 分鐘，60 元一碗，只有 4 顆芋圓，紅豆湯顏色也偏淡\u0026hellip;老闆不斷問客人好不好吃，但大家好像都不想回答。從小吃九份芋圓長大的我，只能說應該主要是做觀光客生意。\n之後去龜吼漁港吃了巧晏漁坊，第一次吃，覺得相對別家價格較低，口味也不錯，雖然生意有點好，位子很小。點了油雞、蝦、海瓜子，都覺得不錯。\nUSACO 寫完 Section 2.3。\n 2.3 Longest Prefix 2.3 Cow Pedigrees 2.3 Zero Sum 2.3 Money Systems 2.3 Controlling Companies  2.3 Longest Prefix  題意：給定一個字串集合，大小 n ≤ 200，元素長度小魚 L ≤ 10，以及一個字串 S。問能用集合中元素組成的最長 S 前綴有多長？ 解法：DP，O(nL|S|)。  1/* 2ID: whitech1 3TASK: prefix 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8int main() { 9 freopen(\u0026#34;prefix.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 10 freopen(\u0026#34;prefix.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 11 string tmp; 12 vector\u0026lt;string\u0026gt; pr; 13 while (cin \u0026gt;\u0026gt; tmp \u0026amp;\u0026amp; tmp != \u0026#34;.\u0026#34;) pr.push_back(tmp); 14 string s = \u0026#34; \u0026#34;; 15 while (cin \u0026gt;\u0026gt; tmp) s += tmp; 16 vector\u0026lt;bool\u0026gt; dp(s.length() + 1); 17 int ans = 0; 18 dp[0] = true; 19 for (int i = 1; s[i]; i++) { 20 for (string p : pr) { 21 int l = p.length(); 22 if (i \u0026gt;= l \u0026amp;\u0026amp; p == s.substr(i - l + 1, l)) 23 dp[i] = dp[i] || dp[i - l]; 24 if (dp[i]) {ans = i; break;} 25 } 26 } 27 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 28 return 0; 29}  2.3 Cow Pedigrees  題意：給定 N \u0026lt; 200 和 K \u0026lt; 100，每個點只能有 0 / 2 個子節點，求大小為 N 且深度為 K 的樹有多少種，答案 mod 9901。 解法：DP。  狀態：dp[n][k] 代表大小為 n 且深度不超過 k 的樹有幾種。 轉移：O(N) 枚舉左右子樹的大小。    1/* 2ID: whitech1 3TASK: nocows 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8#define mod 9901 9inline void add(int \u0026amp;a, int b) { a = (a + b) % mod; } 10int main() { 11 freopen(\u0026#34;nocows.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 12 freopen(\u0026#34;nocows.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 13 int n, k; scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;n, \u0026amp;k); 14 int dp[200][100] = {}; 15 for (int i = 1; i \u0026lt;= k; i++) dp[1][i] = 1; 16 for (int i = 1; i \u0026lt;= n; ++i) 17 for (int j = 1; j \u0026lt;= k; ++j) 18 for (int l = 1, r = i - 2; r \u0026gt;= 1; ++l, --r) 19 add(dp[i][j], dp[l][j - 1] * dp[r][j - 1]); 20 printf(\u0026#34;%d\\n\u0026#34;, (dp[n][k] - dp[n][k - 1] + mod) % mod); 21 return 0; 22}  2.3 Zero Sum  題意：給定 N ≤ 9，在 1 ~ N 之間插入 + -  ，問有哪些算式能得到 0？  Ex. 1-2 3-4 5+6 7 = 1 - 23 - 45 + 67  = 0   解法：枚舉所有可能，用 python 的 eval() 計算。 複雜度：$$O(N3^N)$$  1\u0026#34;\u0026#34;\u0026#34; 2ID: whitech1 3LANG: PYTHON3 4TASK: zerosum 5\u0026#34;\u0026#34;\u0026#34; 6ans = [] 7def enum(i, s, n): 8 s += str(i) 9 if i == n: 10 if eval(s.replace(\u0026#39; \u0026#39;, \u0026#39;\u0026#39;)) == 0: 11 ans.append(s + \u0026#39;\\n\u0026#39;) 12 else: 13 for op in \u0026#34; +-\u0026#34;: 14 enum(i + 1, s + op, n) 15fin = open (\u0026#39;zerosum.in\u0026#39;, \u0026#39;r\u0026#39;) 16fout = open (\u0026#39;zerosum.out\u0026#39;, \u0026#39;w\u0026#39;) 17n = int(fin.readline()) 18enum(1, \u0026#39;\u0026#39;, n) 19fout.writelines(ans) 20fin.close() 21fout.close() 2.3 Money Systems  題意：給定 V ≤ 25 種貨幣，問有幾種方法能組出 N ≤ 10000？ 解法：無限 DP。  1/* 2ID: whitech1 3TASK: money 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8int main() { 9 freopen(\u0026#34;money.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 10 freopen(\u0026#34;money.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 11 int v, n; cin \u0026gt;\u0026gt; v \u0026gt;\u0026gt; n; 12 vector\u0026lt;long long\u0026gt; dp(n + 1); 13 dp[0] = 1; 14 while (v--) { 15 int x; cin \u0026gt;\u0026gt; x; 16 for (int i = x; i \u0026lt;= n; i++) 17 dp[i] += dp[i - x]; 18 } 19 cout \u0026lt;\u0026lt; dp[n] \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 20 return 0; 21}  2.3 Controlling Companies  題意：給定至多 m = 100 家公司，及他們的持股資訊。A 控制 B，當達到三種條件的其中一種，問共有幾種控制的 pair。  A = B A 持有 B 的股票超過 50% A 控制的公司們持有 B 的股票和超過 50%   解法：當 x 控制 y 時，則將 y 持有的股票加到 x，當超過 50，則繼續 DFS。因為最多 O(m^2) 次，每次 O(m)，總時間複雜度 O(m^3)。  1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, int\u0026gt; pii; 4bool cont[101][101]; 5int block[101][101]; 6void dfs(int i, int j) { 7 if (cont[i][j]) return; 8 cont[i][j] = true; 9 for (int k = 1; k \u0026lt;= 100; k++) { 10 block[i][k] += block[j][k]; 11 if (block[i][k] \u0026gt; 50) dfs(i, k); 12 } 13} 14int main() { 15 freopen(\u0026#34;concom.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 16 freopen(\u0026#34;concom.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 17 int n; cin \u0026gt;\u0026gt; n; 18 queue\u0026lt;int\u0026gt; q; 19 while (n--) { 20 int i, j, p; cin \u0026gt;\u0026gt; i \u0026gt;\u0026gt; j \u0026gt;\u0026gt; p; 21 block[i][j] = p; 22 } 23 for (int i = 1; i \u0026lt;= 100; i++) 24 for (int j = 1; j \u0026lt;= 100; j++) 25 if (block[i][j] \u0026gt; 50) dfs(i, j); 26 for (int i = 1; i \u0026lt;= 100; i++) 27 for (int j = 1; j \u0026lt;= 100; j++) 28 if (i != j \u0026amp;\u0026amp; cont[i][j]) 29 cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; j \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 30 return 0; 31}  ","date":"2021-02-13T09:00:08+08:00","image":"https://Luke2336.github.io/post/Diary/20210213/0.jpg","permalink":"https://Luke2336.github.io/p/20210213/","title":"2021/02/13 日記"},{"content":" 早餐吃了稀飯。 將 Blogger 的幾篇文章搬到這個新的 Blog 上。 將 USACO Section 2.2 完成。 去金山泡溫泉。  金山  去金山鴨肉，發現要戴口罩才能端菜，幸好我有帶一個口罩在身上。 吃了糖葫蘆和冰淇淋，泡了溫泉。 買了 3 張 200 元刮刮樂，刮中 1000 + 1500。 去了水尾漁港看風景，看到有人在停車場放煙火，這大概是這輩子看過最近距離的煙火。走過了觀景橋，到提防散步。  USACO  2.2 Runaround Numbers 2.2 Party Lamps  2.2 Runaround Numbers  題意：給定 M ≤ 2^32，找出一個大於 M 的循環數。循環數的定義為，沒用到 0，且每個位元不重複，從第一個位元 d 開始向右走 d 位，走到最右邊則從最左邊繼續，然後在從此位繼續，走完全部回到第一位且不重複。 解法：DFS 暴搜所有解，不斷更新最小值剪枝。  1/* 2ID: whitech1 3TASK: runround 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8typedef long long ll; 9ll m; 10vector\u0026lt;int\u0026gt; v; 11bool used[10]; 12bool check(ll num, int len) { 13 if (num \u0026lt;= m) return false; 14 vector\u0026lt;int\u0026gt; cnt(len); 15 for (int i = 0, r = 0; i \u0026lt; len; i++) { 16 r = (r + v[r]) % len; 17 cnt[r]++; 18 } 19 for (int i = 0; i \u0026lt; len; i++) 20 if (!cnt[i]) return false; 21 return true; 22} 23ll ans = 987654321LL; 24void solve(ll now, int len) { 25 if (check(now, len)) ans = min(ans, now); 26 if (now \u0026gt;= ans) return; 27 for (int i = 1; i \u0026lt;= 9; i++) { 28 if (used[i]) continue; 29 used[i] = true, v.push_back(i); 30 solve(now * 10 + i, len + 1); 31 used[i] = false, v.pop_back(); 32 } 33} 34int main() { 35 freopen(\u0026#34;runround.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 36 freopen(\u0026#34;runround.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 37 cin \u0026gt;\u0026gt; m; 38 solve(0, 0); 39 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 40 return 0; 41}  2.2 Party Lamps  題意：給定 N ≤ 100 和 C ≤ 10000。一開始有 N 盞燈，及四種按鈕，分別為所有燈、奇數燈、偶數燈、3K + 1 狀態改變。以及給定某些燈的狀態。C 為按下按鈕的總次數，求輸出所有最後可能的狀態。 解法：只需要考慮四種按鈕分別按下的奇偶性，以及和 C 的大小及奇偶是否一致。然後枚舉 16 種狀態去花 O(N) 確認。  1/* 2ID: whitech1 3TASK: lamps 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8void input(vector\u0026lt;int\u0026gt; \u0026amp;v) { 9 int x; 10 while (cin \u0026gt;\u0026gt; x \u0026amp;\u0026amp; x != -1) v.push_back(x); 11} 12int main() { 13 freopen(\u0026#34;lamps.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 14 freopen(\u0026#34;lamps.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 15 int n, c; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; c; 16 vector\u0026lt;int\u0026gt; on, off; 17 input(on); input(off); 18 int start[4] = {1, 1, 2, 1}, step[4] = {1, 2, 2, 3}; 19 set\u0026lt;string\u0026gt; s; 20 for (int state = 0; state \u0026lt; 16; state++) { 21 int d = __builtin_popcount(state); 22 if (d \u0026gt; c || (d + c) \u0026amp; 1) continue; 23 vector\u0026lt;bool\u0026gt; lamp(1 + n); 24 for (int r = 0; r \u0026lt; 4; r++) 25 if ((1 \u0026lt;\u0026lt; r) \u0026amp; state) 26 for (int i = start[r]; i \u0026lt;= n; i += step[r]) 27 lamp[i] = !lamp[i]; 28 bool success = true; 29 for (int i : on) 30 if (lamp[i]) success = false; 31 for (int i : off) 32 if (!lamp[i]) success = false; 33 if (!success) continue; 34 string str = \u0026#34;\u0026#34;; 35 for (int i = 1; i \u0026lt;= n; i++) str += \u0026#34;10\u0026#34;[lamp[i]]; 36 s.insert(str); 37 } 38 if (s.empty()) cout \u0026lt;\u0026lt; \u0026#34;IMPOSSIBLE\\n\u0026#34;; 39 else for (string str : s) cout \u0026lt;\u0026lt; str \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 40 return 0; 41}  ","date":"2021-02-12T11:50:19+08:00","image":"https://Luke2336.github.io/post/Diary/20210212/0.jpg","permalink":"https://Luke2336.github.io/p/20210212/","title":"2021/02/12 日記"},{"content":"過年好痛苦。昨晚做了惡夢，夢到 Alice 跟我絕交，覺得很難過。晚上醒來好幾次。好討厭除夕，跟一群一直刺探隱私的人吃飯。\n自己過生日好孤單。\nUSACO  2.2 Preface Numbering 2.2 Subset Sums  2.2 Preface Numbering  題意：給定 N ≤ 3500，計算 1 ~ N 的羅馬字母表示法共用了每種字母個幾個。  1/* 2ID: whitech1 3TASK: preface 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8int d[13] = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1}; 9string s[13] = {\u0026#34;M\u0026#34;, \u0026#34;CM\u0026#34;, \u0026#34;D\u0026#34;, \u0026#34;CD\u0026#34;, \u0026#34;C\u0026#34;, \u0026#34;XC\u0026#34;, \u0026#34;L\u0026#34;, \u0026#34;XL\u0026#34;, \u0026#34;X\u0026#34;, \u0026#34;IX\u0026#34;, \u0026#34;V\u0026#34;, \u0026#34;IV\u0026#34;, \u0026#34;I\u0026#34;}; 10int cnt[13]; 11void solve(int x) { 12 for (int i = 0; i \u0026lt; 13; i++) { 13 cnt[i] += x / d[i]; 14 x %= d[i]; 15 } 16} 17int main() { 18 freopen(\u0026#34;preface.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 19 freopen(\u0026#34;preface.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 20 int n; cin \u0026gt;\u0026gt; n; 21 for (int i = 1; i \u0026lt;= n; i++) solve(i); 22 int ans[7] = {}; 23 char c[8] = \u0026#34;IVXLCDM\u0026#34;; 24 for (int i = 0; i \u0026lt; 13; i++) 25 for (int j = 0; j \u0026lt; 7; j++) 26 for (char ch : s[i]) 27 if (ch == c[j]) ans[j] += cnt[i]; 28 for (int i = 0; i \u0026lt; 7; i++) 29 if (ans[i]) cout \u0026lt;\u0026lt; c[i] \u0026lt;\u0026lt; \u0026#39; \u0026#39; \u0026lt;\u0026lt; ans[i] \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 30 return 0; 31}  2.2 Subset Sums  題意：給定 N ≤ 39，計算 1 ~ N 有幾種分法能使兩堆一樣多。  1/* 2ID: whitech1 3TASK: subset 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8inline int sum(int x) {return x * (x + 1) \u0026gt;\u0026gt; 1;} 9int main() { 10 freopen(\u0026#34;subset.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 11 freopen(\u0026#34;subset.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 12 int n; cin \u0026gt;\u0026gt; n; 13 int m = sum(n); 14 if (m \u0026amp; 1) { 15 cout \u0026lt;\u0026lt; \u0026#34;0\\n\u0026#34;; 16 return 0; 17 } 18 m \u0026gt;\u0026gt;= 1; 19 vector\u0026lt;long long\u0026gt; dp(m + 1); 20 dp[0] = 1; 21 for (int i = 1; i \u0026lt;= n; i++) 22 for (int j = min(sum(i), m); j \u0026gt;= i; j--) 23 dp[j] += dp[j - i]; 24 cout \u0026lt;\u0026lt; (dp[m] \u0026gt;\u0026gt; 1) \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 25 return 0; 26}  ","date":"2021-02-11T09:57:18+08:00","permalink":"https://Luke2336.github.io/p/20210211/","title":"2021/02/11 日記"},{"content":"很混亂的一年，所有的事情都受到疫情影響。\n國內事件    Date News     2020/01/06 蘇花改通車   2020/01/11 蔡英文當選總統   2020/01/24 陳時中擔任 CECC 指揮官   2020/01/31 北捷環狀線通車   2020/02/06 7 天 2 片口罩   2020/03/02 大學延後開學   2020/03/19 限制入境   2020/04/09 14 天 9 片口罩   2002/05/29 通姦除罪化釋憲   2002/05/31 敦南誠品熄燈   2020/06/06 罷免高雄市長韓國瑜、議長跳樓   2020/07/01 5G   2020/07/30 前總統李登輝過世   2020/08/28 宣布萊豬進口   2020/11/07 清大前校長劉炯朗過世   2020/12/12 中天關台   2020/12/12 北一女校慶聊天擺攤事件   2020/12/25 民法下修 18 歲成年三讀通過   2021/01/20 部桃事件   2021/02/01 陽明交大合校   2021/02/06 高雄市議員黃捷罷免案   2021/02/09 趙少康宣布代表國民黨參選總統     交大學聯會於罷韓時的「返鄉專車」具政治立場，我認為不妥。 2020 這波韓流令人感慨台灣新聞媒體的力量，媒體能造神，也能把一個人轟下台，台灣的民意主要還是靠媒體炒作，還有靠網民帶風向。  國外新聞    Date News     2019/12/30 李文亮對華南海鮮市場疫情發出警告   2020/01/08 烏航於伊朗空域解體   2020/01/22 武漢封城   2020/01/31 英國正式脫歐   2020/02/04 公主號停靠橫濱   2020/02/11 WHO 命名 Covid 19   2020/02/20 韓國新天地教會事件   2020/03/24 東京奧運宣布停辦   2020/04/05 英國女王發布演說   2020/04/16 日本發布緊急事態   2020/06/30 香港國安法正式生效   2020/08/04 黎巴嫩港口爆炸   2020/11/03 美國大選，拜登獲勝   2021/01/20 拜登就任   2021/01/27 華爾街 Gamestop 散戶事件   2021/02/01 緬甸政變     香港議題在台灣大選後就被國內媒體淡化。 美中衝突不斷擴大，華為等中國企業被封殺。 美國大選爭議很多。  ","date":"2021-02-10T19:01:18+08:00","image":"https://Luke2336.github.io/post/Other/News/news.png","permalink":"https://Luke2336.github.io/p/news_2020/","title":"2020 簡記"},{"content":"今天是 20 歲的最後一天！\n晚上吃小火鍋，看到了弟弟的摩托車。\nUSACO 寫完了 Section 2.1。\n 2.1 The Castle 2.1 Ordered Fractions 2.1 Sorting a Three-Valued Sequence 2.1 Healthy Holsteins 2.1 Hamming Codes  2.1 The Castle  \u0026ldquo;Farthest to the west\u0026rdquo; 是指「最西邊」。 題意：給定每個房間的四道牆，問拆一道牆能形成的最大房間大小。 解法：Flood Fill 算出每個房間的大小，再試著拆每道牆。  1/* 2ID: whitech1 3TASK: castle 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8const char D[5] = \u0026#34;WNES\u0026#34;; 9const int dx[4] = {0, -1, 0, 1}; 10const int dy[4] = {-1, 0, 1, 0}; 11int main() { 12 freopen(\u0026#34;castle.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 13 freopen(\u0026#34;castle.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 14 int n, m; cin \u0026gt;\u0026gt; m \u0026gt;\u0026gt; n; 15 vector\u0026lt;vector\u0026lt;int\u0026gt; \u0026gt; w(n, vector\u0026lt;int\u0026gt;(m)); 16 for (int i = 0; i \u0026lt; n; i++) 17 for (int j = 0; j \u0026lt; m; j++) 18 cin \u0026gt;\u0026gt; w[i][j]; 19 vector\u0026lt;vector\u0026lt;int\u0026gt; \u0026gt; G(n, vector\u0026lt;int\u0026gt;(m)); 20 vector\u0026lt;int\u0026gt; sz(1); 21 int mx = 0; 22 for (int i = 0; i \u0026lt; n; i++) { 23 for (int j = 0; j \u0026lt; m; j++) { 24 if (G[i][j]) continue; 25 queue\u0026lt;int\u0026gt; qx, qy; 26 qx.push(i), qy.push(j); 27 G[i][j] = sz.size(); 28 sz.push_back(1); 29 while (!qx.empty()) { 30 int x = qx.front(); qx.pop(); 31 int y = qy.front(); qy.pop(); 32 for (int d = 0; d \u0026lt; 4; d++) { 33 if ((1 \u0026lt;\u0026lt; d) \u0026amp; w[x][y]) continue; 34 int xx = x + dx[d], yy = y + dy[d]; 35 if (G[xx][yy]) continue; 36 G[xx][yy] = G[x][y]; 37 qx.push(xx), qy.push(yy); 38 sz.back()++; 39 } 40 } 41 mx = max(mx, sz.back()); 42 } 43 } 44 cout \u0026lt;\u0026lt; sz.size() - 1 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34; \u0026lt;\u0026lt; mx \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 45 mx = 0; 46 int ax, ay; char dir; 47 for (int j = 0; j \u0026lt; m; j++) { 48 for (int i = n - 1; i \u0026gt;= 0; i--) { 49 for (int d = 1; d \u0026lt;= 2; d++) { 50 if ((1 \u0026lt;\u0026lt; d) \u0026amp; w[i][j]) { 51 int ii = i + dx[d], jj = j + dy[d]; 52 if (ii \u0026lt; 0 || jj \u0026gt;= m) continue; 53 if (G[ii][jj] == G[i][j]) continue; 54 if (sz[G[i][j]] + sz[G[ii][jj]] \u0026gt; mx) { 55 mx = sz[G[i][j]] + sz[G[ii][jj]]; 56 ax = i, ay = j, dir = D[d]; 57 } 58 } 59 } 60 } 61 } 62 cout \u0026lt;\u0026lt; mx \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34; \u0026lt;\u0026lt; ax + 1 \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; ay + 1 \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; dir \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 63 return 0; 64}  2.1 Ordered Fractions  題意：枚舉出 0 ~ 1 之間，分母最大為 N ≤ 160 的分數，依照大小印出。 解法：只將分子與分母互質的最簡分數(reduced fraction)放入，再定義大小排序。  1/* 2ID: whitech1 3TASK: frac1 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8typedef pair\u0026lt;int, int\u0026gt; frac; 9#define x first 10#define y second 11bool cmp (const frac \u0026amp;a, const frac \u0026amp;b) { 12 return a.x * b.y \u0026lt; a.y * b.x; 13} 14int main() { 15 freopen(\u0026#34;frac1.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 16 freopen(\u0026#34;frac1.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 17 int n; cin \u0026gt;\u0026gt; n; 18 vector\u0026lt;frac\u0026gt; v; 19 v.push_back(frac(0, 1)); 20 for (int i = 1; i \u0026lt;= n; i++) 21 for (int j = 1; j \u0026lt;= i; j++) 22 if (__gcd(i, j) == 1) 23 v.push_back(frac(j, i)); 24 sort(v.begin(), v.end(), cmp); 25 for (frac f : v) cout \u0026lt;\u0026lt; f.x \u0026lt;\u0026lt; \u0026#39;/\u0026#39; \u0026lt;\u0026lt; f.y \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 26 return 0; 27}  2.1 Sorting a Three-Valued Sequence  題意：給定一個長度為 n ≤ 1000 的序列，元素只有 1, 2, 3，操作為將任意兩個位置的元素交換，問最少要幾個操作才能將序列排序？ 解法：Greedy，先將陣列排序，和原陣列比較。若兩兩交換能到對的位置則交換，各消耗 1 次操作。其餘會形成 cycle，cycle 需要 2 次操作。  1/* 2ID: whitech1 3TASK: sort3 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8int main() { 9 freopen(\u0026#34;sort3.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 10 freopen(\u0026#34;sort3.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 11 int n; cin \u0026gt;\u0026gt; n; 12 vector\u0026lt;int\u0026gt; a(n); 13 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; a[i]; 14 vector\u0026lt;int\u0026gt; b(a.begin(), a.end()); 15 sort(b.begin(), b.end()); 16 int c[4][4] = {}; 17 for (int i = 0; i \u0026lt; n; i++) 18 if (a[i] != b[i]) c[a[i]][b[i]]++; 19 int ans = 0; 20 for (int i = 1; i \u0026lt; 3; i++) { 21 for (int j = i + 1; j \u0026lt;= 3; j++) { 22 int d = min(c[i][j], c[j][i]); 23 ans += d, c[i][j] -= d, c[j][i] -= d; 24 } 25 } 26 int tmp = 0; 27 for (int i = 1; i \u0026lt;= 3; i++) 28 for (int j = 1; j \u0026lt;= 3; j++) 29 tmp += c[i][j]; 30 cout \u0026lt;\u0026lt; ans + tmp * 2 / 3 \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 31 return 0; 32}  2.1 Healthy Holsteins  題意：牛需要 V 種維他命。有 G 種飼料可選擇，問最少要選擇幾種飼料，才能使維他命的和達到牛所需的量。 解法：枚舉所有組合檢查。 複雜度：$$O(VG2^G)$$  1/* 2ID: whitech1 3TASK: holstein 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8int main() { 9 freopen(\u0026#34;holstein.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 10 freopen(\u0026#34;holstein.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 11 int v; cin \u0026gt;\u0026gt; v; 12 vector\u0026lt;int\u0026gt; need(v); 13 for (int i = 0; i \u0026lt; v; i++) cin \u0026gt;\u0026gt; need[i]; 14 int n; cin \u0026gt;\u0026gt; n; 15 vector\u0026lt;vector\u0026lt;int\u0026gt; \u0026gt; vit(n, vector\u0026lt;int\u0026gt;(v)); 16 for (int i = 0; i \u0026lt; n; i++) 17 for (int j = 0; j \u0026lt; v; j++) 18 cin \u0026gt;\u0026gt; vit[i][j]; 19 int N = 1 \u0026lt;\u0026lt; n; 20 vector\u0026lt;vector\u0026lt;int\u0026gt; \u0026gt; dp(N, vector\u0026lt;int\u0026gt;(v)); 21 int ans = n, id = N - 1; 22 for (int i = 0; i \u0026lt; N; i++) { 23 int cnt = 0; 24 for (int j = 0; j \u0026lt; n; j++) { 25 if ((1 \u0026lt;\u0026lt; j) \u0026amp; i) cnt++; 26 else for (int r = 0, k = i | (1 \u0026lt;\u0026lt; j); !dp[k][r] \u0026amp;\u0026amp; r \u0026lt; v; r++) 27 dp[k][r] = dp[i][r] + vit[j][r]; 28 } 29 bool success = true; 30 for (int r = 0; r \u0026lt; v; r++) 31 if (dp[i][r] \u0026lt; need[r]) success = false; 32 if (success) { 33 if (cnt \u0026lt; ans) ans = cnt, id = i; 34 else if (cnt \u0026lt;= ans) id = min(i, id); 35 } 36 } 37 cout \u0026lt;\u0026lt; ans; 38 for (int i = 0; i \u0026lt; n; i++) 39 if (id \u0026amp; (1 \u0026lt;\u0026lt; i)) cout \u0026lt;\u0026lt; \u0026#39; \u0026#39; \u0026lt;\u0026lt; i + 1; 40 cout \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 41 return 0; 42}  2.1 Hamming Codes  題意：輸出一個大小為 N ≤ 64 的集合，裡面的元素長度為 B ≤ 8 個 bits，兩兩 Hamming distance 不小於 D ≤ 7。 解法：測資弱，直接暴力枚舉。用 __builtin_popcount(x) 算幾個 1-bit。  1/* 2ID: whitech1 3TASK: hamming 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8typedef unsigned int ui; 9vector\u0026lt;ui\u0026gt; ans; 10bool success = false; 11int N, M, D, B; 12void dfs() { 13 if (success) return; 14 if (ans.size() == N) { 15 success = true; 16 sort(ans.begin(), ans.end()); 17 for (int i = 0; i \u0026lt; N; i++) 18 cout \u0026lt;\u0026lt; ans[i] \u0026lt;\u0026lt; \u0026#34; \\n\u0026#34;[i % 10 == 9 || i == N - 1]; 19 return; 20 } 21 for (ui i = 0; i \u0026lt; M \u0026amp;\u0026amp; !success; i++) { 22 bool add = true; 23 for (ui x : ans) { 24 if (__builtin_popcount(i ^ x) \u0026lt; D) { 25 add = false; break; 26 } 27 } 28 if (add) { 29 ans.push_back(i); 30 dfs(); 31 ans.pop_back(); 32 } 33 } 34} 35int main() { 36 freopen(\u0026#34;hamming.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 37 freopen(\u0026#34;hamming.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 38 int B; cin \u0026gt;\u0026gt; N \u0026gt;\u0026gt; B \u0026gt;\u0026gt; D; 39 M = 1 \u0026lt;\u0026lt; B; 40 dfs(); 41 return 0; 42}  ","date":"2021-02-10T11:36:51+08:00","permalink":"https://Luke2336.github.io/p/20210210/","title":"2021/02/10 日記"},{"content":"今天左下腹還是悶悶的。\nUSACO  重新開始刷 USACO，USACO 最早是 2018 年就有看到的網站，以前因為是英文題面所以沒認真刷。覺得不能亂刷題，應該有系統的刷題，所以就想寒假把這邊刷到 chapter 3，練基礎能力。 今天刷完 Chapter 1 了～  1.4 Wormholes 1.4 Ski Course Design 1.5 Arithmetic Progressions 1.5 Mother’s Milk 1.6 Number Triangles 1.6 Prime Palindromes 1.6 Superprime Rib    1.4 Wormholes  題意：有 12 個蟲洞，要配對成兩兩一組，一旦碰到蟲洞就會被傳送到另一端，且一直往 +X 方向移動，問有多少種組合能形成環？ 這題是很好的題目，能練習實作暴搜。首先要會 DFS 枚舉組合，方法是每次找到第一個沒被用到的點，然後枚舉能和他匹配的點。之後再檢查每個組合是否有環，採取 BFS，每次走兩步，先一步蟲洞，再走到下一個點。  1/* 2ID: whitech1 3TASK: wormhole 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8typedef pair\u0026lt;int, int\u0026gt; pii; 9#define x first 10#define y second 11int n, ans = 0; 12vector\u0026lt;pii\u0026gt; p; 13vector\u0026lt;vector\u0026lt;bool\u0026gt; \u0026gt; G; 14vector\u0026lt;int\u0026gt; pr; 15bool check() { 16 vector\u0026lt;int\u0026gt; visit(n); 17 queue\u0026lt;int\u0026gt; q; 18 for (int i = 0; i \u0026lt; n; i++) q.push(i); 19 while (!q.empty()) { 20 int u = q.front(); q.pop(); 21 if (visit[u] \u0026gt; 2 * n) return true; 22 for (int i = 0; i \u0026lt; n; i++) { 23 if (G[pr[u]][i]) 24 q.push(i), visit[i] = visit[u] + 2; 25 } 26 } 27 return false; 28} 29void per(int cnt) { 30 if (cnt == n) { 31 if (check()) ans++; 32 return; 33 } 34 for (int i = 0; i \u0026lt; n; i++) { 35 if (pr[i] != -1) continue; 36 for (int j = i + 1; j \u0026lt; n; j++) { 37 if (pr[j] != -1) continue; 38 pr[i] = j, pr[j] = i; 39 per(cnt + 2); 40 pr[i] = pr[j] = -1; 41 } 42 break; 43 } 44} 45int main() { 46 freopen(\u0026#34;wormhole.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 47 freopen(\u0026#34;wormhole.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 48 cin \u0026gt;\u0026gt; n; 49 p.resize(n), pr.resize(n, -1); 50 G.resize(n, vector\u0026lt;bool\u0026gt;(n)); 51 for (int i = 0; i \u0026lt; n; i++) 52 cin \u0026gt;\u0026gt; p[i].x \u0026gt;\u0026gt; p[i].y; 53 sort(p.begin(), p.end()); 54 for (int i = 0; i \u0026lt; n; i++) 55 for (int j = i + 1; j \u0026lt; n; j++) 56 if (p[i].y == p[j].y) { 57 G[i][j] = true; 58 break; 59 } 60 per(0); 61 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 62 return 0; 63}  1.4 Ski Course Design 1/* 2ID: whitech1 3TASK: skidesign 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8inline int d(int x) {return x * x;} 9int main() { 10 freopen(\u0026#34;skidesign.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 11 freopen(\u0026#34;skidesign.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 12 int n; cin \u0026gt;\u0026gt; n; 13 vector\u0026lt;int\u0026gt; v(n); 14 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; v[i]; 15 sort(v.begin(), v.end()); 16 int ans = n * d(100); 17 for (int m = 0; m \u0026lt;= 100; m++) { 18 int cnt = 0; 19 for (int a : v) 20 if (a \u0026lt; m) cnt += d(m - a); 21 else if (a \u0026gt; m + 17) cnt += d(a - m - 17); 22 ans = min(ans, cnt); 23 } 24 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 25 return 0; 26}  1.5 Arithmetic Progressions  題意：枚舉 p * p + q * q (0 ≤ p, q ≤ m ≤ 250)序列中的長度為 n ≤ 25 的序列。時間為 5 秒。 作法：把序列先用 bool seq[2 * m * m + 1] 紀錄。枚舉前兩個元素來檢查序列。  1/* 2ID: whitech1 3TASK: ariprog 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8typedef pair\u0026lt;int, int\u0026gt; pii; 9set\u0026lt;int\u0026gt; s; 10int main() { 11 freopen(\u0026#34;ariprog.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 12 freopen(\u0026#34;ariprog.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 13 int n, m; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 14 vector\u0026lt;int\u0026gt; sq(m + 1); 15 for (int i = 1; i \u0026lt;= m; i++) sq[i] = i * i; 16 for (int i = 0; i \u0026lt;= m; i++) 17 for (int j = i; j \u0026lt;= m; j++) 18 s.insert(sq[i] + sq[j]); 19 set\u0026lt;pii\u0026gt; ans; 20 vector\u0026lt;int\u0026gt; v(s.begin(), s.end()); 21 vector\u0026lt;bool\u0026gt; seq(2 * m * m + 1); 22 for (int i : v) seq[i] = true; 23 for (int i : v) { 24 for (int j : v) { 25 if (i \u0026gt;= j) continue; 26 int d = j - i; 27 bool success = true; 28 for (int k = i + (n - 1) * d; k \u0026gt; j; k -= d) 29 if (k \u0026gt;= seq.size() || !seq[k]) { 30 success = false; 31 break; 32 } 33 if (success) ans.insert(pii(d, i)); 34 } 35 } 36 for (auto i : ans) cout \u0026lt;\u0026lt; i.second \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; i.first \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 37 if (!ans.size()) cout \u0026lt;\u0026lt; \u0026#34;NONE\\n\u0026#34;; 38 return 0; 39}  1.5 Mother\u0026rsquo;s Milk  題意：給定 1 ≤ A, B, C ≤ 20，三個桶子，問 A 桶為空時，C 有哪些可能的容量。  1/* 2ID: whitech1 3TASK: milk3 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8int a, b, c; 9bool ans[25][25][25]; 10void solve(int x, int y, int z) { 11 if (ans[x][y][z]) return; 12 ans[x][y][z] = true; 13 int d; 14 // A -\u0026gt; B 15 d = min(x, b - y); 16 solve(x - d, y + d, z); 17 // A -\u0026gt; C 18 d = min(x, c - z); 19 solve(x - d, y, z + d); 20 // B -\u0026gt; A 21 d = min(a - x, y); 22 solve(x + d, y - d, z); 23 // B -\u0026gt; C 24 d = min(y, c - z); 25 solve(x, y - d, z + d); 26 // C -\u0026gt; A 27 d = min(a - x, z); 28 solve(x + d, y, z - d); 29 // C -\u0026gt; B 30 d = min(b - y, z); 31 solve(x, y + d, z - d); 32} 33int main() { 34 freopen(\u0026#34;milk3.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 35 freopen(\u0026#34;milk3.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 36 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; c; 37 solve(0, 0, c); 38 for (int i = 0; i \u0026lt; c; i++) 39 if (c - i \u0026lt;= b \u0026amp;\u0026amp; ans[0][c - i][i]) 40 cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#39; \u0026#39;; 41 cout \u0026lt;\u0026lt; c \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 42 return 0; 43}  1.6 Binary Numbers    Value Binary Sample Meaning     x 00101100 the original x value   x \u0026amp; -x 00000100 extract lowest bit set   x | -x 11111100 create mask for lowest-set-bit \u0026amp; bits to its left   x ^ -x 11111000 create mask bits to left of lowest bit set   x \u0026amp; (x - 1) 00101000 strip off lowest bit set   x | (x - 1) 00101111 fill in all bits below lowest bit set   x ^ (x - 1) 00000111 create mask for lowest-set-bit \u0026amp; bits to its right   ~x \u0026amp; (x - 1) 00000011 create mask for bits to right of lowest bit set   x | (x + 1) 00101101 toggle lowest zero bit   x / (x \u0026amp; -x) 00001011 shift number right so lowest set bit is at bit 0    1.6 Number Triangles 1/* 2ID: whitech1 3TASK: numtri 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8int main() { 9 freopen(\u0026#34;numtri.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 10 freopen(\u0026#34;numtri.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 11 int r; cin \u0026gt;\u0026gt; r; 12 vector\u0026lt;vector\u0026lt;int\u0026gt; \u0026gt; a(r); 13 for (int i = 0; i \u0026lt; r; i++) { 14 a[i].resize(i + 1); 15 for (int j = 0; j \u0026lt;= i; j++) 16 cin \u0026gt;\u0026gt; a[i][j]; 17 } 18 for (int i = 1; i \u0026lt; r; i++) 19 for (int j = 0; j \u0026lt;= i; j++) 20 a[i][j] += max(a[i - 1][max(0, j - 1)], 21 a[i - 1][min(i - 1, j)]); 22 int ans = 0; 23 for (int j = 0; j \u0026lt; r; j++) 24 ans = max(ans, a[r - 1][j]); 25 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 26 return 0; 27}  1.6 Prime Palindromes  題意：找 [a, b] 中同時為迴文和質數的數。 方法：枚舉迴文，再檢查使否為質數，相反會超時。可以發現除了 11 以外的偶位數迴文都會被 11 整除，即非質數。  1/* 2ID: whitech1 3TASK: pprime 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8vector\u0026lt;int\u0026gt; prime; 9bool isprime[10000]; 10void gen_prime() { 11 prime.push_back(2); 12 for (int i = 3; i \u0026lt; 10000; i += 2) { 13 if (isprime[i]) continue; 14 prime.push_back(i); 15 for (int j = i * i; j \u0026lt; 10000; j += 2 * i) 16 isprime[j] = true; 17 } 18} 19bool check_prime(int x) { 20 for (int p : prime) { 21 if (p * p \u0026gt; x) return true; 22 if (x % p == 0) return false; 23 } 24 return true; 25} 26int num(int x) { 27 int ret = x; 28 vector\u0026lt;int\u0026gt; v; 29 while (x) { 30 v.push_back(x % 10); 31 x /= 10; 32 } 33 for (int i = 1; i \u0026lt; v.size(); i++) 34 ret = ret * 10 + v[i]; 35 return ret; 36} 37int main() { 38 freopen(\u0026#34;pprime.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 39 freopen(\u0026#34;pprime.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 40 int a, b; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 41 gen_prime(); 42 vector\u0026lt;int\u0026gt; ans; 43 int c[] = {2, 3, 5, 7, 11}; 44 for (int i : c) 45 if (a \u0026lt;= i \u0026amp;\u0026amp; i \u0026lt;= b) 46 ans.push_back(i); 47 for (int i = 10; i \u0026lt; 10000; i++) { 48 int x = num(i); 49 if (a \u0026lt;= x \u0026amp;\u0026amp; x \u0026lt;= b \u0026amp;\u0026amp; check_prime(x)) 50 ans.push_back(x); 51 } 52 for (int i : ans) cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 53 return 0; 54}  1.6 Superprime Rib 1/* 2ID: whitech1 3TASK: sprime 4LANG: C++14 5*/ 6#include \u0026lt;bits/stdc++.h\u0026gt;7using namespace std; 8vector\u0026lt;int\u0026gt; prime; 9bool isprime[10000]; 10void gen_prime() { 11 prime.push_back(2); 12 for (int i = 3; i \u0026lt; 10000; i += 2) { 13 if (isprime[i]) continue; 14 prime.push_back(i); 15 for (int j = i * i; j \u0026lt; 10000; j += 2 * i) 16 isprime[j] = true; 17 } 18} 19bool check_prime(int x) { 20 if (x \u0026lt; 2) return false; 21 for (int p : prime) { 22 if (p * p \u0026gt; x) return true; 23 if (x % p == 0) return false; 24 } 25 return true; 26} 27vector\u0026lt;int\u0026gt; ans; 28void solve(int cnt, int n, int num) { 29 if (cnt == n) { 30 ans.push_back(num); 31 return; 32 } 33 for (int i = 1; i \u0026lt;= 9; i++) { 34 int d = num * 10 + i; 35 if (check_prime(d)) solve(cnt + 1, n, d); 36 } 37} 38int main() { 39 freopen(\u0026#34;sprime.in\u0026#34;, \u0026#34;r\u0026#34;, stdin); 40 freopen(\u0026#34;sprime.out\u0026#34;, \u0026#34;w\u0026#34;, stdout); 41 int n; cin \u0026gt;\u0026gt; n; 42 gen_prime(); 43 solve(0, n, 0); 44 for (int i : ans) cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 45 return 0; 46}  ","date":"2021-02-09T11:30:39+08:00","permalink":"https://Luke2336.github.io/p/20210209/","title":"2021/02/09 日記"},{"content":"ICPC 2020 Taipei 出了一題水母圖的同構，於是今天找了這題樹同構練習，採用括號字串的方法，而不是 Hashing。\n 水母圖  對於環上每個點當 root 去生出樹字串。 串接起來後，用環狀字串的演算法去比較。    TIOJ 1214 - 樹論 之 樹同構測試 $$O(|G|^2 \\log \\Delta(G)) = O(n^2 \\log n)$$\n n ≤ 100。給定兩棵樹的邊，問他們是否同構 \u0026ldquo;isomorphic\u0026rdquo; 先 DFS 找出所有的樹重心（最多 2 個）。樹重心的定義為，最大子樹大小最小的點。 從重心開始做 DFS，將每個點用 () 表示，中間夾括入他所有子樹字串，將他們排序後加入。每次排序為度數個，所以總共需要排序 deg - 1 個，所有點加起來為 n 個，再乘上字串比較的複雜度 O(n)。 最後再將重心們的字串排序後串接，比較兩棵樹是否相同。  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4#define pb push_back 5int n; 6int dfs(int u, int p, int \u0026amp;mi, vector\u0026lt;vector\u0026lt;int\u0026gt; \u0026gt; \u0026amp;G, vector\u0026lt;int\u0026gt; \u0026amp;ret) { 7 int cnt = 0, mx = 0; 8 for (int uu : G[u]) { 9 if (uu == p) continue; 10 int r = dfs(uu, u, mi, G, ret); 11 mx = max(mx, r), cnt += r; 12 } 13 mx = max(mx, n - cnt - 1); 14 if (mx \u0026lt;= mi) { 15 if (mx \u0026lt; mi) ret.clear(), mi = mx; 16 ret.pb(u); 17 } 18 return cnt + 1; 19} 20vector\u0026lt;int\u0026gt; centroid(vector\u0026lt;vector\u0026lt;int\u0026gt; \u0026gt; \u0026amp;G) { 21 vector\u0026lt;int\u0026gt; ret; 22 int mi = n; 23 dfs(1, -1, mi, G, ret); 24 return ret; 25} 26string tree(int u, int p, vector\u0026lt;vector\u0026lt;int\u0026gt; \u0026gt; \u0026amp;G) { 27 string ret = \u0026#34;\u0026#34;; 28 vector\u0026lt;string\u0026gt; sub; 29 for (int uu : G[u]) 30 if (uu != p) sub.pb(tree(uu, u, G)); 31 sort(sub.begin(), sub.end()); 32 for (string s : sub) ret += s; 33 return \u0026#34;(\u0026#34; + ret + \u0026#34;)\u0026#34;; 34} 35string solve() { 36 vector\u0026lt;vector\u0026lt;int\u0026gt; \u0026gt; G(n + 1); 37 for (int i = 1; i \u0026lt; n; i++) { 38 int a, b; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 39 G[a].pb(b), G[b].pb(a); 40 } 41 vector\u0026lt;string\u0026gt; ans; 42 for (int u : centroid(G)) ans.pb(tree(u, -1, G)); 43 sort(ans.begin(), ans.end()); 44 string ret = \u0026#34;\u0026#34;; 45 for (string s : ans) ret += s; 46 return ret; 47} 48int main() { 49 ios::sync_with_stdio(0), cin.tie(0); 50 while (1) { 51 cin \u0026gt;\u0026gt; n; if (!n) break; 52 cout \u0026lt;\u0026lt; (solve() == solve() ? \u0026#34;Same\u0026#34; : \u0026#34;Different\u0026#34;) \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 53 } 54 return 0; 55}  ","date":"2021-02-08T20:36:05+08:00","permalink":"https://Luke2336.github.io/p/tioj1214/","title":"TIOJ 1214 樹同構"},{"content":"今天都腦袋昏昏的，只有睡覺和寫 code，晚餐吃了泡麵。\n Project Euler  25 29 36   TIOJ  1214 樹論 之 樹同構測試 1044 [Interactive] Guess My Number 1072 A.誰先晚餐 1006 大數除法    CSES 2205 - Gray Code 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;int, int\u0026gt; pii; 6int main() { 7 ios::sync_with_stdio(0), cin.tie(0); 8 int n; cin \u0026gt;\u0026gt; n; 9 for (int i = 0; i \u0026lt; (1 \u0026lt;\u0026lt; n); i++) { 10 for (int j = n - 1; j \u0026gt;= 0; j--) { 11 int a = i \u0026gt;\u0026gt; j; 12 int b = a \u0026gt;\u0026gt; 1; 13 cout \u0026lt;\u0026lt; ((a ^ b) \u0026amp; 1); 14 } 15 cout \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 16 } 17 return 0; 18}  CSES 1624 - Chessboard and Queens 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4bool a[8], b[20], c[20]; 5char m[8][9]; 6int ans = 0; 7void dfs (int i) { 8 if (i == 8) { 9 ans++; 10 return; 11 } 12 for (int j = 0; j \u0026lt; 8; j++) { 13 if (m[i][j] == \u0026#39;*\u0026#39;) continue; 14 if (a[j] || b[i + j] || c[i - j + 8]) continue; 15 a[j] = b[i + j] = c[i - j + 8] = true; 16 dfs(i + 1); 17 a[j] = b[i + j] = c[i - j + 8] = false; 18 } 19} 20int main() { 21 ios::sync_with_stdio(0), cin.tie(0); 22 for (int i = 0; i \u0026lt; 8; i++) scanf(\u0026#34; %s\u0026#34;, m[i]); 23 dfs(0); 24 printf(\u0026#34;%d\\n\u0026#34;, ans); 25 return 0; 26}  ","date":"2021-02-08T10:52:36+08:00","permalink":"https://Luke2336.github.io/p/20210208/","title":"2021/02/08 日記"},{"content":"常用指令    command 用途     clear clear terminal window   ls list directory content   ls -a 將隱藏檔案也列出   cd change directory to home   cd .. change directory to parent   cd - change directory to last working directory   cd / change directory to root   pwd print working directory   rm file_name remove file   mkdir dir_name make directory   rmdir dir_name remove directory   rm -R dir_name remove the directory and all files in the directory   cp -R A B 將 A 資料夾的東西全部複製到 B   mv A dir_name 將 A 搬到資料夾   cat file_name 查看內容   grep text file_name 抓取內容    ","date":"2021-02-07T14:08:22+08:00","permalink":"https://Luke2336.github.io/p/mac_cmd/","title":"MacOS Command Line Note"},{"content":"今天左下腹有些不舒服，頭也悶悶痛痛的，在車上一直睡。\nzerojudge:\n e507 e513 a782 a780 b112  馬崗 五色鳥、喜鵲巢。\n石頭屋的貓。\n蜜月灣 Kattis - Walrus Weights 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 ios::sync_with_stdio(0), cin.tie(0); 5 int n; cin \u0026gt;\u0026gt; n; 6 bool dp[2005] = {true}; 7 for (int i = 0; i \u0026lt; n; i++) { 8 int x; cin \u0026gt;\u0026gt; x; 9 for (int j = 2000; j \u0026gt;= x; j--) 10 dp[j] = dp[j] | dp[j - x]; 11 } 12 for (int i = 0; i \u0026lt;= 1000; i++) 13 if (dp[1000 + i]) { 14 cout \u0026lt;\u0026lt; 1000 + i \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 15 return 0; 16 } else if (dp[1000 - i]) { 17 cout \u0026lt;\u0026lt; 1000 - i \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 18 return 0; 19 } 20 return 0; 21}  ","date":"2021-02-07T12:44:00+08:00","image":"https://Luke2336.github.io/post/Diary/20210207/sea.jpg","permalink":"https://Luke2336.github.io/p/20210207/","title":"2021/02/07 日記"},{"content":"今天去動物園玩，直接搭遊園車從鳥園站開始走，花了近五個小時，除了爬蟲館和貓熊館以外幾乎都有參觀到，還看了新的穿山甲館。比較喜歡的動物有小貓熊、狐獴、無尾熊等等。\n晚上在北車二樓吃飯，然後搭自強號回去，下車時不小心開了駕駛室的門，超囧。\nzerojudge 滿 500 題了 www\n e473 e196 e466 d925 d810 a158 d813  ","date":"2021-02-06T20:11:59+08:00","permalink":"https://Luke2336.github.io/p/20210206/","title":"2021/02/06 日記"},{"content":"下午吃了草莓加煉乳，晚餐去博愛吃了牛肉麵，然後耍廢看了一部電影。\nKattis - Alphabet 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 string s; cin \u0026gt;\u0026gt; s; 5 int dp[30][55] = {}; 6 for (int i = 0; i \u0026lt; 26; i++) 7 for (int j = 0; s[j]; j++) 8 if (s[j] == i + \u0026#39;a\u0026#39;) 9 dp[i + 1][j + 1] = dp[i][j] + 1; 10 else 11 dp[i + 1][j + 1] = max(dp[i][j + 1], dp[i + 1][j]); 12 cout \u0026lt;\u0026lt; 26 - dp[26][s.length()] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 13 return 0; 14}  ","date":"2021-02-05T09:38:23+08:00","image":"https://Luke2336.github.io/post/Diary/20210205/%E8%8D%89%E8%8E%93.jpg","permalink":"https://Luke2336.github.io/p/20210205/","title":"2021/02/05 日記"},{"content":"早上在清夜吃完永和豆漿後，就搭豪泰去北車，下高速公路時遇到車禍，塞了很久，下車的地點換到轉運站裡，之後就到館前路的台灣銀行開戶。\n開戶完之後，就去北一女找老師，等老師下班的時間，看了樂儀旗的練習。之後一起去了館前路的「咖啡弄」吃了午餐，覺得還滿棒的！之後我們到北門附近散步，逛了一些歷史建築，之後就各自回去了。\n在北車地下街逛了誠品，覺得頭有點昏，回到新竹後覺得很累。\n回宿舍後讀了德文，晚上去忠孝路的大潤發吃了烤雞，等了很久才出餐。\n開戶 - 台灣銀行館前分行  雙證件、印章、$1000 大概花 30 分鐘，官方說法是 40 分鐘。我隔壁的先生連 email 都沒有，感覺就要弄很久。 量完體溫後，保全會問你要辦什麼，說要開戶，就直接拿到號碼牌，完全不用等，就直接被叫號了。 會問職業，還有確認是否要在那家分行開戶，之後就一直簽名。 要下載兩個手機 app（強迫推銷），「台灣銀行」和「台灣行動支付」，行員會讓你在製作卡片時自己做這件事。結果行員聽到我沒用過行動支付，她似乎很訝異。 網銀要回家自己更換密碼開通。回去後發現自己的讀卡機不支援 macOS，一整個慘，之後回基隆再弄。  台北記憶倉庫 是日治時代留下的三井物產的倉庫，裡面有小酒吧，有賣一些精釀啤酒，還有一些歷史介紹。\n台博館鐵道部 因為要收門票，就沒有進去參觀了。\n","date":"2021-02-04T17:42:09+08:00","image":"https://Luke2336.github.io/post/Diary/20210204/1.jpg","permalink":"https://Luke2336.github.io/p/20210204/","title":"2021/02/04 日記"},{"content":"心情不太好，懶懶散散的不想做任何事。\nCode zerojudge:\n c303 c304  CSES 2195 - Convex Hull  這題是要求在凸包上的所有點，所以 cross() \u0026lt; 0 才需要拔掉。 cross 的部分要記得開 long long，不然會溢位。  1// monotone chain 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4struct point { 5 long long x, y; 6 point() {} 7 point(long long _x, long long _y) { x = _x, y = _y;} 8 point operator-(const point p) { 9 return point(x - p.x, y - p.y); 10 } 11 long long cross(const point \u0026amp;p) { 12 return x * p.y - y * p.x; 13 } 14}; 15static bool cmp(const point \u0026amp;a, const point \u0026amp;b) { 16 return (a.x \u0026lt; b.x) || (a.x == b.x \u0026amp;\u0026amp; a.y \u0026lt; b.y); 17} 18void convex_hull(vector\u0026lt;point\u0026gt; p, vector\u0026lt;point\u0026gt; \u0026amp;h) { 19 sort(p.begin(), p.end(), cmp); 20 h.resize(p.size() + 1); 21 int m = 0; 22 for (int i = 0; i \u0026lt; p.size(); i++) { 23 while (m \u0026gt;= 2 \u0026amp;\u0026amp; 24 (h[m - 1] - h[m - 2]).cross(p[i] - h[m - 2]) \u0026lt; 0) 25 m--; 26 h[m++] = p[i]; 27 } 28 for (int i = p.size() - 2, t = m + 1; i \u0026gt;= 0; i--) { 29 while (m \u0026gt;= t \u0026amp;\u0026amp; 30 (h[m - 1] - h[m - 2]).cross(p[i] - h[m - 2]) \u0026lt; 0) 31 m--; 32 h[m++] = p[i]; 33 } 34 if (p.size() \u0026gt; 1) m--; 35 h.resize(m); 36} 37int main () { 38 ios::sync_with_stdio(0), cin.tie(0); 39 int n; cin \u0026gt;\u0026gt; n; 40 vector\u0026lt;point\u0026gt; P(n); 41 for (int i = 0; i \u0026lt; n; i++) 42 cin \u0026gt;\u0026gt; P[i].x \u0026gt;\u0026gt; P[i].y; 43 vector\u0026lt;point\u0026gt; H; 44 convex_hull(P, H); 45 cout \u0026lt;\u0026lt; H.size() \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 46 for (point p : H) 47 cout \u0026lt;\u0026lt; p.x \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; p.y \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 48 return 0; 49}  ","date":"2021-02-03T14:10:52+08:00","permalink":"https://Luke2336.github.io/p/20210203/","title":"2021/02/03 日記"},{"content":"早上妹妹翻肚肚給我看。\n練習用 Python 解水題。\nzerojedge 水題：\n f043 e997 b969 c716 c717 c186 e051 c726 c760 c659 c929 f035 e340 e346 e357 e343 d244 f063 a275 c676 c705  從基隆回新竹，晚上去巨城吃飯。\n","date":"2021-02-02T10:19:00+08:00","image":"https://Luke2336.github.io/post/Diary/20210202/cat.jpg","permalink":"https://Luke2336.github.io/p/20210202/","title":"2021/02/02 日記"},{"content":"今天倦怠感很重，吃完早餐就簡單的睡個午覺，然後被吵醒幫小白目點眼藥水，然後又睡到傍晚。\n看了幾集 DW 的 ABC。\n晚餐去夜市吃牛排，然後去找小白目和小黑白玩，小黑白在我旁邊打轉，不時咬我的外套，小白目怕冷所以爬到腿上給抱抱。\n挖完耳朵後，量了耳溫，兩邊差 1.5 度。\n","date":"2021-02-02T10:12:07+08:00","permalink":"https://Luke2336.github.io/p/20210201/","title":"2021/02/01 日記"},{"content":"早上去吃早餐，順便摸了小黑白。\n刷了一些 Zerojudge 的水題。\n e948 e968 e926 f070 f345  更新了修課心得。\n傍晚去餵小乖，順便跟廟旁邊的小貓玩。\n晚餐吃了魚，還有卦菜雞。\n有點進入放假倦怠期\u0026hellip;\nKattis - Firefly 1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 int n, h; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; h; 7 vector\u0026lt;int\u0026gt; a(n); 8 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; a[i]; 9 vector\u0026lt;int\u0026gt; even(h + 1), odd(h + 1); 10 for (int i = 0; i \u0026lt; n; i += 2) 11 even[a[i]]++, odd[a[i + 1]]++; 12 for (int i = h - 2; i \u0026gt;= 1; i--) 13 even[i] += even[i + 1], odd[i] += odd[i + 1]; 14 int ans = n, cnt = 0; 15 for (int i = 1; i \u0026lt;= h; i++) { 16 int sum = odd[h - i + 1] + even[i]; 17 if (sum \u0026lt; ans) ans = sum, cnt = 1; 18 else if (sum == ans) cnt++; 19 } 20 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; cnt \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 21 return 0; 22}  ","date":"2021-01-31T10:17:31+08:00","permalink":"https://Luke2336.github.io/p/20210131/","title":"2021/01/31 日記"},{"content":"一早沒吃東西就直接搭車回基隆，回到家後睡了一覺。\n午餐吃了餛飩湯和乾麵，看完了神偷卡門。\n去公園看了貓，只有遇到小黑白，結果有兩個小屁孩一直追她。\n晚餐去瑞芳吃了米苔目，飯後吃了燒麻糬，回到家喝了杯梅酒就去睡了。\n","date":"2021-01-30T16:29:26+08:00","permalink":"https://Luke2336.github.io/p/20210130/","title":"2021/01/30 日記"},{"content":"Codeforces 10 D. LCIS dp[i][j] 為 a[1\u0026hellip;i], b[1\u0026hellip;j] 結尾為 b[j] 的 LCIS 的長度。\n$$dp_{i, j} := \\begin{cases} \\max_{p \u0026lt; j, b_{p} \u0026lt; b_{j}} dp_{i - 1, p} + 1 \u0026amp;, a_{i} = b_{j} \\\\ dp_{i - 1, j} \u0026amp;, \\text{otherwise}. \\end{cases}$$\n複雜度：O(nm)，n, m 為兩序列長度。\n1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 // INPUT 7 int L[2]; 8 vector\u0026lt;int\u0026gt; v[2]; 9 for (int i = 0; i \u0026lt; 2; i++) { 10 cin \u0026gt;\u0026gt; L[i]; 11 v[i].resize(L[i] + 1); 12 for (int j = 1; j \u0026lt;= L[i]; j++) 13 cin \u0026gt;\u0026gt; v[i][j]; 14 } 15 // LCIS 16 vector\u0026lt;vector\u0026lt;int\u0026gt; \u0026gt; dp(L[0] + 1, vector\u0026lt;int\u0026gt;(L[1] + 1)); 17 vector\u0026lt;vector\u0026lt;int\u0026gt; \u0026gt; par(L[0] + 1, vector\u0026lt;int\u0026gt;(L[1] + 1)); 18 for (int i = 1; i \u0026lt;= L[0]; i++) { 19 int p = 0; 20 for (int j = 1; j \u0026lt;= L[1]; j++) { 21 if (v[0][i] == v[1][j]) { 22 dp[i][j] = dp[i - 1][p] + 1; 23 par[i][j] = p; 24 } else { 25 dp[i][j] = dp[i - 1][j]; 26 par[i][j] = j; 27 if (v[0][i] \u0026gt; v[1][j] \u0026amp;\u0026amp; 28 dp[i - 1][j] \u0026gt; dp[i - 1][p]) 29 p = j; 30 } 31 } 32 } 33 // BACKTRACKING 34 int p = 0; 35 for (int j = 1; j \u0026lt;= L[1]; j++) 36 if (dp[L[0]][p] \u0026lt; dp[L[0]][j]) 37 p = j; 38 vector\u0026lt;int\u0026gt; ans; 39 for (int i = L[0]; i \u0026gt; 0; i--) { 40 if (v[0][i] == v[1][p] \u0026amp;\u0026amp; p != par[i][p]) 41 ans.push_back(v[0][i]); 42 p = par[i][p]; 43 } 44 cout \u0026lt;\u0026lt; ans.size() \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 45 for (int i = ans.size() - 1; i \u0026gt;= 0; i--) 46 cout \u0026lt;\u0026lt; ans[i] \u0026lt;\u0026lt; \u0026#34; \\n\u0026#34;[!i]; 47 return 0; 48}  ","date":"2021-01-29T12:05:24+08:00","permalink":"https://Luke2336.github.io/p/lcis/","title":"Longest Common Increasing Subsequence(LCIS)"},{"content":" 弄了寒訓的題單，研究了 LCIS。 研究轉系，發現歷年轉入資工大三的人極少。推測可能是因為需要修完必修，而必修不好加簽？ 晚上跟導師和師母去靠近東門那區吃飯。 飯後洗了衣服，又收拾了東西。 看完了甄嬛傳，順便補了一下夜叉姬的進度。  Codeforces 180 C. Letter 寫這題才發現 isupper() 不是回傳 0 或 1。\n1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4inline bool up(char c) {return isupper(c);} 5inline bool low(char c) {return islower(c);} 6int main() { 7 ios::sync_with_stdio(0), cin.tie(0); 8 string s; cin \u0026gt;\u0026gt; s; 9 int len = s.length(); 10 vector\u0026lt;int\u0026gt; dp[2]; 11 dp[0].resize(len), dp[1].resize(len); 12 dp[0][0] = low(s[0]), dp[1][0] = up(s[0]); 13 for (int i = 1; s[i]; i++) { 14 dp[0][i] = dp[0][i - 1] + low(s[i]); 15 dp[1][i] = min(dp[0][i - 1], dp[1][i - 1]) + up(s[i]); 16 } 17 cout \u0026lt;\u0026lt; min(dp[0][len - 1], dp[1][len - 1]) \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 18 return 0; 19}  筆記 - 近世代數 ","date":"2021-01-29T12:03:58+08:00","image":"https://Luke2336.github.io/post/Diary/20210129/algebra1.jpg","permalink":"https://Luke2336.github.io/p/20210129/","title":"2021/01/29 日記"},{"content":"早上洗個澡後，中午去隊練，結果 LinLee 又遲到一小時，真是的！\n晚餐吃了烤雞和冰淇淋，覺得很開心。 之後因為練習很累就早睡了。\n隊練 今天和 LinLee 和 LnadyLu 進行對練，打了 CF GYM 102785 - ICPC Central Russia Regional Contest (CRRC 18)。\n我寫了 pB，還有想了 pG 的轉移式。我很早就想出 pG 的狀態，LinLee 幫我想了轉移時的複雜度，不過要處理運算式很麻煩就是了，於是交給 LandyLu。\nLandyLu 自己解了不少偏向找規律的題目。\n   Problem  Solver     A 水題 LinLee   B BFS Kelly   C String LinLee   D     E Math Landy   F     G DP, String Landy, LinLee, Kelly   H 構造 Landy   I     J DP LinLee   K      pB. Gremlins attack!  題意：有 m 個人，及依序關 k 盞燈。人只能走在有關燈的地方，問最少要關幾盞燈時，至少有一個人能走到邊界？ 解法：BFS＋priority_queue，答案為走到邊界的路徑上，最大編號的燈。  1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef pair\u0026lt;int, int\u0026gt; pii; 5typedef pair\u0026lt;int, pii\u0026gt; piii; 6#define pb push_back 7int dx[4] = {1, -1, 0, 0}; 8int dy[4] = {0, 0, 1, -1}; 9int main() { 10 ios::sync_with_stdio(0), cin.tie(0); 11 int n, m, k; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m \u0026gt;\u0026gt; k; 12 int a[505][505], dis[505][505]; 13 memset(a, -1, sizeof(a)), memset(dis, -1, sizeof(dis)); 14 priority_queue\u0026lt;piii, vector\u0026lt;piii\u0026gt;, greater\u0026lt;piii\u0026gt; \u0026gt; pq; 15 for (int i = 0; i \u0026lt; m; i++) { 16 int x, y; cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y; 17 a[x][y] = dis[x][y] = 0; 18 pq.push(piii(0, pii(x, y))); 19 } 20 for (int i = 1; i \u0026lt;= k; i++) { 21 int x, y; cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y; 22 a[x][y] = i; 23 } 24 while (!pq.empty()) { 25 int x = pq.top().second.first; 26 int y = pq.top().second.second; 27 pq.pop(); 28 if (x == 0 || y == 0 || x == n - 1 || y == n - 1) { 29 cout \u0026lt;\u0026lt; dis[x][y] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 30 return 0; 31 } 32 for (int d = 0; d \u0026lt; 4; d++) { 33 int xx = x + dx[d], yy = y + dy[d]; 34 if (xx \u0026lt; 0 || xx \u0026gt;= n || yy \u0026lt; 0 || yy \u0026gt;= n) continue; 35 if (a[xx][yy] == -1) continue; 36 int tmp = max(a[xx][yy], dis[x][y]); 37 if (dis[xx][yy] == -1 || tmp \u0026lt; dis[xx][yy]) 38 dis[xx][yy] = tmp, 39 pq.push(piii(dis[xx][yy], pii(xx, yy))); 40 } 41 } 42 return 0; 43}  pG  題意：給定一個 n 以及一個布林運算式，此運算式會定義連續十個以內的位元的函數，求有多少個長度為 n 的 01 字串使得任意子字串都符合此運算式。 解法：枚舉長度及最後十位的狀態，因為每個狀態接下來只會補 0 或 1，所以轉移是 O(1)，狀態共 O(2^{10} n)。打表預處理每個狀態是否合法。  1#include \u0026lt;bits/stdc++.h\u0026gt;2#define int ll 3using namespace std; 4#define vt vector 5#define sz(x) int((x).size()) 6#define all(x) (x).begin(), (x).end() 7#define rall(x) (x).rbegin(), (x).rend() 8#define fi first 9#define se second 10using ll = long long; 11using pii = pair\u0026lt;int, int\u0026gt;; 12const ll MOD = (ll)1 \u0026lt;\u0026lt; 60; 13int n, p; 14string s; 15int eval(int x) { 16 int neg = 0, val = 1; 17 char op = 0; 18 while (p \u0026lt; sz(s)) { 19 if (isdigit(s[p])) { 20 int next = ((x \u0026gt;\u0026gt; (s[p] - \u0026#39;0\u0026#39;)) ^ neg) \u0026amp; 1; 21 neg = 0; 22 if (op == \u0026#39;\u0026amp;\u0026#39;) val \u0026amp;= next; 23 else if (op == \u0026#39;|\u0026#39;) val |= next; 24 else if (op == \u0026#39;+\u0026#39;) val ^= next; 25 else val = next; 26 p++; 27 } else if (s[p] == \u0026#39;(\u0026#39;) { 28 p++; 29 int next = (eval(x) ^ neg) \u0026amp; 1; 30 neg = 0; 31 if (op == \u0026#39;\u0026amp;\u0026#39;) val \u0026amp;= next; 32 else if (op == \u0026#39;|\u0026#39;) val |= next; 33 else if (op == \u0026#39;+\u0026#39;) val ^= next; 34 else val = next; 35 } else if (s[p] == \u0026#39;)\u0026#39;) { 36 p++; 37 return val; 38 } else if (s[p] == \u0026#39;-\u0026#39;) { 39 p++, neg ^= 1; 40 } else { 41 op = s[p++]; 42 } 43 } 44 return val; 45} 46void solve() { 47 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; s; 48 int k = 0; 49 for(char i = \u0026#39;9\u0026#39;, flag = 0; i \u0026gt;= \u0026#39;0\u0026#39;; i--){ 50 for(char j: s){ 51 if(i == j){ 52 k = i - \u0026#39;0\u0026#39;; 53 flag = 1; 54 break; 55 } 56 } 57 if(flag) break; 58 } 59 vector\u0026lt;int\u0026gt; tb(2 \u0026lt;\u0026lt; k); 60 for (int i = 0; i \u0026lt; (2 \u0026lt;\u0026lt; k); i++) { 61 p = 0; 62 tb[i] = eval(i); 63 } 64 int rolling = 1; 65 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; dp(2, vector\u0026lt;int\u0026gt;(1 \u0026lt;\u0026lt; (k + 1))); 66 for(int i = 0; i \u0026lt; (2 \u0026lt;\u0026lt; k); i++) 67 dp[not rolling][i] = tb[i]; 68 for(int i = 0; i \u0026lt; n - k - 1; i++){ 69 for(int j = 0; j \u0026lt; (2 \u0026lt;\u0026lt; k); j++) 70 dp[rolling][j] = 0; 71 for(int j = 0; j \u0026lt; (2 \u0026lt;\u0026lt; k); j++){ 72 int r = (j \u0026lt;\u0026lt; 1) % (1 \u0026lt;\u0026lt; (k + 1)); 73 dp[rolling][r] += dp[not rolling][j] * tb[r]; 74 dp[rolling][r + 1] += dp[not rolling][j] * tb[r + 1]; 75 dp[rolling][r] %= MOD; 76 dp[rolling][r + 1] %= MOD; 77 } 78 rolling ^= 1; 79 } 80 int output = 0; 81 for(int i = 0; i \u0026lt; (2 \u0026lt;\u0026lt; k); i++){ 82 output += dp[not rolling][i]; 83 output %= MOD; 84 } 85 cout \u0026lt;\u0026lt; output; 86} 87int32_t main() { 88 ios::sync_with_stdio(0), cin.tie(0); 89 solve(); 90}  ","date":"2021-01-29T10:06:55+08:00","image":"https://Luke2336.github.io/post/Diary/20210128/Dashboard.png","permalink":"https://Luke2336.github.io/p/20210128/","title":"2021/01/28 日記"},{"content":"睡到下午才起床，去了一趟生輔組交資料，之後吃了麥當勞，然後跟隊友勾寒訓的 DP 題單，晚上吃了壽司。\n","date":"2021-01-28T12:01:22+08:00","permalink":"https://Luke2336.github.io/p/20210127/","title":"2021/01/27 日記"},{"content":"看到德文一的成績出來了，拿了 A，可能是期末考考差了，希望下學期的德文二能拼到 A+。\n上週四從家裡寄限時信，結果今天都還沒到宿舍。\n早餐吃了燻雞蛋土司，午餐吃了麥當勞。下午寫了題，然後讀了代數的第一章，是在講同餘系，還有用輾轉相除法求解同餘方程式。\n晚上吃了火鍋。\n筆記 - 近世代數 Toggl 上週主要都在學 kotlin 和寫 PCCA 的寒假作業，希望寒假能恢復實作的能力。\nKattis Kattis - The Dragon of Loowater 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 int n, m; 5 while (cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m) { 6 if (!n \u0026amp;\u0026amp; !m) break; 7 vector\u0026lt;int\u0026gt; a(n), b(m); 8 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; a[i]; 9 for (int i = 0; i \u0026lt; m; i++) cin \u0026gt;\u0026gt; b[i]; 10 sort(a.begin(), a.end()); 11 sort(b.begin(), b.end()); 12 int ans = 0; 13 for (int i = 0, j = 0; i \u0026lt; n; i++) { 14 while (j \u0026lt; m \u0026amp;\u0026amp; a[i] \u0026gt; b[j]) ++j; 15 if (j \u0026lt; m) ans += b[j++]; 16 else { ans = -1; break;} 17 } 18 if (ans == -1) cout \u0026lt;\u0026lt; \u0026#34;Loowater is doomed!\\n\u0026#34;; 19 else cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 20 } 21 return 0; 22}  Kattis - Postal Delivery 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, int\u0026gt; pii; 4typedef long long ll; 5ll solve(vector\u0026lt;pii\u0026gt; \u0026amp;v, int k) { 6 ll ret = 0; 7 sort(v.begin(), v.end()); 8 while (v.size()) { 9 int cap = k; 10 ret += v.back().first; 11 while (v.size() \u0026amp;\u0026amp; cap) { 12 int load = min(cap, v.back().second); 13 v.back().second -= load, cap -= load; 14 if (!v.back().second) v.pop_back(); 15 } 16 } 17 return ret; 18} 19int main () { 20 int n, k; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; k; 21 vector\u0026lt;pii\u0026gt; v[2]; 22 for (int i = 0; i \u0026lt; n; i++) { 23 int x, t; cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; t; 24 if (x \u0026lt; 0) v[1].push_back(pii(-x, t)); 25 else v[0].push_back(pii(x, t)); 26 } 27 cout \u0026lt;\u0026lt; (solve(v[0], k) + solve(v[1], k)) * 2 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 28 return 0; 29}  Kattis - Ladice  Union-Find Tree，覺得題目出得很好。  1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3struct UnionFind { 4 vector\u0026lt;int\u0026gt; p, r, sz; 5 UnionFind(int n) { 6 p.resize(n), r.resize(n, 1), sz.resize(n, 1); 7 for (int i = 0; i \u0026lt; n; i++) p[i] = i; 8 } 9 int par(int x) { 10 while (x != p[x]) x = p[x]; 11 return x; 12 } 13 int size(int x) { return sz[par(x)]; } 14 void add(int x) { sz[par(x)]--; } 15 void uni(int a, int b) { 16 a = par(a), b = par(b); 17 if (a == b) return; 18 if (r[a] \u0026gt; r[b]) { int t = a; a = b; b = t; } 19 else if (r[a] == r[b]) r[b]++; 20 p[a] = b, sz[b] += sz[a]; 21 } 22}; 23int main () { 24 ios::sync_with_stdio(0), cin.tie(0); 25 int n, L; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; L; 26 UnionFind uf(L); 27 for (int i = 0; i \u0026lt; n; i++) { 28 int a, b; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 29 uf.uni(--a, --b); 30 if (uf.size(a)) uf.add(a), cout \u0026lt;\u0026lt; \u0026#34;LADICA\\n\u0026#34;; 31 else cout \u0026lt;\u0026lt; \u0026#34;SMECE\\n\u0026#34;; 32 } 33 return 0; 34}  Kattis - Misa 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 int r, s; cin \u0026gt;\u0026gt; r \u0026gt;\u0026gt; s; 5 vector\u0026lt;string\u0026gt; a(r); 6 for (int i = 0; i \u0026lt; r; i++) cin \u0026gt;\u0026gt; a[i]; 7 int mx = 0, sum = 0; 8 for (int i = 0; i \u0026lt; r; i++) { 9 for (int j = 0; j \u0026lt; s; j++) { 10 int cnt = 0; 11 for (int dx = -1; dx \u0026lt;= 1; dx++) { 12 for (int dy = -1; dy \u0026lt;= 1; dy++) { 13 int x = i + dx, y = j + dy; 14 if (x \u0026lt; 0 || y \u0026lt; 0 || 15 x \u0026gt;= r || y \u0026gt;= s) continue; 16 if (a[x][y] == \u0026#39;o\u0026#39;) cnt++; 17 } 18 } 19 if (a[i][j] == \u0026#39;o\u0026#39;) sum += cnt - 1; 20 else mx = max(mx, cnt); 21 } 22 } 23 cout \u0026lt;\u0026lt; sum / 2 + mx \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 24 return 0; 25}  Kattis - Relocation 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 ios::sync_with_stdio(0), cin.tie(0); 5 int n, q; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; q; 6 vector\u0026lt;int\u0026gt; v(n + 1); 7 for (int i = 1; i \u0026lt;= n; i++) 8 cin \u0026gt;\u0026gt; v[i]; 9 while (q--) { 10 int op, a, b; cin \u0026gt;\u0026gt; op \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 11 if (op == 1) v[a] = b; 12 else cout \u0026lt;\u0026lt; abs(v[a] - v[b]) \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 13 } 14 return 0; 15}  ","date":"2021-01-26T10:38:26+08:00","permalink":"https://Luke2336.github.io/p/20210126/","title":"2021/01/26 日記"},{"content":"OS 的總成績出來了，被調了 7 分左右。\n晚餐吃了將軍村的「翟九」紅燒牛肉麵，覺得價位偏高，但肉質偏祡，湯味略苦，不合胃口。\n圖書館 早上去圖書館還書，順便借了幾本書。\n含羞草開花 含羞草開花了，但看到時已經謝了一半。\n系羽 下午 14:00 - 15:40 去舊館打球，覺得退步滿多的。去的人不多，只有五六個，打了幾場雙打。但也能趁現在改一下打球的風格，後場除了切球，還多試了長球。\n導師 打完球後去請導師簽文件，順便聊了一個鐘頭。有問了一下有沒有推薦的機率論，老師推薦了 Ross 的 Introduction to Probability Models，老師還多借了另一本書給我讀。\nKattis - Average Speed 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int T(string s) { 4 int h = (s[0] - \u0026#39;0\u0026#39;) * 10 + s[1] - \u0026#39;0\u0026#39;; 5 int m = (s[3] - \u0026#39;0\u0026#39;) * 10 + s[4] - \u0026#39;0\u0026#39;; 6 int ss = (s[6] - \u0026#39;0\u0026#39;) * 10 + s[7] - \u0026#39;0\u0026#39;; 7 return (h * 60 + m) * 60 + ss; 8} 9void input(string s, int \u0026amp;op, int \u0026amp;speed, int \u0026amp;time) { 10 stringstream ss; 11 ss.clear(); ss.str(s); 12 ss \u0026gt;\u0026gt; s; 13 if (ss \u0026gt;\u0026gt; speed) op = 0; 14 else op = 1; 15 time = T(s); 16} 17int main () { 18 int cnt = 0, speed = 0, last = 0; 19 while (1) { 20 string s; 21 getline(cin, s); 22 if (cin.fail()) break; 23 int op, time, new_speed; 24 input(s, op, new_speed, time); 25 if (op) { 26 double dis = (cnt + (time - last) * speed) / 3600.0; 27 cout \u0026lt;\u0026lt; s \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; fixed \u0026lt;\u0026lt; setprecision(2) \u0026lt;\u0026lt; dis \u0026lt;\u0026lt; \u0026#34; km\\n\u0026#34;; 28 } else { 29 cnt += (time - last) * speed; 30 speed = new_speed; 31 last = time; 32 } 33 } 34 return 0; 35}  Kattis - Circuit Math 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 ios::sync_with_stdio(0); cin.tie(0); 5 int n; cin \u0026gt;\u0026gt; n; 6 vector\u0026lt;char\u0026gt; r(n); 7 for (int i = 0; i \u0026lt; n; i++) 8 cin \u0026gt;\u0026gt; r[i]; 9 char c; 10 vector\u0026lt;bool\u0026gt; v; 11 while (cin \u0026gt;\u0026gt; c) { 12 if (c == \u0026#39;*\u0026#39;) { 13 bool t = v.back(); 14 v.pop_back(); 15 v.back() = v.back() \u0026amp;\u0026amp; t; 16 } else if (c == \u0026#39;+\u0026#39;) { 17 bool t = v.back(); 18 v.pop_back(); 19 v.back() = v.back() || t; 20 } else if (c == \u0026#39;-\u0026#39;) { 21 v.back() = !v.back(); 22 } else { 23 v.push_back(r[c - \u0026#39;A\u0026#39;] == \u0026#39;T\u0026#39;); 24 } 25 } 26 cout \u0026lt;\u0026lt; \u0026#34;FT\u0026#34;[v.back()] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 27 return 0; 28}  Kattis - Three Powers 1while True: 2 n = int(input()) 3 if n == 0: 4 break 5 n -= 1 6 now = 1 7 L = [] 8 while n != 0: 9 if n \u0026amp; 1 == 1: 10 L.append(now) 11 n \u0026gt;\u0026gt;= 1 12 now *= 3 13 ans = \u0026#39;\u0026#39; 14 for i in L: 15 ans += \u0026#39; \u0026#39; + str(i) + \u0026#39;,\u0026#39; 16 print(\u0026#39;{\u0026#39; + ans[:-1] + \u0026#39; }\u0026#39;) Kattis - Quick Brown Fox 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 ios::sync_with_stdio(0); cin.tie(0); 5 int T; cin \u0026gt;\u0026gt; T; cin.ignore(); 6 while (T--) { 7 string s; getline(cin, s); 8 int cnt[26] = {}; 9 for (char c : s) 10 if (isupper(c)) cnt[c - \u0026#39;A\u0026#39;]++; 11 else if (islower(c)) cnt[c - \u0026#39;a\u0026#39;]++; 12 string ans = \u0026#34;\u0026#34;; 13 for (int i = 0; i \u0026lt; 26; i++) 14 if (!cnt[i]) ans += i + \u0026#39;a\u0026#39;; 15 if (ans.length()) cout \u0026lt;\u0026lt; \u0026#34;missing \u0026#34; \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 16 else cout \u0026lt;\u0026lt; \u0026#34;pangram\\n\u0026#34;; 17 } 18 return 0; 19}  Kattis - Square Peg in a Round Hole 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 int n, m, k; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m \u0026gt;\u0026gt; k; 5 vector\u0026lt;int\u0026gt; R(n); 6 for (int i = 0; i \u0026lt; n; i++) { 7 cin \u0026gt;\u0026gt; R[i]; 8 R[i] *= 4 * R[i]; 9 } 10 priority_queue\u0026lt;int\u0026gt; pq; 11 for (int i = 0; i \u0026lt; m; i++) { 12 int c; cin \u0026gt;\u0026gt; c; 13 pq.push(4 * c * c); 14 } 15 for (int i = 0; i \u0026lt; k; i++) { 16 int s; cin \u0026gt;\u0026gt; s; 17 pq.push(2 * s * s); 18 } 19 sort(R.begin(), R.end()); 20 reverse(R.begin(), R.end()); 21 int ans = 0; 22 for (int i = 0; i \u0026lt; n; i++) { 23 while (!pq.empty() \u0026amp;\u0026amp; pq.top() \u0026gt;= R[i]) 24 pq.pop(); 25 if (!pq.empty()) 26 pq.pop(), ans++; 27 } 28 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 29 return 0; 30}  Kattis - Radio Commercials 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 int n, p; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; p; 5 int ans = 0, cnt = 0; 6 for (int i = 0; i \u0026lt; n; i++) { 7 int x; cin \u0026gt;\u0026gt; x; 8 cnt += x - p; 9 ans = max(ans, cnt); 10 cnt = max(cnt, 0); 11 } 12 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 13 return 0; 14}  Kattis - Ultra-QuickSort 算逆序數對數量，9 ~ 11 行寫起來略卡。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4vector\u0026lt;ll\u0026gt; v, tmp; 5ll inv(int l, int r) { 6 if (l \u0026gt;= r) return 0; 7 int m = (l + r) \u0026gt;\u0026gt; 1; 8 ll ret = inv(l, m) + inv(m + 1, r); 9 for (int i = l, j = m + 1, k = l; k \u0026lt;= r; k++) 10 if (i \u0026gt; m || (j \u0026lt;= r \u0026amp;\u0026amp; v[i] \u0026gt; v[j])) tmp[k] = v[j++]; 11 else tmp[k] = v[i++], ret += j - m - 1; 12 for (int i = l; i \u0026lt;= r; i++) v[i] = tmp[i]; 13 return ret; 14} 15int main () { 16 int n; cin \u0026gt;\u0026gt; n; 17 v.resize(n), tmp.resize(n); 18 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; v[i]; 19 cout \u0026lt;\u0026lt; inv(0, n - 1) \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 20 return 0; 21}  ","date":"2021-01-25T13:38:47+08:00","image":"https://Luke2336.github.io/post/Diary/20210125/flower.jpg","permalink":"https://Luke2336.github.io/p/20210125/","title":"2021/01/25 日記"},{"content":"雙曲線說他最近很忙，沒空用寒訓的東西，也沒空對練，讓我覺得壓力有些大。\n看到 Google Code Jam to I/O for Women 2021 開放註冊了，但是辦在 2/13 23:00，應該沒得打了 QAQ\n晚餐原本想吃炸雞腿，但今天沒賣，於是只吃了豬肉丼。之後很餓便把夏天冰的百香果拿出來吃，然後又下去全家買了雞肉義大利麵。\n下午在寫寒假作業，已經寫到 17 題了，但離 100 題好遙遠。\n Kattis - Almost Union-Find Kattis - Thank God it’s Friday Kattis - Natrij Kattis - Semafori Kattis - Triple Texting Kattis - Functional Fun Kattis - Timebomb  Kattis - Almost Union-Find 1 ≤ n, m ≤ 1e5，有三種操作：\n 1 p q 代表將 p 和 q 所屬的集合合併。 2 p q 代表將 p 移到 q 所屬的集合。 3 p 為查詢 p 所屬集合大小及元素和。  操作 2 較難處理，方法為創出新的節點，並將元素指向新的節點。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 ios::sync_with_stdio(0); cin.tie(0); 5 int n, m; 6 while (cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m) { 7 vector\u0026lt;long long\u0026gt; sum(n + 1); 8 vector\u0026lt;int\u0026gt; sz(n + 1, 1), par(n + 1), point(n + 1); 9 for (int i = 1; i \u0026lt;= n; i++) 10 par[i] = sum[i] = point[i] = i; 11 while (m--) { 12 int op, p, q; cin \u0026gt;\u0026gt; op; 13 if (op == 2) { 14 cin \u0026gt;\u0026gt; p \u0026gt;\u0026gt; q; 15 int pp = p; 16 pp = point[pp], q = point[q]; 17 while (pp != par[pp]) pp = par[pp]; 18 while (q != par[q]) q = par[q]; 19 if (pp == q) continue; 20 sz[pp]--, sum[pp] -= p; 21 point[p] = par.size(); 22 par.push_back(q); 23 sz[q]++, sum[q] += p; 24 } else if (op == 1) { 25 cin \u0026gt;\u0026gt; p \u0026gt;\u0026gt; q; 26 p = point[p], q = point[q]; 27 while (p != par[p]) p = par[p]; 28 while (q != par[q]) q = par[q]; 29 if (p == q) continue; 30 if (sz[p] \u0026gt; sz[q]) { 31 int t = p; p = q; q = t; 32 } 33 par[p] = q; 34 sum[q] += sum[p]; 35 sz[q] += sz[p]; 36 } else if (op == 3) { 37 cin \u0026gt;\u0026gt; p; 38 p = point[p]; 39 while (p != par[p]) p = par[p]; 40 cout \u0026lt;\u0026lt; sz[p] \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; sum[p] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 41 } 42 } 43 } 44 return 0; 45}  Kattis - Thank God it’s Friday 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3string M[12] = {\u0026#34;JAN\u0026#34;, \u0026#34;FEB\u0026#34;, \u0026#34;MAR\u0026#34;, \u0026#34;APR\u0026#34;, \u0026#34;MAY\u0026#34;, \u0026#34;JUN\u0026#34;, 4 \u0026#34;JUL\u0026#34;, \u0026#34;AUG\u0026#34;, \u0026#34;SEP\u0026#34;, \u0026#34;OCT\u0026#34;, \u0026#34;NOV\u0026#34;, \u0026#34;DEC\u0026#34;}; 5int cnt[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}; 6string W[7] = {\u0026#34;MON\u0026#34;, \u0026#34;TUE\u0026#34;, \u0026#34;WED\u0026#34;, \u0026#34;THU\u0026#34;, \u0026#34;FRI\u0026#34;, \u0026#34;SAT\u0026#34;, \u0026#34;SUN\u0026#34;}; 7int main () { 8 int d; 9 string m, w; 10 cin \u0026gt;\u0026gt; d \u0026gt;\u0026gt; m \u0026gt;\u0026gt; w; 11 for (int i = 0; M[i] != m; i++) 12 d += cnt[i]; 13 int day = d - 1; 14 for (int i = 0; W[i] != w; i++) 15 day++; 16 day %= 7; 17 if (m == M[0] || m == M[1]) { 18 if (day == 4) cout \u0026lt;\u0026lt; \u0026#34;TGIF\\n\u0026#34;; 19 else cout \u0026lt;\u0026lt; \u0026#34;:(\\n\u0026#34;; 20 } else { 21 if (day == 4 || day == 3) cout \u0026lt;\u0026lt; \u0026#34;not sure\\n\u0026#34;; 22 else cout \u0026lt;\u0026lt; \u0026#34;:(\\n\u0026#34;; 23 } 24 return 0; 25}  Kattis - Natrij 1h1, m1, s1 = [int(i) for i in input().split(\u0026#39;:\u0026#39;)] 2h2, m2, s2 = [int(i) for i in input().split(\u0026#39;:\u0026#39;)] 3s = ((h2 - h1 + 24) * 60 + m2 - m1) * 60 + s2 - s1 4if s % (24 * 3600) == 0: 5 print(\u0026#34;24:00:00\u0026#34;) 6else: 7 print(\u0026#39;%02d:%02d:%02d\u0026#39; % (s // 3600 % 24, s // 60 % 60, s % 60) ) Kattis - Semafori 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, int\u0026gt; pii; 4typedef pair\u0026lt;int, pii\u0026gt; piii; 5#define x first 6#define y second 7int main () { 8 ios::sync_with_stdio(0), cin.tie(0); 9 int n, L; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; L; 10 vector\u0026lt;piii\u0026gt; p(n); 11 for (int i = 0; i \u0026lt; n; i++) 12 cin \u0026gt;\u0026gt; p[i].x \u0026gt;\u0026gt; p[i].y.x \u0026gt;\u0026gt; p[i].y.y; 13 sort(p.begin(), p.end()); 14 int cnt = 0; 15 for (int i = 0; i \u0026lt; n; i++) { 16 int t = p[i].x + cnt; 17 int cycle = p[i].y.x + p[i].y.y; 18 if (t % cycle \u0026lt; p[i].y.x) 19 cnt += p[i].y.x - t % cycle; 20 } 21 cout \u0026lt;\u0026lt; L + cnt \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 22 return 0; 23}  Kattis - Triple Texting 1s = input() 2L = len(s) // 3 3for i in range(L): 4 if s[i] == s[i + L]: 5 print(s[i], end = \u0026#39;\u0026#39;) 6 else: 7 print(s[i + L + L], end = \u0026#39;\u0026#39;) Kattis - Functional Fun 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3bool input(set\u0026lt;string\u0026gt; \u0026amp;st) { 4 string s; cin \u0026gt;\u0026gt; s; 5 if (cin.fail()) return false; 6 getline(cin, s); 7 stringstream ss; 8 ss.clear(); ss.str(s); 9 while (ss \u0026gt;\u0026gt; s) st.insert(s); 10 return true; 11} 12int main () { 13 ios::sync_with_stdio(0); cin.tie(0); 14 while (1) { 15 set \u0026lt;string\u0026gt; domain, codomain; 16 if (!input(domain) || !input(codomain)) break; 17 int sz1 = domain.size(), sz2 = codomain.size(); 18 int m; cin \u0026gt;\u0026gt; m; 19 bool surjective = true, injective = true; 20 bool function = true; 21 map\u0026lt;string, string\u0026gt; mp; 22 while (m--) { 23 string x, y, tmp; cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; tmp \u0026gt;\u0026gt; y; 24 if (mp.find(x) != mp.end()) { 25 if (mp[x] != y) function = false; 26 else continue; 27 } 28 mp[x] = y; 29 if (!codomain.count(y)) injective = false; 30 else codomain.erase(y); 31 } 32 if (codomain.size()) surjective = false; 33 if (!function) cout \u0026lt;\u0026lt; \u0026#34;not a function\\n\u0026#34;; 34 else if (injective \u0026amp;\u0026amp; surjective) cout \u0026lt;\u0026lt; \u0026#34;bijective\\n\u0026#34;; 35 else if (injective) cout \u0026lt;\u0026lt; \u0026#34;injective\\n\u0026#34;; 36 else if (surjective) cout \u0026lt;\u0026lt; \u0026#34;surjective\\n\u0026#34;; 37 else cout \u0026lt;\u0026lt; \u0026#34;neither injective nor surjective\\n\u0026#34;; 38 } 39 return 0; 40}  Kattis - Timebomb 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3string digit[5] = {\u0026#34;*** * *** *** * * *** *** *** *** *** \u0026#34;, 4 \u0026#34;* * * * * * * * * * * * * * \u0026#34;, 5 \u0026#34;* * * *** *** *** *** *** * *** *** \u0026#34;, 6 \u0026#34;* * * * * * * * * * * * * \u0026#34;, 7 \u0026#34;*** * *** *** * *** *** * *** *** \u0026#34;}; 8int main () { 9 string s[5]; 10 for (int i = 0; i \u0026lt; 5; i++) { 11 getline(cin, s[i]); 12 s[i] += \u0026#34; \u0026#34;; 13 } 14 int cnt = 0, len = s[0].length() / 4; 15 for (int i = 0; i \u0026lt; len; i++) { 16 int d = -1; 17 for (int j = 0; j \u0026lt;= 9; j++) { 18 bool check = true; 19 for (int x = 0; x \u0026lt; 5 \u0026amp;\u0026amp; check; x++) 20 for (int y = 0; y \u0026lt; 4 \u0026amp;\u0026amp; check; y++) 21 if (s[x][i * 4 + y] != digit[x][j * 4 + y]) 22 check = false; 23 if (check) {d = j; break;} 24 } 25 if (d == -1) { cout \u0026lt;\u0026lt; \u0026#34;BOOM!!\\n\u0026#34;; return 0;} 26 else cnt = cnt * 10 + d; 27 } 28 if (cnt % 6) cout \u0026lt;\u0026lt; \u0026#34;BOOM!!\\n\u0026#34;; 29 else cout \u0026lt;\u0026lt; \u0026#34;BEER!!\\n\u0026#34;; 30 return 0; 31}  ","date":"2021-01-24T14:34:01+08:00","permalink":"https://Luke2336.github.io/p/20210124/","title":"2021/01/24 日記"},{"content":"今天新竹下著綿綿細雨，早上去了竹東，中午去台中曬太陽。\n不知道為什麼昨晚就覺得身體發熱，今天白天甚是疲倦。\n","date":"2021-01-24T01:16:13+08:00","permalink":"https://Luke2336.github.io/p/20210123/","title":"2021/01/23 日記"},{"content":"今天都在刷 PCCA 的寒假作業。\n晚餐吃了一點串燒，喝了可爾必思的氣泡口味。\nKattis - Jane Eyre 覺得 input 格式很難處理～\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;string, int\u0026gt; psi; 4typedef pair\u0026lt;int, psi\u0026gt; pisi; 5typedef long long ll; 6psi split(string s) { 7 bool flag = false; 8 for (int i = 0; s[i]; i++) { 9 if (flag \u0026amp;\u0026amp; s[i] == \u0026#39; \u0026#39;) s[i] = \u0026#39;$\u0026#39;; 10 else if (s[i] == \u0026#39;\\\u0026#34;\u0026#39;) { 11 if (flag) break; 12 flag = true; 13 } 14 } 15 stringstream ss; 16 ss.clear(); ss.str(s); 17 string name; 18 int page; 19 ss \u0026gt;\u0026gt; name \u0026gt;\u0026gt; page; 20 for (int i = 0; name[i]; i++) 21 if (name[i] == \u0026#39;$\u0026#39;) name[i] = \u0026#39; \u0026#39;; 22 return psi(name, page); 23} 24int main () { 25 ios::sync_with_stdio(0), cin.tie(0); 26 int n, m, k; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m \u0026gt;\u0026gt; k; 27 priority_queue\u0026lt;psi, vector\u0026lt;psi\u0026gt;, greater\u0026lt;psi\u0026gt; \u0026gt; pq; 28 psi goal = psi(\u0026#34;\\\u0026#34;Jane Eyre\\\u0026#34;\u0026#34;, k); 29 pq.push(goal); 30 for (int i = 0; i \u0026lt; n; i++) { 31 string s1, s2; 32 cin \u0026gt;\u0026gt; s1; 33 getline(cin, s2); 34 pq.push(split(s1 + s2)); 35 } 36 priority_queue\u0026lt;pisi, vector\u0026lt;pisi\u0026gt;, greater\u0026lt;pisi\u0026gt; \u0026gt; pq2; 37 for (int i = 0; i \u0026lt; m; i++) { 38 int t; cin \u0026gt;\u0026gt; t; 39 string s; getline(cin, s); 40 pq2.push(pisi(t, split(s))); 41 } 42 ll time = 0; 43 while (1) { 44 while (!pq2.empty()) { 45 if (pq.empty() || pq2.top().first \u0026lt;= time) { 46 pq.push(pq2.top().second); 47 pq2.pop(); 48 } else break; 49 } 50 if (pq.empty()) break; 51 time += pq.top().second; 52 if (pq.top() == goal) break; 53 pq.pop(); 54 } 55 cout \u0026lt;\u0026lt; time \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 56 return 0; 57}  Kattis - Sim 原本想用 Linked List 做，但後來發現 deque 比較好寫。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 ios::sync_with_stdio(0); cin.tie(0); 5 int T; cin \u0026gt;\u0026gt; T; cin.ignore(); 6 while (T--) { 7 string s; 8 getline(cin, s); 9 deque\u0026lt;string\u0026gt; dq; 10 dq.push_front(\u0026#34;\u0026#34;); 11 int state = 0; 12 for (int i = 0; s[i]; i++) { 13 if (s[i] == \u0026#39;\u0026lt;\u0026#39;) { 14 if (!state) { 15 if (dq.front() != \u0026#34;\u0026#34;) 16 dq.front().pop_back(); 17 } else { 18 if (dq.back() != \u0026#34;\u0026#34;) 19 dq.back().pop_back(); 20 } 21 } else if (s[i] == \u0026#39;[\u0026#39;) { 22 if (dq.front() != \u0026#34;\u0026#34;) 23 dq.push_front(\u0026#34;\u0026#34;); 24 state = 0; 25 } else if (s[i] == \u0026#39;]\u0026#39;) { 26 state = -1; 27 } else { 28 if (state) dq.back().push_back(s[i]); 29 else dq.front().push_back(s[i]); 30 } 31 } 32 string ans; 33 while (!dq.empty()) { 34 ans += dq.front(); 35 dq.pop_front(); 36 } 37 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 38 } 39 return 0; 40}  Kattis - Teque 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 ios::sync_with_stdio(0); cin.tie(0); 5 int N; cin \u0026gt;\u0026gt; N; 6 deque\u0026lt;int\u0026gt; dq1, dq2; 7 while (N--) { 8 string op; cin \u0026gt;\u0026gt; op; 9 int x; cin \u0026gt;\u0026gt; x; 10 if (op == \u0026#34;push_back\u0026#34;) { 11 dq2.push_back(x); 12 } else if (op == \u0026#34;push_front\u0026#34;) { 13 dq1.push_front(x); 14 } else if (op == \u0026#34;push_middle\u0026#34;) { 15 int sz1 = (dq1.size() + dq2.size() + 1) / 2; 16 while (dq1.size() \u0026lt; sz1) { 17 dq1.push_back(dq2.front()); 18 dq2.pop_front(); 19 } 20 while (dq1.size() \u0026gt; sz1) { 21 dq2.push_front(dq1.back()); 22 dq1.pop_back(); 23 } 24 dq1.push_back(x); 25 } else if (op == \u0026#34;get\u0026#34;) { 26 if (dq1.size() \u0026gt; x) 27 cout \u0026lt;\u0026lt; dq1[x] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 28 else cout \u0026lt;\u0026lt; dq2[x - dq1.size()] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 29 } 30 } 31 return 0; 32}  Kattis - Continuous Median 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 ios::sync_with_stdio(0); cin.tie(0); 5 int T; cin \u0026gt;\u0026gt; T; 6 while (T--) { 7 int n; cin \u0026gt;\u0026gt; n; 8 priority_queue\u0026lt;int\u0026gt; pq1; 9 priority_queue\u0026lt;int, vector\u0026lt;int\u0026gt;, greater\u0026lt;int\u0026gt; \u0026gt; pq2; 10 pq1.push(-1), pq2.push(2e9); 11 long long ans = 0; 12 for (int i = 0; i \u0026lt; n; i++) { 13 int x; cin \u0026gt;\u0026gt; x; 14 if (pq2.size() \u0026gt;= pq1.size()) pq1.push(x); 15 else pq2.push(x); 16 while (pq1.top() \u0026gt; pq2.top()) { 17 pq1.push(pq2.top()); 18 pq2.push(pq1.top()); 19 pq1.pop(), pq2.pop(); 20 } 21 if (i \u0026amp; 1) ans += (pq1.top() + pq2.top()) / 2; 22 else ans += pq1.top(); 23 } 24 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 25 } 26 return 0; 27}  ","date":"2021-01-22T15:27:14+08:00","permalink":"https://Luke2336.github.io/p/20210122/","title":"2021/01/22 日記"},{"content":"下午收到國際處通知，交換的第一志願上了，北京大學 2022 Spring。不過還很猶豫，拿不定主意，因此還沒跟家人講。\n晚上去吃了和味，然後給人按摩了一小時，覺得小腿和肩膀超痠的。\nKattis - Pivot 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 ios::sync_with_stdio(0), cin.tie(0); 5 int n; cin \u0026gt;\u0026gt; n; 6 vector\u0026lt;int\u0026gt; a(n); 7 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; a[i]; 8 vector\u0026lt;bool\u0026gt; check(n, true); 9 int mx = a[0]; 10 for (int i = 0; i \u0026lt; n; i++) { 11 if (a[i] \u0026lt; mx) check[i] = false; 12 mx = max(mx, a[i]); 13 } 14 int mn = a[n - 1]; 15 for (int i = n - 1; i \u0026gt;= 0; i--) { 16 if (a[i] \u0026gt; mn) check[i] = false; 17 mn = min(mn, a[i]); 18 } 19 int cnt = 0; 20 for (int i = 0; i \u0026lt; n; i++) 21 cnt += check[i]; 22 cout \u0026lt;\u0026lt; cnt \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 23 return 0; 24}  Kattis - Prva 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 ios::sync_with_stdio(0), cin.tie(0); 5 int r, c; 6 cin \u0026gt;\u0026gt; r \u0026gt;\u0026gt; c; 7 vector\u0026lt;string\u0026gt; v(r); 8 for (int i = 0; i \u0026lt; r; i++) 9 cin \u0026gt;\u0026gt; v[i]; 10 string ans = \u0026#34;{\u0026#34;; 11 for (int i = 0; i \u0026lt; r; i++) { 12 string tmp = \u0026#34;\u0026#34;; 13 for (int j = 0; j \u0026lt; c; j++) { 14 if (v[i][j] == \u0026#39;#\u0026#39;) { 15 if (tmp.length() \u0026gt;= 2) 16 ans = min(ans, tmp); 17 tmp = \u0026#34;\u0026#34;; 18 } else tmp += v[i][j]; 19 } 20 if (tmp.length() \u0026gt;= 2) 21 ans = min(ans, tmp); 22 } 23 for (int j = 0; j \u0026lt; c; j++) { 24 string tmp = \u0026#34;\u0026#34;; 25 for (int i = 0; i \u0026lt; r; i++) { 26 if (v[i][j] == \u0026#39;#\u0026#39;) { 27 if (tmp.length() \u0026gt;= 2) 28 ans = min(ans, tmp); 29 tmp = \u0026#34;\u0026#34;; 30 } else tmp += v[i][j]; 31 } 32 if (tmp.length() \u0026gt;= 2) 33 ans = min(ans, tmp); 34 } 35 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 36 return 0; 37}  ","date":"2021-01-21T11:50:28+08:00","permalink":"https://Luke2336.github.io/p/20210121/","title":"2021/01/21 日記"},{"content":"因為口腔靠近喉嚨的部分痛了好幾天，所以去看了學校的醫生，然後醫生認為是智齒發炎。覺得有點煩，畢竟要去看牙醫很麻煩，要先預約，然後又要痛個好幾天。\n晚上吃了烤雞和冰淇淋，但心情還是很煩悶。\nKattis - Printing Costs 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 string s = \u0026#34; !\\\u0026#34;#$%\u0026amp;\\\u0026#39;()*+,-./0123456789:;\u0026lt;=\u0026gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u0026#34;; 5 int a[] = {0, 9, 6, 24, 29, 22, 6 24, 3, 12, 12 ,17, 13, 7 7, 7, 4, 10, 22, 19, 8 22, 23, 21, 27, 26, 16, 9 23, 26, 8, 11, 10, 14, 10 10, 15, 32, 24, 29, 20, 11 26, 26, 20, 25, 25, 18, 12 18, 21, 16, 28, 25, 26, 13 23, 31, 28, 25, 16, 23, 14 19, 26, 18, 14, 22, 18, 15 10, 18, 7, 8, 3, 23, 16 25, 17, 25, 23, 18, 30, 17 21, 15, 20, 21, 16, 22, 18 18, 20, 25, 25, 13, 21, 19 17, 17, 13, 19, 13, 24, 20 19, 18, 12, 18, 9 }; 21 ios::sync_with_stdio(0); cin.tie(0); 22 string input; 23 while (1) { 24 getline(cin, input); 25 if (cin.fail()) break; 26 int cnt = 0; 27 for (int i = 0; input[i]; i++) 28 for (int j = 0; s[j]; j++) 29 if (input[i] == s[j]) { 30 cnt += a[j]; 31 break; 32 } 33 cout \u0026lt;\u0026lt; cnt \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 34 } 35 return 0; 36}  Kattis - Touchscreen Keyboard 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3 4string board[3] = {\u0026#34;qwertyuiop\u0026#34;, \u0026#34;asdfghjkl\u0026#34;, \u0026#34;zxcvbnm\u0026#34;}; 5 6int x[26], y[26]; 7 8int main () { 9 for (int i = 0; i \u0026lt; 3; i++) { 10 for (int j = 0; board[i][j]; j++) { 11 int k = board[i][j] - \u0026#39;a\u0026#39;; 12 x[k] = i, y[k] = j; 13 } 14 } 15 ios::sync_with_stdio(0); cin.tie(0); 16 int T; cin \u0026gt;\u0026gt; T; 17 while (T--) { 18 string key; cin \u0026gt;\u0026gt; key; 19 int n; cin \u0026gt;\u0026gt; n; 20 vector\u0026lt; pair\u0026lt;int, string\u0026gt; \u0026gt; v; 21 for (int i = 0; i \u0026lt; n; i++) { 22 string s; cin \u0026gt;\u0026gt; s; 23 int cnt = 0; 24 for (int j = 0; s[j] \u0026amp;\u0026amp; key[j]; j++) { 25 int a = s[j] - \u0026#39;a\u0026#39;, b = key[j] - \u0026#39;a\u0026#39;; 26 cnt += abs(x[a] - x[b]) + abs(y[a] - y[b]); 27 } 28 v.push_back(pair\u0026lt;int, string\u0026gt;(cnt, s)); 29 } 30 sort(v.begin(), v.end()); 31 for (auto r : v) 32 cout \u0026lt;\u0026lt; r.second \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; r.first \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 33 } 34 return 0; 35}  ","date":"2021-01-20T23:12:56+08:00","permalink":"https://Luke2336.github.io/p/20210120/","title":"2021/01/20 日記"},{"content":"下午簡略的弄了電路期末專題。晚上收到老師的信，結果電路期末又不及格了，星期四下午要補考，原本預計星期三中午要回基隆 QAQ\n晚上卡車勾了題目，於是就刷了兩題。\nKattis - Tic Tac Toe 給定一個 3x3 的棋盤，問是不是合法的。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3 4bool check(char t[3][4]) { 5 for (int i = 0; i \u0026lt; 3; i++) { 6 if (t[i][0] != \u0026#39;.\u0026#39; \u0026amp;\u0026amp; t[i][0] == t[i][1] 7 \u0026amp;\u0026amp; t[i][1] == t[i][2]) return false; 8 if (t[0][i] != \u0026#39;.\u0026#39; \u0026amp;\u0026amp; t[0][i] == t[1][i] 9 \u0026amp;\u0026amp; t[1][i] == t[2][i]) return false; 10 } 11 if (t[0][0] != \u0026#39;.\u0026#39; \u0026amp;\u0026amp; t[0][0] == t[1][1] 12 \u0026amp;\u0026amp; t[1][1] == t[2][2]) return false; 13 if (t[0][2] != \u0026#39;.\u0026#39; \u0026amp;\u0026amp; t[0][2] == t[1][1] 14 \u0026amp;\u0026amp; t[1][1] == t[2][0]) return false; 15 return true; 16} 17 18bool solve() { 19 char c[3][4]; 20 int cnt[2] = {}; 21 for (int i = 0; i \u0026lt; 3; i++) { 22 cin \u0026gt;\u0026gt; c[i]; 23 for (int j = 0; j \u0026lt; 3; j++) { 24 if (c[i][j] == \u0026#39;X\u0026#39;) cnt[0]++; 25 if (c[i][j] == \u0026#39;O\u0026#39;) cnt[1]++; 26 } 27 } 28 if (!cnt[0] \u0026amp;\u0026amp; !cnt[1]) return true; 29 if (cnt[0] \u0026lt; cnt[1] || cnt[0] - cnt[1] \u0026gt; 1) 30 return false; 31 char last = \u0026#34;XO\u0026#34;[cnt[0] == cnt[1]]; 32 for (int i = 0; i \u0026lt; 3; i++) { 33 for (int j = 0; j \u0026lt; 3; j++) { 34 if (c[i][j] != last) continue; 35 c[i][j] = \u0026#39;.\u0026#39;; 36 if (check(c)) return true; 37 c[i][j] = last; 38 } 39 } 40 return false; 41} 42 43int main () { 44 ios::sync_with_stdio(0), cin.tie(0); 45 int n; cin \u0026gt;\u0026gt; n; 46 while (n--) { 47 if (solve()) cout \u0026lt;\u0026lt; \u0026#34;yes\\n\u0026#34;; 48 else cout \u0026lt;\u0026lt; \u0026#34;no\\n\u0026#34;; 49 } 50 return 0; 51}  Kattis - Skener 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main () { 4 int r, c, a, b; 5 scanf(\u0026#34;%d%d%d%d\u0026#34;, \u0026amp;r, \u0026amp;c, \u0026amp;a, \u0026amp;b); 6 char s[55]; 7 for (int i = 0; i \u0026lt; r; i++) { 8 scanf(\u0026#34; %s\u0026#34;, s); 9 for (int j = 0; j \u0026lt; a; j++) { 10 for (int k = 0; k \u0026lt; c; k++) 11 for (int p = 0; p \u0026lt; b; p++) 12 putchar(s[k]); 13 putchar(\u0026#39;\\n\u0026#39;); 14 } 15 } 16 return 0; 17}  ","date":"2021-01-20T23:03:17+08:00","permalink":"https://Luke2336.github.io/p/20210119/","title":"2021/01/19 日記"},{"content":"AtCoder Beginners Selection 用 AtCoder 的水題來練習 Kotlin 的基礎語法。\nPracticeA - Welcome to AtCoder 1private fun readLn() = readLine()!! 2private fun readInt() = readLn().toInt() 3private fun readStrings() = readLn().split(\u0026#34; \u0026#34;) 4private fun readInts() = readStrings().map { it.toInt() } 5 6fun main() { 7 val a = readInt() 8 val(b, c) = readInts() 9 val s = readLn() 10 println(\u0026#34;${a + b + c}$s\u0026#34;) 11} ABC086A - Product 1private fun readLn() = readLine()!! 2private fun readInt() = readLn().toInt() 3private fun readStrings() = readLn().split(\u0026#34; \u0026#34;) 4private fun readInts() = readStrings().map { it.toInt() } 5 6fun main() { 7 val(a, b) = readInts() 8 println(if (a % 2 == 1 \u0026amp;\u0026amp; b % 2 == 1 ) \u0026#34;Odd\u0026#34; else \u0026#34;Even\u0026#34;) 9} ABC081A - Placing Marbles 1private fun readLn() = readLine()!! 2fun countOne(s: String) = s.filter {it == \u0026#39;1\u0026#39;}.count() 3 4fun main() { 5 println(countOne(readLn())) 6} ABC081B - Shift only 1import kotlin.math.* 2 3private fun readLn() = readLine()!! 4private fun readInt() = readLn().toInt() 5private fun readStrings() = readLn().split(\u0026#34; \u0026#34;) 6private fun readInts() = readStrings().map { it.toInt() } 7 8fun main() { 9 val n = readInt() 10 val A = readInts() 11 var ans = A[0] 12 for (x in A) { 13 var cnt = 0 14 var tmp = x 15 while (tmp % 2 == 0) { 16 tmp /= 2 17 cnt++ 18 } 19 ans = min(ans, cnt) 20 } 21 println(ans) 22} ABC087B - Coins 1private fun readLn() = readLine()!! 2private fun readInt() = readLn().toInt() 3 4fun main() { 5 val A = readInt() 6 val B = readInt() 7 val C = readInt() 8 val X = readInt() 9 var ans = 0 10 for (i in 0..A) { 11 for (j in 0..B) { 12 val sum = i * 500 + j * 100 13 if (sum \u0026lt;= X \u0026amp;\u0026amp; (X - sum) \u0026lt;= C * 50) 14 ans++ 15 } 16 } 17 println(ans) 18} ABC083B - Some Sums 1private fun readLn() = readLine()!! 2private fun readInt() = readLn().toInt() 3private fun readStrings() = readLn().split(\u0026#34; \u0026#34;) 4private fun readInts() = readStrings().map { it.toInt() } 5 6fun main() { 7 val(N, A, B) = readInts() 8 var ans = 0 9 for (i in 1..N) { 10 var tmp = i 11 var cnt = 0 12 while (tmp \u0026gt; 0) { 13 cnt += tmp % 10 14 tmp /= 10 15 } 16 if (cnt in A..B) 17 ans += i 18 } 19 println(ans) 20} ABC088B - Card Game for Two 1private fun readLn() = readLine()!! 2private fun readInt() = readLn().toInt() 3private fun readStrings() = readLn().split(\u0026#34; \u0026#34;) 4private fun readInts() = readStrings().map { it.toInt() } 5 6fun main() { 7 val N = readInt() 8 var A = readInts() 9 var cnt = IntArray(105) {0} 10 for (i in 0..N-1) cnt[A[i]]++ 11 var ans = 0 12 var r = 1 13 for (i in 100 downTo 1) { 14 for (j in 1..cnt[i]) { 15 ans += r * i 16 r = -r 17 } 18 } 19 println(ans) 20} ABC085B - Kagami Mochi 1private fun readLn() = readLine()!! 2private fun readInt() = readLn().toInt() 3 4fun main() { 5 val N = readInt() 6 var A = IntArray(101) {0} 7 var ans = 0 8 for (i in 1..N) { 9 val x = readInt() 10 if (A[x] == 0) { 11 ans++ 12 A[x] = 1 13 } 14 } 15 println(ans) 16} ABC085C - Otoshidama 1private fun readLn() = readLine()!! 2private fun readInt() = readLn().toInt() 3private fun readStrings() = readLn().split(\u0026#34; \u0026#34;) 4private fun readInts() = readStrings().map { it.toInt() } 5 6fun main() { 7 val(N, Y) = readInts() 8 for (i in 0..N) { 9 for (j in 0..(N - i)) { 10 val k = N - i - j 11 if (i * 10000 + j * 5000 + k * 1000 == Y) { 12 println(\u0026#34;$i$j$k\u0026#34;) 13 return 14 } 15 } 16 } 17 println(\u0026#34;-1 -1 -1\u0026#34;) 18} ABC049C - Daydream 1fun main() { 2 val D = listOf(\u0026#34;dream\u0026#34;, \u0026#34;dreamer\u0026#34;, \u0026#34;erase\u0026#34;, \u0026#34;eraser\u0026#34;) 3 val DL = listOf(5, 7, 5, 6) 4 val S = readLine()!! 5 val L = S.length 6 var DP = BooleanArray(L + 1) {false} 7 DP[0] = true 8 for (i in 1..L) { 9 for (j in 0..3) { 10 val l = i - DL[j] 11 if (l \u0026lt; 0) continue 12 if (DP[l] \u0026amp;\u0026amp; S.substring(l, i) == D[j]) { 13 DP[i] = true 14 break 15 } 16 } 17 } 18 println(if (DP[L]) \u0026#34;YES\u0026#34; else \u0026#34;NO\u0026#34;) 19} ABC086C - Traveling 1import kotlin.math.abs 2private fun readLn() = readLine()!! 3private fun readInt() = readLn().toInt() 4private fun readStrings() = readLn().split(\u0026#34; \u0026#34;) 5private fun readInts() = readStrings().map { it.toInt() } 6 7fun main() { 8 val N = readInt() 9 var t = 0 10 var x = 0 11 var y = 0 12 for (i in 1..N) { 13 val(nt, nx, ny) = readInts() 14 val d = abs(nx - x) + abs(ny - y) 15 val dt = nt - t 16 if (d \u0026gt; dt || (dt - d) % 2 != 0) { 17 println(\u0026#34;No\u0026#34;) 18 return 19 } 20 t = nt 21 x = nx 22 y = ny 23 } 24 println(\u0026#34;Yes\u0026#34;) 25} ","date":"2021-01-19T17:00:49+08:00","permalink":"https://Luke2336.github.io/p/atcoder_abs/","title":"AtCoder Beginners Selection"},{"content":"今天起床後吃了雞腿蛋包飯，然後和蘇于討論電路學的專題，之後去買需要的材料，為了鐵粉，我們決定買暖暖包，結果找遍了清夜及交大的每家店都缺貨。晚餐吃了六扇門，發現小吃部在整修。\n晚上躺了一下之後，就去洗了澡，然後用 Kotlin 寫了 AtCoder 的水題。\n結果衣服還沒洗，星期三就要回家了 QAQ\n","date":"2021-01-18T03:02:24+08:00","permalink":"https://Luke2336.github.io/p/20210118/","title":"2021/01/18 日記"},{"content":"花了不少時間才起床，買了麥當勞，看完了烘焙王。\n之後就開始研究怎樣才能讓之後寫 Kotlin 比較方便，改了 bashrc，建立了 oj 指令支援 .cpp / .py / .kt 三種副檔名。\n傍晚研究了 Kotlin 的 Tutorial，然後吃了雞腿便當，一邊看了小時候看的甄嬛傳。\n/.bashrc 將雙曲線寫好的 bashrc 增加了 Kotlin 的指令。\noj() { ext=${1##*.} filename=${1##*/} filename=${filename%.*} case $ext in cpp ) g++ -o \u0026#34;/tmp/$filename\u0026#34; \u0026#34;$1\u0026#34; \u0026amp;\u0026amp; \u0026#34;/tmp/$filename\u0026#34; ;; py ) python3 \u0026#34;$1\u0026#34; ;; kt ) kotlinc \u0026#34;$1\u0026#34; -include-runtime -d \u0026#34;$filename\u0026#34;.jar \u0026amp;\u0026amp; java -jar \u0026#34;$filename\u0026#34;.jar \u0026amp;\u0026amp; rm \u0026#34;$filename\u0026#34;.jar ;; esac } 使用方式 $ oj 1.cpp $ oj 2.kt $ oj 3.py ","date":"2021-01-17T16:41:41+08:00","permalink":"https://Luke2336.github.io/p/20210117/","title":"2021/01/17 日記"},{"content":"今天仍然五點半就自然醒了，之後七點半又醒了一次，最後睡到九點半。左腳有點發炎，喉嚨右側也有點發炎。\n台中行 中午跟朋友去台中玩，有台中人帶就是不一樣，以前覺得台中很無聊。先去了台中女中附近逛街，喝了春水堂的紅茶凍飲。然後去了第一市場附近，走了電子街，去了幸發亭吃蜜豆冰，覺得這種冰很特別，加了很多種水果。之後去了台中都會公園看夕陽，晚上去文心路吃港式飲茶，覺得油雞和葡式蛋塔超級好吃。\n寒假 TODO 新增了幾個想做的事，希望能讓寒假充實一點。\n 學 Kotlin 寫自己的 Codebook 寫完 CSES 大部分的題目 複習機率、線性代數  ","date":"2021-01-16T21:38:53+08:00","permalink":"https://Luke2336.github.io/p/20210116/","title":"2021/01/16 日記"},{"content":"早上有點失眠，在床上躺了一陣子才起床。打扮了一下之後，去清大走了走，賞梅。\n晚餐吃了璽子牛肉麵，之後開始寫水題。因為有點累，所以十一點前就睡了。\nCSES - 2191 - Polygon Area 給一個簡單多邊形，輸出面積的兩倍。\n1#pragma GCC optimization (\u0026#34;O3\u0026#34;) 2#include\u0026lt;bits/stdc++.h\u0026gt;3using namespace std; 4typedef long long ll; 5typedef pair\u0026lt;ll, ll\u0026gt; pii; 6#define x first 7#define y second 8#define pb push_back 9ll det(vector\u0026lt;pii\u0026gt; \u0026amp;p, int n) { 10 ll cnt = 0; 11 for (int i = 0; i \u0026lt; n; i++) 12 cnt += p[i].x * p[i + 1].y - p[i + 1].x * p[i].y; 13 return (cnt \u0026gt; 0) ? cnt : -cnt; 14} 15int main() { 16 ios::sync_with_stdio(0), cin.tie(0); 17 int n; cin \u0026gt;\u0026gt; n; 18 vector\u0026lt;pii\u0026gt; p(n); 19 for (int i = 0; i \u0026lt; n; i++) 20 cin \u0026gt;\u0026gt; p[i].x \u0026gt;\u0026gt; p[i].y; 21 p.pb(p[0]); 22 cout \u0026lt;\u0026lt; det(p, n) \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 23 return 0; 24}  清華踏青 天氣很好，於是就搭小紅巴出去走走。\n第二招待所 去二招吃印度料理，被老闆娘說很久沒看到我，今天生意相對比較好的樣子。\n梅園 第一次在梅花開的時候過去，上次去是秋天某次滿月和電資系羽的一個學長去夜遊。梅花開的很茂盛，賞花的人也絡繹不絕，剛剛在二招吃飯的一桌老人們也在這邊。有很多蜜蜂在採蜜，有一株有結了三顆梅子，看起來很好吃。\n相思湖 蝴蝶園 台積館 發現了一條蝴蝶園通往台積館的小徑，就從南大門走回交大，然後在石園發現了三隻五色鳥。之後買了蛋捲冰淇淋就回宿舍休息了。\n","date":"2021-01-15T15:17:37+08:00","image":"https://Luke2336.github.io/post/Diary/20210115/%E6%A2%85.jpg","permalink":"https://Luke2336.github.io/p/20210115/","title":"2021/01/15 日記"},{"content":"Kein Problem!    German  English     das Restaurant die Restaurants restaurant   das Hotel die Hotels hotel   das Theater die Theater theater   das Konzert die Konzerte concert   das Museum die Mussen museum   der Supermarkt die Supermärkte supermarket   die Bank die Banken bank   die Flughafen die Flughäfen airport   der Pilot die Piloten pilot   die Pilotin die Pilotinnen pilot   das Büro die Büros office   das Kino die Kinos movie theater   die Toilette die Toiletten toilet   das Zentrum die Zentren downtown, city center   die Universität die Universitäten university, college   der Student die Studenten student   die Studentin die Studentinen student   die Familie die Familien family       German  English     Taxi     der Bus die Busse bus   die Gitarre die Gitarren guitar   das Hobby die Hobbys hobby   die Musik  music   der Sport  sports   die Kultur  culture   die E-Mail die E-Mails e-mail   das Telefon die Telefone telephone   der Computer die Computer computer   der Kaffee die Kaffees coffee   die Pizza die Pizzen/Pizzas pizza    die Spaghetti spaghetti   das Problem die Probleme problem   die Information  Information       German English     bitte please   Kein Problem No problem       German  English     studieren studiert, studierte to study in an university    ","date":"2021-01-14T14:25:28+08:00","permalink":"https://Luke2336.github.io/p/dw_a1_kein_problem/","title":"[DW-A1] Kein Problem!"},{"content":"今天白天大部分的時間在讀德文，半夜完成了 OS 的 HW4，順邊幫 Maxwill debug，他的 CPU 是 ARM 的，不支援 Meltdown。\n晚上突然被明憲學長約，原來他隔天就要離開新竹了，很開心他離開前有想到要約我出來。和他在西區散了步，到科三樓頂吹吹風，聽他聊最近他在研究的投資學。\n","date":"2021-01-14T10:55:24+08:00","permalink":"https://Luke2336.github.io/p/20210114/","title":"2021/01/14 日記"},{"content":"早上被某學長約出去圖書館教他演算法，結果因為他說頭暈想吐就被放鴿子了。之後就在圖書館，寫 OS HW4，但還是卡住做不出來，問了彥彤，結果他還沒開始做。\n中午吃了水餃，心情悶悶的，就在宿舍寫 Blog，把修課心得搬到這邊。\n晚上去了 PCCA 聚餐，吃忠孝路的「海水屋」，隊友非常喜歡吃金沙豆腐，大部分的菜我覺得吃起來都不好吃，份量也有點少。隊友的作業好像也還剩不少。\nOS HW4 - Meltdown  Meltdown: Reading Kernel Memory from User Space，網路上有看到中文翻譯。  ","date":"2021-01-13T10:36:23+08:00","permalink":"https://Luke2336.github.io/p/20210113/","title":"2021/01/13 日記"},{"content":"Hallo! Grammar Formal 正式的會握手。\n Guten Tag, Frau Kamp!\n     時間     Guten Morgen! ~ 11:00   Guten Tag! 11:00 ~ 18:00   Gutne Abend! 18:00 ~    Informal  Hallo, Tom!\n  Hey! Hi! Tach! Na?      Region     Servus! Austria (informal)   Früß Gott! Southern Germany and Austria   Grüezi! Switerland   Moin! Northern Germany    Vocabulary    German  English     auch  also   oder  or   und  and   nicht  not   das Beispiel die Beispiele example   Danke.  Thanks.   Danke schön.     Danke sehr.     Gut  good   Sehr good  Very good   Super  super   schön  nice, pretty   Es geht mir gut.  I\u0026rsquo;m doing well.   Nicht so gut.  Not so good.   Und dir?  How about you? (Informal)   Und Inhen?  How about you? (Formal)   Wie geht es dir?  How are you? (Informal)   Wie geht es Inhen?  How are you? (Formal)   Es ist 09:00 Uhr.     Herr  Mr   Frau  Ms/Mrs   die Frau die Frauen woman   der Mann die Männer man    ","date":"2021-01-12T16:06:58+08:00","permalink":"https://Luke2336.github.io/p/dw_a1_hallo/","title":"[DW-A1] Hallo!"},{"content":"今天考完了電路學期末考，於是想開始進入寒假狀態，已經有了一些想做的事。\nTodo List  期末的作業們  OS HW4 電路學 Final Project   寒假  競程  PCCA 寒訓 CSES 題單   德文  DW Learn German   Blog  目錄 修課心得 日記      OS HW4 - Meltdown  要在能特定的 CPU 上才能 Meltdown，大部分 Intel 的 CPU 都可以。 Meltdown  現代的 CPU 多透過 Pipeline 去執行指令，當其中某些較快的指令執行完畢後，就會發出 Out-of-order Exception。再 CPU 處理 Exception 前，資料會先從 Register 複製到 Cache。 Meltdown 透過某些指令將 Cache 裡的東西搬到 User Mode 能存取的記憶體裡。    ","date":"2021-01-12T14:56:38+08:00","permalink":"https://Luke2336.github.io/p/20210112/","title":"2021/01/12 日記"},{"content":"今天開始下雨，很冷很冷。大部分的時間都在複習電路學，還有看卡通「烘焙王」。\n晚餐吃了牛肉麵，不過因為是最後一碗，所以只剩碎碎的肉。飯後簡單看了一下筆記後就睡了，睡了兩個小時後起床吃冰，不過因為壓力有點大，有些睡不著。\n電路學期末考複習 這次認真的把大部分的作業算過一遍。\n   Date Range     1/9 CH11   1/10 CH15 ~ CH16   1/11 CH13    ","date":"2021-01-12T13:50:46+08:00","permalink":"https://Luke2336.github.io/p/20210111/","title":"2021/01/11 日記"},{"content":"今天還是很冷，有點過敏，一直流鼻水。也因此大部分的時間都被我混過去，什麼事都沒有好好做，大概只有洗衣服和算了一點點電路學，主要是 Laplace 的部分，發現自己大部分都會，只是不夠熟練。\n決定早點去睡，很難得不到八點就去睡，書沒讀到預定進度其實有點恐慌，但身體舒服點再讀會更有效率。\n結果 12 點剛過就醒了，睡不到 4 小時。去全家買了宵夜吃，練完了電路學 15、16 章的習題。\nToggl 這是三週的讀書時間，邁入期末週後明顯時間上升不少，很多時間都耗在 OS 上面，因為之前一直放生它。電路學就是每週固定有點進度，其他幾科都在 12 月底結束了。很開心最近用功的時間持續上升，雖然一旦少做點事就有點緊張。\n","date":"2021-01-10T19:28:14+08:00","image":"https://Luke2336.github.io/post/Diary/20210110/toggl.png","permalink":"https://Luke2336.github.io/p/20210110/","title":"2021/01/10 日記"},{"content":"因為 pA 卡住，所以慘慘的 QAQ\n掉了 31 分到 1685。\nAtCoder Regular Contest 111 A. Simple Math 2 題意 $$1 \\leq n \\leq 10^{18}, 1 \\leq m \\leq 10^4, \\text{find }\\lfloor \\frac{10^n}{m}\\rfloor \\mod m.$$\n解法  求 (10 ** n) % (m * m) // m。 紀錄餘數的循環節。 卡題原因：  忘記循環不一定從一開始。 用了 unordered_map 判斷餘數是否出現過導致 TLE，換成 array 就變很快了。    Code 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4#define pb push_back 5int s[100000008]; 6int main() { 7 ll n, m, mm; 8 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 9 mm = m * m; 10 ll r, d = 1; 11 vector\u0026lt;int\u0026gt; v; // 紀錄餘數 12 for (int i = 0; i \u0026lt;= n; i++) { 13 r = d % mm; 14 if (s[r] || (i \u0026amp;\u0026amp; r == v[0])) break; 15 s[r] = i; 16 v.pb(r); 17 d = r * 10; 18 } 19 if (n \u0026lt; v.size()) { 20 cout \u0026lt;\u0026lt; v[n] / m \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 21 return 0; 22 } 23 int t = s[r]; // 循環節起點 24 int id = t + (n - t) % (v.size() - t); 25 cout \u0026lt;\u0026lt; v[id] / m \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; 26 return 0; 27}  B. Reversible Cards 題意 給定 N 張卡（≤2e5），每張卡上正反面各有一個數字（1~4e5），讓你每張牌只能選擇一面，問最多有幾個相異數字？\n解法 建立一個 Source，給每張牌 cap = 1 的邊，然後每張牌建立到正反兩面的數字 cap = 1 到邊，每個數字建立到 Sink cap = 1 的邊，之後求最大流 max-flow 即為答案\n因為是二分圖，所以用 Dinic 複雜度約為 O(sqrt(V)E) ~ 2e8。\nCode 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4typedef pair\u0026lt;int, int\u0026gt; pii; 5#define pb push_back 6#define inf 1e9 7#define maxn 200000 8#define maxk 400000 9class Dinic { 10 private: 11 struct edge { int d, r; ll c; }; 12 vector\u0026lt;vector\u0026lt;edge\u0026gt;\u0026gt; adj; vector\u0026lt;int\u0026gt; lv, ve; int n; 13 bool mklv(int s, int d) { 14 lv.assign(n, -1); lv[s] = 0; queue\u0026lt;int\u0026gt; q({s}); 15 while (!q.empty()) { 16 int v = q.front(); q.pop(); 17 for (auto\u0026amp; e : adj[v]) { 18 if (e.c == 0 || lv[e.d] != -1) continue; 19 lv[e.d] = lv[v] + 1, q.push(e.d); 20 } 21 } 22 return lv[d] \u0026gt; 0; 23 } 24 ll aug(int v, ll f, int d) { 25 if (v == d) return f; 26 for (; ve[v] \u0026lt; adj[v].size(); ve[v]++) { 27 auto\u0026amp; e = adj[v][ve[v]]; 28 if (lv[e.d] != lv[v] + 1 || !e.c) continue; 29 ll sent = aug(e.d, min(f, e.c), d); 30 if (sent \u0026gt; 0) { 31 e.c -= sent, adj[e.d][e.r].c += sent; 32 return sent; 33 } 34 } 35 return 0; 36 } 37 public: 38 Dinic(int n) : n(n + 1) { clear(); } 39 void clear() { adj.assign(n, {}); } 40 void add_edge(int src, int dst, ll cap) { 41 edge ss{dst, (int)adj[dst].size(), cap}; 42 edge dd{src, (int)adj[src].size(), 0}; 43 adj[src].push_back(ss), adj[dst].push_back(dd); 44 } 45 ll max_flow(int s, int d) { 46 ll ret = 0; 47 while (mklv(s, d)) { 48 ve.assign(n, 0); 49 while (ll f = aug(s, inf, d)) ret += f; 50 } 51 return ret; 52 } 53}; 54int main() { 55 ios::sync_with_stdio(0), cin.tie(0); 56 int n; cin \u0026gt;\u0026gt; n; 57 Dinic D(maxn + maxk + 2); 58 int dst = maxn + maxk + 1; 59 for (int i = 1; i \u0026lt;= n; i++) { 60 int a, b; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 61 D.add_edge(0, i, 1); 62 D.add_edge(i, maxn + a, 1); 63 D.add_edge(i, maxn + b, 1); 64 } 65 for (int i = 1; i \u0026lt;= maxk; i++) 66 D.add_edge(maxn + i, dst, 1); 67 cout \u0026lt;\u0026lt; D.max_flow(0, dst) \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 68 return 0; 69}  ","date":"2021-01-09T22:03:11+08:00","image":"https://Luke2336.github.io/post/Other/AtCoder_ARC111/Task.png","permalink":"https://Luke2336.github.io/p/atcoder_arc111/","title":"AtCoder Regular Contest 111"},{"content":"昨天 11 點前就睡了，但還是睡到 10 點半左右，因為真的很冷。隊友們都去幫忙監考某考試了。\n早餐吃了麵包，然後今天看了好幾集卡通「烘焙王」。\n重新算了電路學 CH11 的作業，為期末考做準備。\n下午吃了麥當勞，今天的薯條超鹹，然後又被找下去吃了蛋捲冰淇淋。\n晚上打了 AtCoder 的 ARC 111，但還是覺得今天太廢了，肯定是上週作業壓力太大，連續趕了三份 OS 作業，所以今天就放鬆到開始耍廢。\nAtCoder Regular Contest 111 打得慘慘的，掉了 31 分！\n","date":"2021-01-09T22:02:20+08:00","permalink":"https://Luke2336.github.io/p/20210109/","title":"2021/01/09 日記"},{"content":"早上難得的吃了早餐，去提款機提錢，順便在旁邊買三明治吃，泡了柚子茶喝。\n用 Virtualbox 的設定，多掛載了 1GB 的記憶體給 Ubuntu VM，於是多出了一個 /dev/sdb 可以切。然後早上就順利把 HW3 做完了。\n中午吃了麥當勞，點了玉米湯，在宿舍泡伯爵茶一直冷掉。\n房間的濕度約為 65%，溫度則為 15 度左右。但外面似乎已經到 8 度了，超級冷的。穿了羽絨衣跟襪子，但還是手腳冰冷。\n開始複習電路學期末，下午讀了第 15 和 16 章，有關 Laplace 的部分，也自己導了 Initial/Final-Value Theorem。\n看到 Slack 有人說 CSES 增加題目了，於是想起自己還剩一堆沒刷，就開了一題恢復手感。\n借了 HW2 的 Code 給雙曲線參考，順便讓他幫我跑一下，不然我一直無法解決找不到 /dev/os 的問題，沒想到晚上他告訴我，在他那邊跑是對的，真是太好了！\n晚上吃了麻油雞麵，暖暖身體。飯後看了電影「爺爺與貓」。\nCSES - 2189 - Point Location Test 基礎的幾何題。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4typedef pair\u0026lt;ll, ll\u0026gt; point; 5#define x first 6#define y second 7ll check(point p[]) { 8 ll dx = p[1].x - p[0].x, dy = p[1].y - p[0].y; 9 return (p[2].y - p[1].y) * dx + (p[1].x - p[2].x) * dy; 10} 11int main () { 12 ios::sync_with_stdio(0), cin.tie(0); 13 int t; cin \u0026gt;\u0026gt; t; 14 while (t--) { 15 point p[3]; 16 for (int i = 0; i \u0026lt; 3; i++) 17 cin \u0026gt;\u0026gt; p[i].x \u0026gt;\u0026gt; p[i].y; 18 ll c = check(p); 19 if (c \u0026gt; 0) cout \u0026lt;\u0026lt; \u0026#34;LEFT\\n\u0026#34;; 20 else if (c \u0026lt; 0) cout \u0026lt;\u0026lt; \u0026#34;RIGHT\\n\u0026#34;; 21 else cout \u0026lt;\u0026lt; \u0026#34;TOUCH\\n\u0026#34;; 22 } 23 return 0; 24}  爺爺與貓（ねことじいちゃん） 因為九月時媽媽傳了連結給我，於是今晚有空就決定來看這部了。\n導演是岩合光昭，他在 NHK 有電視節目岩合光昭的貓步走世界（岩合光昭の世界ネコ歩き），好想看！！\n故事是描述在小島上面的老爺爺老奶奶們和貓咪的故事，主角是小玉和阿吉爺爺。查了一下是由漫畫改編。\n","date":"2021-01-08T14:39:43+08:00","image":"https://Luke2336.github.io/post/Diary/20210108/movie.jpg","permalink":"https://Luke2336.github.io/p/20210108/","title":"2021/01/08 日記"},{"content":"中午還是懶得去跟電資一起在校門口拍照，我想系羽消失後，我對電資的歸屬感就也一起消散了。\n下午擔任了「傳說中的助教」，幫忙老師 demo 三個 Lab。\n上了電路學，覺得很冷很想睡，最後上了一點要用到線代解微方的東西，覺得要好好研究一下，不然考試會卡住。\n寄信給 OS TA，結果還是解決不了沒有 /dev/os 的問題，他建議把 ubuntu 重裝。\n晚上吃了 pizza，點了瑪格麗特，還有一個奇怪的大蒜口味，吃起來非常的蒜 QAQ\n然後開始寫 OS HW3，因為我 /dev/sda 的空間沒辦法再切割記憶體，所以用了很久還是解決不了。\n","date":"2021-01-07T11:01:51+08:00","permalink":"https://Luke2336.github.io/p/20210107/","title":"2021/01/07 日記"},{"content":"昨天下腹不舒服，花了一段時間才入睡。早上躺到十點才起床，中間醒來了兩次。\n醒來後就開始寫作業，有了進度後就去買了雞腿便當吃，然後把韓劇「我的女友是九尾狐」看完，雖然國小時已經看過一遍，但最近突然想重溫一下。\n之後把 HW2 的 PartI-1 寫完，主要是把函式的參數做修正，使兩隻程式的 shmget 回傳的 id 是一樣的。午睡起床後寫了 PartII。\n晚餐吃了壽司，肚子略略不舒服，吃了阿德比之後就好了。\nOS HW2  學會用 shmget() 和 shmat() 使兩個 processes 共享記憶體。  shmget() 的參數要注意，兩個程式的 key 值要是一樣的正整數。而 shmflg 的值則是建立記憶體的那隻程式設為 IPC_CREAT|0666，另一隻設 0。   PartII 是要把兩個 pointer 的 page table 指向同一個 physical address。重點是用 cr3 和 virtual_address 取得 page_table_address。  ","date":"2021-01-06T10:28:28+08:00","permalink":"https://Luke2336.github.io/p/20210106/","title":"2021/01/06 日記"},{"content":"早上很想睡，但還是去上了電路學。今天是教如何在 s-domain 下用 Laplace Transform 解電路，比較需要注意的就是 Initial Condition 的部分。\n下午為了寫 OS 作業，所以裝了 TA 提供的 Ubuntu VM。這是我第一次裝 Linux，平常只有比賽的時候會使用 Linux。\n晚餐前注意到含羞草開花了。\n晚上去上了電路學的助教課，結果只有我一個人去，有個女生十幾分鐘就說身體不舒服離開了。結束時和助教隨口聊了一下天，才知道他大學是讀清大。\n在 VirtualBox 裝 Ubuntu  在官網下載 VirtualBox-6.1.16-140961-OSX.dmg。  點擊 VirtualBox.pkg 安裝。 下載 TA 提供的 Ubuntu-18.04 VM 使用 VB 匯入 Ubuntu-VM.ovf。  啟動 VM，將需要用到的 Terminal 和 gedit 拉到左邊。   含羞草開花 不知道是不是因為最近太冷了，加上給的水少，所以就長出花苞了。有一個好像已經謝了，看了一下網路上的文章，他開花到凋謝的時間大概五六小時，希望有機會能看到花。\n","date":"2021-01-05T13:35:28+08:00","image":"https://Luke2336.github.io/post/Diary/20210105/flower.jpg","permalink":"https://Luke2336.github.io/p/20210105/","title":"2021/01/05 日記"},{"content":"AtCoder Educational DP Contest  [於 Feb, 2020 完成]\n這套從簡到難的 DP 題組，有不少經典題，很適合照順序刷。 開始刷了之後，才發現自己實力的不足，有幾題想了很久還是想不出來，只好去翻別人的解答。刷完發現 code 都不長，狀態也不難列，但轉移式都要想很久。\n A. Frog 1 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 int N; scanf(\u0026#34;%d\u0026#34;, \u0026amp;N); 5 int dp[2] = {}, a[2] = {}; 6 scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;a[1], \u0026amp;a[0]); 7 dp[0] = abs(a[1] - a[0]); 8 for (int i = 3; i \u0026lt;= N; i++) { 9 int x; scanf(\u0026#34;%d\u0026#34;,\u0026amp;x); 10 dp[i % 2] = min(dp[i % 2] + abs(x - a[i % 2]), 11 dp[(i + 1) % 2] + abs(x - a[(i + 1) % 2])); 12 a[i % 2] = x; 13 } 14 printf(\u0026#34;%d\\n\u0026#34;, dp[N % 2]); 15 return 0; 16}  B. Frog 2 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define maxn 100005 4int main() { 5 int n, k; 6 scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;n, \u0026amp;k); 7 int a[maxn], dp[maxn]; 8 for (int i = 1; i \u0026lt;= n; i++) 9 scanf(\u0026#34;%d\u0026#34;, \u0026amp;a[i]); 10 for (int i = 1; i \u0026lt;= n; i++) { 11 if (i \u0026lt;= k) dp[i] = abs(a[i] - a[1]); 12 else { 13 dp[i] = dp[i - 1] + abs(a[i] - a[i - 1]); 14 for (int j = 2; j \u0026lt;= k; j++) 15 dp[i] = min(dp[i], 16 dp[i - j] + abs(a[i] - a[i - j])); 17 } 18 } 19 printf(\u0026#34;%d\\n\u0026#34;, dp[n]); 20 return 0; 21}  C. Vacation 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 int n; scanf(\u0026#34;%d\u0026#34;, \u0026amp;n); 5 int dp[2][3] = {}; 6 for (int i = 1; i \u0026lt;= n; i++) 7 for (int j = 0; j \u0026lt; 3; j++) { 8 int x; scanf(\u0026#34;%d\u0026#34;,\u0026amp;x); 9 dp[i % 2][j] = x + max(dp[(i + 1) % 2][(j + 1) % 3], 10 dp[(i + 1) % 2][(j + 2) % 3]); 11 } 12 printf(\u0026#34;%d\\n\u0026#34;, max(dp[n % 2][0], 13 max(dp[n % 2][1], dp[n % 2][2]))); 14 return 0; 15}  D. Knapsack 1 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define maxW 100005 4int main() { 5 int n, W; scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;n, \u0026amp;W); 6 long long dp[maxW] = {}; 7 for(int i = 0; i \u0026lt; n; i++) { 8 int w, v; scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;w, \u0026amp;v); 9 for(int j = W; j \u0026gt;= w; j--) 10 dp[j] = max(dp[j], dp[j - w] + v); 11 } 12 printf(\u0026#34;%lld\\n\u0026#34;, dp[W]); 13 return 0; 14}  E. Knapsack 2 dp[j] 為價值為 j 需要的物品最低重量。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 int n, W; 5 scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;n, \u0026amp;W); 6 int dp[100005] = {}; 7 for (int i = 1; i \u0026lt; 100005; i++) 8 dp[i] = 1000000005; 9 for (int i = 0; i \u0026lt; n; i++) { 10 int v, w; scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;w, \u0026amp;v); 11 for(int j = 100000; j \u0026gt;= v; j--) 12 dp[j] = min(dp[j], dp[j-v] + w); 13 } 14 for (int i = 100000; i \u0026gt;= 0; i--) 15 if (dp[i] \u0026lt;= W) { 16 printf(\u0026#34;%d\\n\u0026#34;, i); 17 break; 18 } 19 return 0; 20}  F. LCS 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int dp[3005][3005]; 4int p[3005][3005]; 5int main() { 6 ios_base::sync_with_stdio(0), cin.tie(0); 7 string s,t; cin \u0026gt;\u0026gt; s \u0026gt;\u0026gt; t; 8 int lens = s.length(), lent = t.length(); 9 for (int i = 1; i \u0026lt;= lens; i++) { 10 for (int j = 1; j \u0026lt;= lent; j++) { 11 if (s[i - 1] == t[j - 1]) { 12 dp[i][j] = dp[i - 1][j - 1] + 1; 13 p[i][j] = 1; 14 } else if (dp[i][j - 1] \u0026gt; dp[i - 1][j]) { 15 dp[i][j] = dp[i][j - 1]; 16 p[i][j] = 2; 17 } else { 18 dp[i][j] = dp[i - 1][j]; 19 p[i][j] = 3; 20 } 21 } 22 } 23 string ans = \u0026#34;\u0026#34;; 24 int ni = lens, nj = lent; 25 while (ni \u0026amp;\u0026amp; nj) { 26 if (p[ni][nj] == 1) { 27 ans = s[ni - 1] + ans; 28 ni--, nj--; 29 } else if (p[ni][nj] == 2) nj--; 30 else ni--; 31 } 32 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 33 return 0; 34}  G. Longest Path 類似拓樸排序的方式在 DAG（有向無環圖）上做 dp。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define maxn 100005 4int main() { 5 int n, m; scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;n, \u0026amp;m); 6 int in[maxn] = {}, dp[maxn] = {}; 7 vector\u0026lt;int\u0026gt; e[maxn]; 8 for (int i = 0; i \u0026lt; m; i++) { 9 int a, b; scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;a, \u0026amp;b); 10 e[a].push_back(b); 11 in[b]++; 12 } 13 queue\u0026lt;int\u0026gt; q; 14 for (int i = 1; i \u0026lt;= n; i++) 15 if (!in[i]) q.push(i); 16 while (!q.empty()) { 17 int u = q.front(); q.pop(); 18 for (int uu: e[u]) { 19 in[uu]--; 20 dp[uu] = max(dp[uu], dp[u] + 1); 21 if (!in[uu]) q.push(uu); 22 } 23 } 24 int ans = 0; 25 for (int i = 1; i \u0026lt;= n; i++) 26 ans = max(ans, dp[i]); 27 printf(\u0026#34;%d\\n\u0026#34;, ans); 28 return 0; 29}  H. Grid 1 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define mod 1000000007 4int main() { 5 int h, w; scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;h, \u0026amp;w); 6 int dp[1005] = {}; 7 char c[1005]; 8 for (int i = 1; i \u0026lt;= h; i++) { 9 scanf(\u0026#34;%s\u0026#34;, c + 1); 10 for (int j = 1; j \u0026lt;= w; j++) 11 if (c[j] == \u0026#39;#\u0026#39;) dp[j] = 0; 12 else if (i == 1 \u0026amp;\u0026amp; j == 1) dp[j] = 1; 13 else dp[j] = (dp[j] + dp[j - 1]) % mod; 14 } 15 printf(\u0026#34;%d\\n\u0026#34;, dp[w]); 16 return 0; 17}  I. Coins 機率的 dp，所以難得用到 double。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define maxn 3000 4int main() { 5 int n; scanf(\u0026#34;%d\u0026#34;, \u0026amp;n); 6 double dp[maxn] = {1.0}; 7 for (int i = 1; i \u0026lt;= n; i++) { 8 double p; scanf(\u0026#34;%lf\u0026#34;, \u0026amp;p); 9 for (int j = min(i, n / 2); j \u0026gt; 0; j--) 10 dp[j] = dp[j] * (1 - p) + dp[j - 1] * p; 11 dp[0] = dp[0] * (1 - p); 12 } 13 double ans = 1; 14 for(int i = 0; i \u0026lt;= n / 2; i++) 15 ans -= dp[i]; 16 printf(\u0026#34;%.9f\\n\u0026#34;, ans); 17 return 0; 18}  J. Sushi i 為剩 3 個，j 為剩 2 個，k 為剩 1 個的盤子數量。\n$$DP_{i,j,k} = 1 + \\frac{(n-i-j-k) DP_{i,j,k} + i DP_{i-1,j+1,k} + j DP_{i,j-1,k+1} + k DP_{i,j,k-1}}{n}$$\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define maxn 305 4double dp[maxn][maxn][maxn]; 5inline double dfs(int i, int j, int k, int n) { 6 if(i \u0026lt; 0 || j \u0026lt; 0 || k \u0026lt; 0) return 0; 7 if (dp[i][j][k] \u0026gt; -1) return dp[i][j][k]; 8 return dp[i][j][k] = (i * dfs(i - 1, j + 1, k, n) + 9 j * dfs(i, j - 1, k + 1, n) + 10 k * dfs(i, j, k - 1, n) + 11 n) / (i + j + k); 12} 13int main() { 14 int n; scanf(\u0026#34;%d\u0026#34;, \u0026amp;n); 15 int cnt[4] = {}; 16 for (int i = 0; i \u0026lt; n; i++) { 17 int x; cin \u0026gt;\u0026gt; x; 18 cnt[x]++; 19 } 20 for (int i = 0; i \u0026lt;= n; i++) 21 for (int j = 0; j \u0026lt;= n; j++) 22 for (int k = 0; k \u0026lt;= n; k++) 23 dp[i][j][k] = -10; 24 dp[0][0][0] = 0; 25 printf(\u0026#34;%.9f\\n\u0026#34;, dfs(cnt[3], cnt[2], cnt[1], n)); 26 return 0; 27}  K. Stones 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define maxn 105 4#define maxk 100005 5int main() { 6 int n, k; scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;n, \u0026amp;k); 7 int a[maxn]; 8 bool dp[maxk] = {0}; 9 for (int i = 0; i \u0026lt; n; i++) 10 scanf(\u0026#34;%d\u0026#34;, \u0026amp;a[i]); 11 for (int i = 0; i \u0026lt;= k; i++) 12 if(!dp[i]) 13 for (int j = 0; j \u0026lt; n; j++) 14 if(i + a[j] \u0026lt;= k) 15 dp[i + a[j]] = true; 16 if (dp[k]) printf(\u0026#34;First\\n\u0026#34;); 17 else printf(\u0026#34;Second\\n\u0026#34;); 18 return 0; 19}  L. Deque 第一次遇到這題是在 2019NCPC，當時思考了很久能不能 Greedy，後來才想到是 0-sum game。於是用了 minimax 的概念，設計出狀態。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long LL; 4int main() { 5 ios_base::sync_with_stdio(0), cin.tie(0); 6 int n; cin \u0026gt;\u0026gt; n; 7 vector\u0026lt;LL\u0026gt; v(n+2); 8 for (int i = 1; i \u0026lt;= n; i++) cin \u0026gt;\u0026gt; v[i]; 9 vector\u0026lt;vector\u0026lt;LL\u0026gt; \u0026gt; dp(n + 2, vector\u0026lt;LL\u0026gt;(n + 2,0)); 10 for (int len = 1; len \u0026lt;= n; len++) 11 for (int i = 1, j = len; j \u0026lt;= n; i++, j++) 12 if(len % 2 == n % 2) 13 dp[i][j] = max(dp[i + 1][j] + v[i], 14 dp[i][j - 1] + v[j]); 15 else 16 dp[i][j] = min(dp[i + 1][j] - v[i], 17 dp[i][j - 1] - v[j]); 18 cout \u0026lt;\u0026lt; dp[1][n] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 19 return 0; 20}  M. Candies dp[i][j] 發到第 i 人剩下 j 顆糖的方法數，用滾動優化空間複雜度。\ndp[i][j] = dp[i-1][j] + \u0026hellip; + dp[i-1][j+a[i]]。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define maxk 100005 4#define maxn 105 5#define mod 1000000007 6int main() { 7 int n, k; scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;n, \u0026amp;k); 8 int a[maxn], dp[2][maxk]; 9 for (int i = 1; i \u0026lt;= n; i++) 10 scanf(\u0026#34;%d\u0026#34;, \u0026amp;a[i]); 11 dp[0][k] = 1; 12 for(int i = 1; i \u0026lt;= n; i++) { 13 int sum = 0; 14 for(int j = k; j \u0026gt;= 0; j--) { 15 sum = (sum + dp[(i + 1) \u0026amp; 1][j]) % mod; 16 if(j + a[i] + 1 \u0026lt;= k) 17 sum = (sum + mod 18 - dp[(i + 1) \u0026amp; 1][j + a[i] + 1]) % mod; 19 dp[i \u0026amp; 1][j] = sum; 20 } 21 } 22 printf(\u0026#34;%d\\n\u0026#34;, dp[n \u0026amp; 1][0]); 23 return 0; 24}  N. Slimes dp[i][j] 為合併史萊姆 i ~ j 所需的最小 cost。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define maxn 405 4#define INF 100000000000000 5typedef long long LL; 6int main() { 7 int n; scanf(\u0026#34;%d\u0026#34;, \u0026amp;n); 8 int a[maxn]; 9 for (int i = 1; i \u0026lt;= n; i++) 10 scanf(\u0026#34;%d\u0026#34;, \u0026amp;a[i]); 11 LL sum[maxn] = {}; 12 LL dp[maxn][maxn] = {}; 13 for (int i = 1; i \u0026lt;= n; i++) 14 sum[i] = sum[i - 1] + a[i]; 15 for (int len = 2; len \u0026lt;= n ; len++) 16 for(int i = 1, j = i + len - 1; j \u0026lt;= n; i++, j++) { 17 dp[i][j] = INF; 18 for (int k = i; k \u0026lt; j; k++) 19 dp[i][j] = min(dp[i][j], 20 dp[i][k] + dp[k + 1][j] + sum[j] - sum[i - 1]); 21 } 22 printf(\u0026#34;%lld\\n\u0026#34;, dp[1][n]); 23 return 0; 24}  O. Matching 位元 dp。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define maxn 23 4#define maxm (1\u0026lt;\u0026lt;21)+5 5#define mod 1000000007 6int dp[maxm] = {1}; 7int main() { 8 int n; scanf(\u0026#34;%d\u0026#34;, \u0026amp;n); 9 int a[maxn][maxn]; 10 for (int i = 0; i \u0026lt; n; i++) 11 for (int j = 0; j \u0026lt; n; j++) 12 scanf(\u0026#34;%d\u0026#34;, \u0026amp;a[i][j]); 13 int M = (1 \u0026lt;\u0026lt; n) - 1; 14 for (int j = 0; j \u0026lt;= M; j++) { 15 int i = __builtin_popcount(j) - 1; 16 for (int k = 0; k \u0026lt; n; k++) 17 if (j \u0026amp; (1 \u0026lt;\u0026lt; k) \u0026amp;\u0026amp; a[i][k]) 18 dp[j] = (dp[j] + dp[j - (1 \u0026lt;\u0026lt; k)]) % mod; 19 } 20 printf(\u0026#34;%d\\n\u0026#34;, dp[M]); 21 return 0; 22}  P. Independent Set 經典樹 dp。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define maxn 100005 4#define mod 1000000007 5vector\u0026lt;int\u0026gt; e[maxn]; 6long long dp[maxn][2] = {}; 7void dfs(int v, int p) { 8 dp[v][0] = dp[v][1] = 1; 9 for (int u : e[v]) { 10 if (u == p) continue; 11 dfs(u, v); 12 dp[v][0] = dp[v][0] * (dp[u][0] + dp[u][1]) % mod; 13 dp[v][1] = dp[v][1] * dp[u][0] % mod; 14 } 15} 16int main() { 17 int n; scanf(\u0026#34;%d\u0026#34;, \u0026amp;n); 18 for (int i = 1; i \u0026lt; n; i++) { 19 int a, b; scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;a, \u0026amp;b); 20 e[a].push_back(b), e[b].push_back(a); 21 } 22 dfs(1, 0); 23 printf(\u0026#34;%lld\\n\u0026#34;, (dp[1][1] + dp[1][0]) % mod); 24 return 0; 25}  Q. Flowers 帶權最長遞增子序列（Weighted Longest Increasing Subsequence）。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define maxn 200005 4typedef long long LL; 5int main() { 6 int n; scanf(\u0026#34;%d\u0026#34;, \u0026amp;n); 7 int h[maxn], a[maxn]; 8 for (int i = 0; i \u0026lt; n; i++) scanf(\u0026#34;%d\u0026#34;, \u0026amp;h[i]); 9 for (int i = 0; i \u0026lt; n; i++) scanf(\u0026#34;%d\u0026#34;, \u0026amp;a[i]); 10 map\u0026lt;int, LL\u0026gt; m; m[0] = 0; 11 for(int i = 0; i\u0026lt;n; i++) { 12 map\u0026lt;int,LL\u0026gt;::iterator iter, iter_tmp; 13 iter = m.lower_bound(h[i]); 14 iter--; 15 LL val = iter-\u0026gt;second + a[i]; 16 iter++; 17 while(iter != m.end() \u0026amp;\u0026amp; iter-\u0026gt;second \u0026lt;= val) { 18 iter_tmp = iter; 19 iter_tmp++; 20 m.erase(iter); 21 iter = iter_tmp; 22 } 23 m[h[i]] = val; 24 } 25 printf(\u0026#34;%lld\\n\u0026#34;, m.rbegin()-\u0026gt;second); 26 return 0; 27}  R. Walk 矩陣快速冪。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define maxn 55 4#define mod 1000000007 5typedef long long LL; 6struct matrix { 7 int sz; 8 int m[maxn][maxn]; 9 matrix(){} 10 matrix(int n) : sz(n) { memset(m, 0, sizeof(m)); } 11 void operator = (const matrix \u0026amp;A) { 12 for (int i = 0; i \u0026lt; sz; i++) 13 for (int j = 0; j \u0026lt; sz; j++) 14 m[i][j] = A.m[i][j]; 15 } 16 matrix operator*(const matrix \u0026amp;A) { 17 matrix B(sz); 18 for (int i = 0; i \u0026lt; sz; i++) 19 for (int j = 0; j \u0026lt; sz; j++) { 20 B.m[i][j] = 0; 21 for (int k = 0; k \u0026lt; sz; k++) 22 B.m[i][j] = ((LL)m[i][k] * A.m[k][j] % mod 23 + B.m[i][j]) % mod; 24 } 25 return B; 26 } 27}; 28matrix pow(matrix A, LL k) { 29 matrix ans(A.sz); 30 for (int i = 0; i \u0026lt; A.sz; i++) 31 ans.m[i][i] = 1; 32 while (k) { 33 if (k \u0026amp; 1) ans = ans * A; 34 k \u0026gt;\u0026gt;= 1; 35 A = A * A; 36 } 37 return ans; 38} 39int main() { 40 int n; 41 LL k; 42 scanf(\u0026#34;%d%lld\u0026#34;, \u0026amp;n, \u0026amp;k); 43 matrix A(n); 44 for (int i = 0; i \u0026lt; n; i++) 45 for (int j = 0; j \u0026lt; n; j++) 46 scanf(\u0026#34;%d\u0026#34;, \u0026amp;A.m[i][j]); 47 matrix ans = pow(A, k); 48 int cnt = 0; 49 for (int i = 0; i \u0026lt; n; i++) 50 for (int j = 0; j \u0026lt; n; j++) 51 cnt = (cnt + ans.m[i][j]) % mod; 52 printf(\u0026#34;%d\\n\u0026#34;, cnt); 53 return 0; 54}  S. Digit Sum dp[i][j][k]：到第 i 個字母，同餘 j 的方法數，k 代表前 i 位是否和 input 的前 i 位一致。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define mod 1000000007 4int dp[2][102][2] = {}; 5inline void add(int \u0026amp;a, int b) { 6 a = (a + b % mod) % mod; 7} 8int main() { 9 ios_base::sync_with_stdio(0); 10 cin.tie(0); 11 string s; int d; 12 cin \u0026gt;\u0026gt; s \u0026gt;\u0026gt; d; 13 int len = s.length(); 14 dp[1][0][1] = 1; 15 for (int i = 0; i \u0026lt; len; i++) { 16 memset(dp[i \u0026amp; 1], 0, sizeof(dp[i \u0026amp; 1])); 17 for (int j = 0; j \u0026lt; d; j++) 18 for (int k = 0; k \u0026lt;= 9; k++) 19 if(k \u0026lt; s[i]-\u0026#39;0\u0026#39;) 20 add(dp[i \u0026amp; 1][(j + k) % d][0], 21 dp[!(i \u0026amp; 1)][j][0]), 22 add(dp[i \u0026amp; 1][(j + k) % d][0], 23 dp[!(i \u0026amp; 1)][j][1]); 24 else if (k == s[i] - \u0026#39;0\u0026#39;) 25 add(dp[i \u0026amp; 1][(j + k) % d][0], 26 dp[!(i \u0026amp; 1)][j][0]), 27 add(dp[i \u0026amp; 1][(j + k) % d][1], 28 dp[!(i \u0026amp; 1)][j][1]); 29 else 30 add(dp[i \u0026amp; 1][(j + k) % d][0], 31 dp[!(i \u0026amp; 1)][j][0]); 32 } 33 cout \u0026lt;\u0026lt; (dp[!(len \u0026amp; 1)][0][0] + 34 dp[!(len \u0026amp; 1)][0][1] - 1 + mod) % mod \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 35 return 0; 36}  T. Permutation dp[i][j] 定義為前 i + 1 個數字結尾為 j 的組合數為多少（1 ≤ j ≤ i + 1）。 前綴和加速到 O(n²)。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3const int mod = 1000000007; 4int main() { 5 ios_base::sync_with_stdio(0),cin.tie(0); 6 int n; 7 string s; 8 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; s; 9 vector\u0026lt;int\u0026gt; dp(n + 1, 0), sum(n + 1, 1); 10 dp[1] = 1, sum[0] = 0; 11 for (int i = 1; i \u0026lt; n; i++) { 12 for (int j = 1; j \u0026lt;= i + 1; j++) { 13 if (s[i - 1] == \u0026#39;\u0026gt;\u0026#39;) 14 dp[j] = (sum[i] - sum[j - 1] + mod) % mod; 15 else 16 dp[j] = sum[j - 1]; 17 } 18 for (int j = 1; j \u0026lt;= n; j++) 19 sum[j] = (sum[j - 1] + dp[j]) % mod; 20 } 21 cout \u0026lt;\u0026lt; sum[n] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 22 return 0; 23}  U. Grouping 學會枚舉子集的辦法了！！\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4int main() { 5 ios_base::sync_with_stdio(0), cin.tie(0); 6 int n; cin \u0026gt;\u0026gt; n; 7 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; a(n, vector\u0026lt;int\u0026gt;(n)); 8 for (int i = 0; i \u0026lt; n; i++) 9 for (int j = 0; j \u0026lt; n; j++) 10 cin \u0026gt;\u0026gt; a[i][j]; 11 int m = (1 \u0026lt;\u0026lt; n); 12 vector\u0026lt;ll\u0026gt; cnt(m), dp(m); 13 for (int s = 0; s \u0026lt; m; s++) 14 for (int i = 0; i \u0026lt; n; i++) 15 if (s \u0026amp; (1 \u0026lt;\u0026lt; i)) 16 for (int j = i; j \u0026lt; n; j++) 17 if (s \u0026amp; (1 \u0026lt;\u0026lt; j)) 18 cnt[s] += a[i][j]; 19 for (int s = 0; s \u0026lt; m; s++) 20 for (int sub = s; sub \u0026gt; 0; sub = (sub - 1) \u0026amp; s) 21 dp[s] = max(dp[s], dp[s - sub] + cnt[sub]); 22 cout \u0026lt;\u0026lt; dp[m - 1] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 23 return 0; 24}  V. Subtree 參考 codeforces 這篇討論 才寫出來。\n解法：（有根樹）。\n up/down[node] 是 node 以上/下的點塗黑的方法數。 down 的不難算，直接 dfs 做樹 dp 就行了。 up 需要用到 down 的結果，算如果取 parent，其他子樹 down 的方法數。 +1 代表不取 parent。 最後各點的結果為 up * down。 算其他子樹的方法和，因為需要取 mod 且模數不為質數，故需要維護其前/後綴積。  1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4#define maxn 100005 5#define pb push_back 6int mod; 7vector\u0026lt;int\u0026gt; e[maxn]; 8vector\u0026lt;ll\u0026gt; pre[maxn], suf[maxn]; 9ll up[maxn], down[maxn]; 10void dfs1(int u, int p) { 11 for (int uu : e[u]) 12 if (uu != p) dfs1(uu, u); 13 for (int i = 0; i \u0026lt; e[u].size(); i++) { 14 int uu = e[u][i]; 15 pre[u][i] = i ? pre[u][i-1] : 1; 16 if(uu != p) 17 pre[u][i] = pre[u][i] * (1 + down[uu]) % mod; 18 } 19 for (int i = e[u].size() - 1; i \u0026gt;= 0; i--) { 20 int uu = e[u][i]; 21 suf[u][i] = (i \u0026lt; e[u].size() - 1) ? suf[u][i + 1] : 1; 22 if(uu != p) 23 suf[u][i] = suf[u][i] * (1 + down[uu]) % mod; 24 } 25 down[u] = suf[u][0]; 26} 27void dfs2(int u, int p) { 28 for (int i = 0; i \u0026lt; e[u].size(); i++) { 29 int uu = e[u][i]; 30 if (uu == p) continue; 31 ll cnt = up[u]; 32 if(i) 33 cnt = cnt * pre[u][i - 1] % mod; 34 if(i + 1 \u0026lt; e[u].size()) 35 cnt = cnt * suf[u][i + 1] % mod; 36 up[uu] = cnt + 1; // 1是不取par 37 dfs2(uu, u); 38 } 39} 40int main() { 41 ios_base::sync_with_stdio(0); 42 cin.tie(0); 43 int n; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; mod; 44 for (int i = 1; i \u0026lt; n; i++) { 45 int a, b; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 46 e[a].pb(b), e[b].pb(a); 47 } 48 e[1].pb(0), up[1] = 1; 49 for (int i = 1; i \u0026lt;= n; i++) { 50 pre[i].resize(e[i].size()); 51 suf[i].resize(e[i].size()); 52 } 53 dfs1(1, 0), dfs2(1, 0); 54 for (int i = 1; i \u0026lt;= n; i++) 55 cout \u0026lt;\u0026lt; down[i] * up[i] % mod \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 56 return 0; 57}  W. Intervals  題意： 給定 M (1 ≤ M ≤ 200000) 組 (l[i], r[i]) (1 ≤ l[i] ≤ r[i] ≤ N ≤ 200000) 和 a[i] (|a[i]| ≤ 1000000000)。 當 l[i] ~ r[i] 至少有一個 1 的 a[i] 分，問構造出長度 N 的 01 字串最高得幾分。 解法：  轉移式：dp[i] = max{ dp[j] + sum{a[k]} }, j \u0026lt; l[k] ≤ i ≤ r[k] 優化：區間加值線段樹維護最大值。    1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4typedef pair\u0026lt;int, ll\u0026gt; pil; 5#define ls i \u0026lt;\u0026lt; 1 6#define rs i \u0026lt;\u0026lt; 1 | 1 7class RangeUpdateSegmentTree { 8 private: 9 struct node { 10 int l, r; 11 ll x = 0, adt = 0; 12 }; 13 vector\u0026lt;node\u0026gt; a; 14 void push(int i) { 15 if (a[i].adt) { 16 a[ls].adt += a[i].adt, a[rs].adt += a[i].adt; 17 a[ls].x += a[i].adt, a[rs].x += a[i].adt; 18 a[i].adt = 0; 19 } 20 } 21 void pull(int i) { 22 a[i].x = max(a[ls].x, a[rs].x); 23 } 24 void build(int l, int r, int i) { 25 a[i].l = l, a[i].r = r; 26 if (l == r) return; 27 int mid = (l + r) \u0026gt;\u0026gt; 1; 28 build(l, mid, ls), build(mid + 1, r, rs); 29 } 30 public: 31 RangeUpdateSegmentTree(int n) : a(n \u0026lt;\u0026lt; 2) { 32 build(0, n, 1); 33 } 34 void add(int l, int r, ll val, int i = 1) { 35 if (a[i].l \u0026gt;= l \u0026amp;\u0026amp; a[i].r \u0026lt;= r) { 36 a[i].x += val; 37 a[i].adt += val; 38 return; 39 } 40 push(i); 41 int mid = (a[i].l + a[i].r) \u0026gt;\u0026gt; 1; 42 if (l \u0026lt;= mid) add(l, r, val, ls); 43 if (r \u0026gt; mid) add(l, r, val, rs); 44 pull(i); 45 } 46 ll maxx(int l, int r, int i = 1) { 47 if (l \u0026lt;= a[i].l \u0026amp;\u0026amp; a[i].r \u0026lt;= r) return a[i].x; 48 push(i); 49 ll ret = -9e18; 50 int mid = (a[i].l + a[i].r) \u0026gt;\u0026gt; 1; 51 if (l \u0026lt;= mid) ret = max(ret, maxx(l, r, ls)); 52 if (r \u0026gt; mid) ret = max(ret, maxx(l, r, rs)); 53 pull(i); 54 return ret; 55 } 56}; 57int main() { 58 ios_base::sync_with_stdio(0); 59 cin.tie(0); 60 int n, m; 61 cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 62 vector\u0026lt;ll\u0026gt; add(n + 1); 63 vector\u0026lt;vector\u0026lt;pil\u0026gt;\u0026gt; del(n + 1); 64 for (int i = 0; i \u0026lt; m; i++) { 65 int l, r; ll a; 66 cin \u0026gt;\u0026gt; l \u0026gt;\u0026gt; r \u0026gt;\u0026gt; a; 67 add[l] += a; 68 del[r].push_back(pil(l, a)); 69 } 70 RangeUpdateSegmentTree ST(n + 1); 71 ll ans = 0; 72 for (int i = 1; i \u0026lt;= n; i++) { 73 ST.add(0, i - 1, add[i]); 74 ll tmp = ST.maxx(0, i - 1); 75 ans = max(ans, tmp); 76 ST.add(i, i, tmp); 77 for (pil p : del[i]) 78 ST.add(0, p.first - 1, -p.second); 79 } 80 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 81 return 0; 82}  X. Tower 將 solidness 排序後，再做 dp。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long LL; 4typedef pair\u0026lt;int,int\u0026gt; pii; 5typedef pair\u0026lt;int,pii\u0026gt; box; 6#define s first 7#define w second.first 8#define v second.second 9#define maxn 1005 10#define maxs 20005 11int main() { 12 int n; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); 13 box b[maxn]; 14 for(int i=0; i\u0026lt;n; i++){ 15 scanf(\u0026#34;%d%d%d\u0026#34;, \u0026amp;b[i].w, \u0026amp;b[i].s, \u0026amp;b[i].v); 16 b[i].s += b[i].w; 17 } 18 sort(b, b + n); 19 LL dp[maxs] = {}; 20 LL ans = 0; 21 for (int i = 0; i \u0026lt; n; i++) { 22 for (int j = b[i].s; j \u0026gt;= b[i].w; j--) { 23 dp[j] = max(dp[j], dp[j - b[i].w] + b[i].v); 24 ans = max(ans, dp[j]); 25 } 26 } 27 printf(\u0026#34;%lld\\n\u0026#34;, ans); 28 return 0; 29}  Y. Grid 2 如果沒有障礙物，答案會是 C(h - 1 + w - 1, h - 1)。 有障礙物，就將障礙物那格的答案扣掉 C(x[i] - x[j] + y[i] - y[j], x[i] - x[j]) 次。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, int\u0026gt; pii; 4typedef long long ll; 5#define x first 6#define y second 7#define mod 1000000007 8#define LEN 200005 9ll frc[LEN], inv[LEN]; 10ll modinv(ll a, ll p = mod) { 11 if (p == 1) return 0; 12 ll pp = p, y = 0, x = 1; 13 while (a \u0026gt; 1) { 14 ll q = a / p, t = p; 15 p = a % p, a = t, t = y, y = x - q * y, x = t; 16 } 17 if (x \u0026lt; 0) x += pp; 18 return x; 19} 20void init() { 21 frc[0] = frc[1] = inv[0] = inv[1] = 1; 22 for (int i = 2; i \u0026lt; LEN; i++) { 23 frc[i] = frc[i - 1] * i % mod; 24 inv[i] = modinv(frc[i]); 25 } 26} 27inline ll C(int a, int b) { 28 return frc[a + b] * inv[a] % mod * inv[b] % mod; 29} 30inline void sub(ll \u0026amp;a, ll b) { 31 a = (a - b % mod + mod) % mod; 32} 33int main() { 34 ios_base::sync_with_stdio(0); 35 cin.tie(0); 36 init(); 37 int h, w, n; 38 cin \u0026gt;\u0026gt; h \u0026gt;\u0026gt; w \u0026gt;\u0026gt; n; 39 vector\u0026lt;pii\u0026gt; p(n); 40 for (int i = 0; i \u0026lt; n; i++) 41 cin \u0026gt;\u0026gt; p[i].x \u0026gt;\u0026gt; p[i].y; 42 sort(p.begin(), p.end()); 43 p.push_back(pii(h, w)); 44 vector\u0026lt;ll\u0026gt; dp(n + 1, 0); 45 for (int i = 0; i \u0026lt;= n; i++) { 46 dp[i] = C(p[i].x - 1, p[i].y - 1); 47 for (int j = 0; j \u0026lt; i; j++) 48 if (p[i].y \u0026gt;= p[j].y) 49 sub(dp[i], dp[j] * C(p[i].x - p[j].x, p[i].y - p[j].y)); 50 } 51 cout \u0026lt;\u0026lt; dp[n] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 52 return 0; 53}  Z. Grid 3 h[i] 為遞增，故可斜率優化，總複雜度 O(N)。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4int main() { 5 ios_base::sync_with_stdio(0), cin.tie(0); 6 int n; ll C; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; C; 7 vector\u0026lt;ll\u0026gt; h(n + 1); 8 for (int i = 1; i \u0026lt;= n; i++) cin \u0026gt;\u0026gt; h[i]; 9 vector\u0026lt;ll\u0026gt; dp(n + 1); 10 deque\u0026lt;int\u0026gt; dq(1, 1); 11 auto X = [\u0026amp;](int i) { 12 return -2 * h[i]; 13 }; 14 auto Y = [\u0026amp;](int i) { 15 return h[i] * h[i] + dp[i]; 16 }; 17 auto F = [\u0026amp;](int i, int j) { 18 return h[i] * X(j) + Y(j) + C + h[i] * h[i]; 19 }; 20 auto cross = [](ll x1, ll y1, ll x2, ll y2) { 21 return x1 * y2 - x2 * y1; 22 }; 23 for (int i = 2; i \u0026lt;= n; i++) { 24 while (dq.size() \u0026gt;= 2) { 25 if (F(i, dq[0]) \u0026gt;= F(i, dq[1])) 26 dq.pop_front(); 27 else break; 28 } 29 dp[i] = F(i, dq[0]); 30 while (dq.size() \u0026gt;= 2) { 31 int j = dq.back(), k = dq[dq.size()-2]; 32 if (cross(X(j)-X(k), Y(j)-Y(k), X(i)-X(j), Y(i)-Y(j)) \u0026gt;= 0) 33 dq.pop_back(); 34 else break; 35 } 36 dq.push_back(i); 37 } 38 cout \u0026lt;\u0026lt; dp[n] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 39 return 0; 40}  ","date":"2021-01-04T11:59:31+08:00","permalink":"https://Luke2336.github.io/p/atcoder_education_dp/","title":"AtCoder Educational DP Contest"},{"content":"為了寫 OS 功課，下午去計中想試著裝 Ubuntu，但因為記憶體只有 1GB，所以根本不可能。最後想了一下，應該只需要用 Linux 就可以完成功課了，但是用工作站的 Linux 卻抓不到 Kernel Header。心累～\n很開心 nini 學妹下午從台北回來時，買了蛋糕給我吃。\n洗完澡後，吃了吐司抹果醬當晚餐。\n","date":"2021-01-04T11:58:39+08:00","image":"https://Luke2336.github.io/post/Diary/20210104/cake.jpg","permalink":"https://Luke2336.github.io/p/20210104/","title":"2021/01/04 日記"},{"content":"早上起床時覺得很累，先跳繩 200 下，然後整理了房間，買了麥當勞當午餐。\n中午之後就一直在忙 OS 的 HW1，跟 Steven 借了 Code 參考了一下該用哪些 module 和 function，然後就自己寫的更簡短，大約 70 行左右，算一算總共花了 7.5 小時在這份作業。\n晚餐吃了自助餐，因為心情不好，所以就吃了雞腿。\n下週五要交 HW2，週日要交 HW3，覺得有點趕。看了一下 HW2 比較麻煩，要寫 Page Table，雖然只要填空其中一小部分。HW3 和 HW4 似乎都只要下 cmd。\nHW4 可能會放到電路學考完後再處理，好擔心電路學期末爆掉，也很擔心期末專題的事，不想當雷組員。\n","date":"2021-01-03T21:21:24+08:00","permalink":"https://Luke2336.github.io/p/20210103/","title":"2021/01/03 日記"},{"content":"今天滿滿的都是分手的痛，身心都痛，吃不下飯。很難過，但卻沒有人陪。\n下午試著寫了 OS 的 HW1，但還是一團糟。於是就洗個澡，洗衣服，完成了交換的申請文件。\n晚上被隊友約去吃宵夜，遇到了威達，他們聊了很多 SA 的事，我一個人有點孤單，但還是很開心他們把我約出去。\n","date":"2021-01-02T14:29:12+08:00","permalink":"https://Luke2336.github.io/p/20210102/","title":"2021/01/02 日記"},{"content":"吃完漢堡王後，去山上，過敏有點嚴重，晚餐吃了燒肉。\n飯後，ㄠㄨ傳訊息問我問題，聊了幾句之後，決定分手。\n","date":"2021-01-02T14:22:35+08:00","permalink":"https://Luke2336.github.io/p/20210101/","title":"2021/01/01 日記"},{"content":"白天去看了醫生，把電路作業寫完了。\n晚上去牛排店體驗了豬排，然後去清大跨年。\n","date":"2020-12-31T16:54:08+08:00","permalink":"https://Luke2336.github.io/p/20201231/","title":"2020/12/31 日記"},{"content":"CH14 這章用 Frequency Domain 來討論電路學，主要的重點有以下幾個：\n Frequency \u0026amp; Magnitude Responce Bode Plots Resonance, Half-Power Freq., Quality Factor Filter: Lowpass, Highpass, Bandpass, Bandstop Magnitude \u0026amp; Frequency Scaling  ","date":"2020-12-30T15:29:08+08:00","image":"https://Luke2336.github.io/post/Other/circuit_ch14/filter.jpg","permalink":"https://Luke2336.github.io/p/circuit_ch14/","title":"電路學第 14 章"},{"content":"氣溫驟降，雖然室內有 19 度左右，室外卻只有 11 度，很冷。\n早上考了兩科期末考。中午看到認識語言的總成績已經出來了，94分，比預想的高，原本以為大約 92 分，可能有微微調分吧？\n下午讀了電路學的第 14 章，量有點大。卦長告訴我他看不懂 OS 作業，所以幫不上忙 QAQ 讓我壓力有點大，畢竟現在還有交換申請的自傳還沒寫完，以及電路學的考試和作業，另外還有電路 Final Project 還沒開始弄。\n晚餐吃了狗尾草雞湯，想到很久沒去八分寮吃了～飯後就直接睡了，從八點睡到快十二點，之後心情不太好，到三點多才又開始睡。\n期末考 德文期末考 沒看到公告說 8:15 才開始，結果太早到。\n考試內容不難，都是考文法居多，動詞變化、受格、所有格、冠詞，有點吃虧，我花了不少時間被單字，反而陰陽性沒有記得很熟，但感覺應該是可以有 70 以上。\nOS 期末考 在綜一考試，共 10 題，每題都 10 分，覺得這種配分有點糟，因為有些題是選擇題，選錯就爆了，不像問答題會有部份分。\n考完試不小心把筆袋掉在教室 QAQ\n","date":"2020-12-30T11:01:35+08:00","permalink":"https://Luke2336.github.io/p/20201230/","title":"2020/12/30 日記"},{"content":"早上自己讀了一下 OS 的第五章，中午去寄了信，然後卦長幫我複習了一下第九章之後的內容。\n晚上跟卡車、宗達、彥彤去巨城吃飯，欠了彥彤 $175。\n晚餐後讀了德文，然後喝了一小杯梅酒氣泡水才睡。\n晚上一直做惡夢，有夢到自己被隊友嫌棄，還有一些偏向災難片的夢，醒了三次以上。\n","date":"2020-12-30T11:01:29+08:00","permalink":"https://Luke2336.github.io/p/20201229/","title":"2020/12/29 日記"},{"content":"CH5 - Process Synchronization The Critical-Section Problem 有些資源只能同時被一個 process 使用。\ndo { entry_section(); // critical section  exit_section(); // remainder section while (true);  Mutual Excusion Progress (Freedom from Deadlock) Bounded Wait (Freedom from Starvation)   preemptive: 資源被使用時可以被打斷 non-preemptive  Peterson\u0026rsquo;s Solution class PetersonLock { // shared var.  bool flag[2]; int victim; public: void lock() { int i = ThreadID.get(); int j = 1 - i; flag[i] = true; victim = i; while (flag[j] \u0026amp;\u0026amp; victim == i); } void unlock() { int i = ThreadID.get(); flag[i] = false; } }; do { lock(); // critical section  unlock(); // remainder section while (true); Test \u0026amp; Set // atomic bool test_and_set (bool *target) { bool ret = *target; *taget = true; return ret; } do { wait[i] = true; while (wait[i] \u0026amp;\u0026amp; test_and_set(\u0026amp;lock) ); wait[i] = false; // critical section  j = (i + 1) % n; while ( (j != i) \u0026amp;\u0026amp; !waiting[j] ) j = (j + 1) % n; if (j == i) lock = flase; else wait[j] = false; } while (true); Compare \u0026amp; Swap int compare_and_swap (int * val, int expected, int new_val) { int tmp = *val; if (*val == expected) *val = new_value; return tmp; } do { while (compare_and_swap(\u0026amp;lock, 0, 1) ); // critical section  lock = 0; // remainder section } while (true); Mutex acqueire() and release() are atomic.\nacquire() { while (!available) ; available = false; } release () { available = true; } do { acquire(); // critical section  release(); // remainder section } while (true); Semaphore  counting/binary semaphore semaphore S : integer wait() and signal() are atomic  wait(S) { while (S \u0026lt;= 0) yeild(); S--; } signal(S) { S++; } Implementation (Blocking) struct sempaphore { int cnt; queue q; } void wait(semaphore *S) { S-\u0026gt;cnt--; if (S-\u0026gt;cnt \u0026lt; 0) { S-\u0026gt;q.push(process); block(); } } void signal(semaphore *S) { S-\u0026gt;cnt++; if (S-\u0026gt;cnt \u0026gt;= 0) { P = S-\u0026gt;q.pop(); wakeup(P); } } Examples 1. Bounded-Buffer Problem init Semaphores: mutex-\u0026gt;cnt = 1; full-\u0026gt;cnt = 0; empty-\u0026gt;cnt = N; // producer do { // produce an item  wait(empty); wait(mutex); // add the item to buffer;  buffer[in] = product; in = (in + 1) % N; signal(mutex); signal(full); } while (true); // consumer do { // produce an item  wait(full); wait(mutex); // add the item to buffer;  product = buffer[out]; out = (out + 1) % N; signal(mutex); signal(empty); } while (true); 2. Readers-Writers Problem 3. Dining-Philosophers Problem ","date":"2020-12-28T14:40:40+08:00","image":"https://Luke2336.github.io/post/Other/os_review/OS.jpg","permalink":"https://Luke2336.github.io/p/os_ch5/","title":"OS CH5 複習"},{"content":"今天將認識語言的報告寫完，中午就交出去了，傍晚便收到評語，得到了 94 分，覺得很開心，因為有幾個問題被認為提得不錯，主要是對於演化的部分。\n下午又整理了一下德文筆記，讀了一點點 OS，然後晚餐吃了漢堡。頭有點痛，偶而也會暈，這幾天都很早起來，算是輕微失眠。\n","date":"2020-12-28T11:59:10+08:00","permalink":"https://Luke2336.github.io/p/20201228/","title":"2020/12/28 日記"},{"content":"方向 / 方位    中文 German     上 über   下 unter   左 links   右 rechts       中文 German     東 der Osten   西 der Westen   南 der Süden   北 der Norden     Berlin liegt im Osten von Deutschland. in die Mitte  數字用法    Zahlen German Zahlen German Zahlen German     0 null 10 zehn 20 zwanzig   1 eins 11 elf 21 einundzwanzig   2 zwei 12 zwölf     3 drei 13 dreizehn     4 vier 14 vierzehn     5 fünf 15 fünfzehn     6 sechs 16 sechzehn     7 sieben 17 siebzehn     8 acht 18 achtzehn     9 neun 19 neunzehn         Zahlen German     20 zwanzig   30 dreißig   40 vierzig   50 fünfzig   60 sechzig   70 siebzig   100 (ein)hundert   101 hunderteins   1.000 (ein)tausend   10.000 zehntausend   100.000 hunderttausend   1.000.000 eine Million   1.000.000.000 eine Billion    價格 Preis  小數點 (,) 千分位 (.) 100 Cent = 1 Eruo 9,99 € = 9 Euro 99 9,99 € = 50 Cent  WH 疑問句    German English     Was What   Wer Who   Wie How   Wo Where   Woher From where    動詞變化    中文 人稱 規則 machen leben wohnen arbeiten haben sprechen sein     我 ich e mache lebe wohne arbeite habe spreche bin   你 du st machst lebst wohnst arbeitest hast sprichst bist   他/她 er/sie t macht lebt wohnt arbeitet hat spricht ist   我們 wir - machen leben wohnen arbeiten haben sprechen sind   你們 ihr t macht lebt wohnt arbeitet habt spricht seid   他們/您(們) sie/Sie - machen leben wohnen arbeiten haben sprechen sind    自我介紹 Name 姓名  Wie heißen Sie / heißt du? Wer sind Sie / bist du? Ich bin/heiße ___. Mein Name ist ___.  Herkunft 籍貫  Woher kommen Sie / kommst du? Ich komme aus Taiwan.  Wohnort 居住地  Wo wohnen Sie / wohnst du? Ich wohne in ___.  Alter 年齡  Wie alt sind Sie / bist du? Ich bin 20 Jahre alt  Beruf 職業  Was sind Sie / bist du von Beruf? Was machen Sie / machst du beruflich? Ich bin / arbeite als ___ bei ___.  Famienstand  Ich habe ein Kind / zwei, keine Kinder. Ich bin verheirater（結婚） / geschieden（離婚） / Single. Ich leben (nicht) zusammen.（同居）  問候語 打招呼  Hallo. Guten Morgen. Guten Tag. Guten Abend. Gute Nacht.  How are you?  Wie gets es Ihnen? / Wie geht\u0026rsquo;s?  Sehr gut. Gut, danke. Es geht. Nicht so gut.   Gut, danke. Und Ihnen?  Auch gut.    Googbye  Auf Wiedersehen. Tschüs.  Burufe    中文 男生 女生     工程師 der Ingenieur    機械師 der Mechatroniker    演員 der Schauspieler    大學生 der Student die Studentin   記者 der Journalist die Journalistin   髮型師  die Friseurin   建築師  die Architektin   秘書  die Sekretärin   醫生 der Arzt die Ärztin   教師 der Lehrer    小販 der Verkäufer    服務生  die Kellnerin    Mann / Frau    男生 女生     Kollege Kollegin   Freund Freundin   Partner Partnerin    Familie    中文 English German     父親 Father der Vater   母親 Mother die Mutter   父母 Parent die Eltern   兒子 Son der Sohn   女兒 Daughter die Tochter   兄弟 Brother der Bruder   姐妹 Sister die Schwester   兄弟姊妹 Sibling die Geschwister   祖父 Grandpa der Großvater / Opa   祖母 Grandma die Großmutter / Oma   祖父母 Grandparent die Großeltern   孫女 Granddaughter die Enkelin   孫子 Grandson der Enkel   先生 Husband der Ehemann   太太 Wife die Ehefrau    所有格    主格 der / das die     ich mein meine   du dein deine   er/es sein seine   sie ihr ihre   wir unser unsere   Sie Ihr Ihre    所有格 Akkusativ nach haben, brauchen, suchen, \u0026hellip;     definiter Artikel indefiniter Artikel Netativ-Artikel      Sie hat den einen keinen Laptop.    das ein kein Formula.    die eine keine Briefmarke.    die - keine Stifte.    Sprachen  Welche Sprachen sprechen Sie / sprichst du? Ich spreche sehr gut / gut / ein bisschen \u0026hellip;     der Land Sprachen     das Deutschland Deutsch   das Frankreich Französisch   die USA    die Niederlande Niederländisch   England Englisch   das Mexiko    das Spanien Spanisch   die Türkei    das Polen Polnisch   das Tschechien Tschechisch   das Russsland Russisch   das Österreich     Möbel 家具    English German Plural     bed das Bett Betten   picture das Bild Bilder   armchair der Sessel Sessel   lamp die Lampe Lampen   chair der Stuhl Stühle   sofa das Sofa Sofas   couch die Couch Couchen   table der Tisch Tische   closet（抽屜） der Schrank Schränke   carpet（地毯） der Teppich Teppiche    Gegenstände    English German Plural     pencil der Bleistift Bleistifte   glasses die Brille Brillen   book das Buch Bucher   bottle die Flasche Flaschen   lighter das Feuerzeug Feuerzeuge   camera der Fotoapparat Fotoapparate   chain die Kette Ketten   pen der Kugelschreiber Kugelschreiber   key der Schlüssel Schlüssel   bag die Tasche Taschen    Im Büro    English German Plural     laptop der Laptop Laptops   e-mail die E-Mail E-Mails   cell phone das Handy Handys   SMS die SMS    bill die Rechnung Rechnungen   phone das Telefon Telefone   form das Formular Formulare   printer der Drucker Drucker   mouse die Maus Mauß   computer der Computer Computer   pen der Stift Stifte   notebook das Notizbuch Notizbucher   calender der Kalender Kalender   screen der Bildschirm Bildschirme    Personalpronomen    maskulin neutral feminin     der das die   er es sie    Beratungsgespräche    German English     Brauchen Sie Hilfe Do you need help   Ja, bitte.      Wie viel / Was kostet (denn) die Lampe? Die Lampe kostet 119 Euro. Das ist ein Sonderangebot（特價）.    Das ist (sehr / zu / aber) teuer / günstig / billig. Der Tisch ist zu groß / zu klein. Ich finde die Lampe (wirklich) sehr schön. Das finde ich auch. 我同意 / Das finde ich night. 我不同意 Finden Sie? / Findest du? 你同意嗎？    teuer 昂貴 günstig / billig 便宜 groß 大 klein 小 schön 漂亮  Materialien 材質  Die Brille ist aus ___.     中文 German     木頭 Holz   金屬 Metall   紙 Papier   塑膠 Kunststoff / Plastik   玻璃 Glas    Farben 顏色    中文 German     紅色 röte / rot   綠色 grün   橘色 orange   黑色 schwarz   棕色 braun   藍色 blau   黃色 gelb   白色 weiß    Formen 形狀    中文 German     方形 eckig   圓形 rund    nach Wörtern fragen  A: Entschuldigung, wie heißt das auf Deutsch? B: Das ist eine Uhr. A: We bitte? Noch einmal, bitte. B: Das ist eine Uhr. A: We schreibt man Uhr? B: U - H - R. A: Danke. B: Bitten schön. Kein Problem.  Internet bestellen 網購  Anrede: Frau / Herr Vorname Falmiliename Geburtsdatum: Tag / Monat / Jahr （生日） Postleitzahl (PLZ) （郵遞區號）  ","date":"2020-12-28T10:19:18+08:00","image":"https://Luke2336.github.io/post/Other/German1/Mecschen.jpg","permalink":"https://Luke2336.github.io/p/german1/","title":"德文（一）筆記"},{"content":"「認識語言」期末報告 以下介紹五個我在「認識語言」下半學期學到的重點。\n1. Chomsky 和行為主義 (Behaviorism) 的對立 語言的學習是後天的 (nurutre)，還是天生就有的 (nuture) 學習能力？\n行為主義興起的背景，要從佛洛伊德的時代開始談起，當時心理學是立足於潛意識等無法觀測的東西，因此很多科學家無法認同心理學屬於科學的一支。\n在 Parlov、Skinner 和 Waston 等人的努力下，產生了行為主義學派。他們透過設計實驗來研究人或動物的行為模式，像是古典制約的實驗中，Parlov 的狗被制約，每次接收到搖鈴刺激 (stimulus)，就會不由自主的流口水。而 Skinner 進一步提出了操作制約，透過食物來讓老鼠自己學會按開關。\n行為主義者宣稱，他們可透過制約，也就是給予 positive/negative reforcement，使人類學習，這屬於 stimulus-response learning。他們認為母語的學習也可以透過同樣的管道。\n對此，Chomsky 有不同的看法，他認為語言的習得無法僅僅透過後天的經驗，先天的能力是必須的，因此他提出了 Universal Grammar。\u0026ldquo;What you know exceeds what you were taught.\u0026quot;，舉例來說，小孩子會犯一些大人不會犯的錯誤，像是 \u0026ldquo;holded\u0026rdquo;，這是他們無法透過模仿習得，可以推論出他們先天具備一些學習語言的能力，像是統計、歸納等等。\nChomsky 說明了在語言的學習上，本能和經驗都是重要的。我認為他的想法是重要且具有突破性的，因為他不只影響了語言學的發展，更對心理學造成了重大的影響，他證明了行為主義是無法解釋所有現象的，讓心理學研究慢慢走出行為主義的框架。\n2. Universal Grammar (UG) Universal Grammar 是 Chomsky 的理論，為了描述所有語言的共同點。Universal Grammar 是由 principles 和 parameters 共同組成。\n由於孩童學習語言的時間是有限的，且他們能得到的資訊量也是有限的，但他們能表達的語句，卻是無限的。可見，這些語句不僅僅是藉由經驗而習得，而需要藉由人類天生就有的 Universal Grammar，將得到的句子提取出一些共通的 principles。像是人們能判斷句子中的代名詞或是反身代名詞是在指誰，都是我們在學習時無法直接解釋的，這些天生就具備的能力，就是屬於 Universal Grammar。\n但這些 principles 卻只能解釋語言具有共通性，而無法解釋語言的差異性，因此他在理論中加入了 parameters 的想法。\n在英語中，是先表達動詞，然後才是受詞。然而，在日語中，兩者卻是相反的。又或是在英文中，我們會將 Where/Who 等疑問詞放在句子開頭，而在中文中，我們卻會任意擺放哪裡/誰/何時在句子的其他位置。這些現象無法被 principles 概括，因此我們有了 parameters。parameters 提供了孩童在學習時，能藉由聽到的資訊，將母語中沒有的 parameters 捨棄，讓他們能專注於學習母語中有的文法或發音。\n我認為 UG 重要的原因在於它解釋了大部分的語言學習現象，但其發展卻極具挑戰，畢竟這個理論需要符合世界上的所有語言，所以每當科學家舉出一個反例時，這個理論就必須做出修改，因此這個理論勢必逐漸簡化成現今的模樣。\nUG 到底是如何演化出來的，我認為這是一個滿有趣的問題。人腦中的 Universal Grammar 到底是愈來愈複雜，又或是愈來愈簡化呢？如果按照我對 Universal Grammar 的認識，有了 parameters 的幫助，或許 principles 是可以發展成愈來愈多的？\n3. 嬰兒的語言發展階段 嬰兒的母語發展有幾個重要的階段：\n 在懷孕的最後幾週，嬰兒的聽力系統已接近發育完全，因此他們就會開始聆聽外界聲音，剛出生的嬰兒就對母語有偏好。 3 個月：larynx lowerling，嬰兒的喉頭會下降，他們能發出更多的聲音。 6 ~ 10 個月：phoneme comprehension，嬰兒開始失去辨識母語以外的音的能力，不再能分辨所有語言中的音，這讓他們能更專注於學習母語。 6 ~ 12 個月：他們透過 Babbling 來學會發音。 1 歲多時他們能一些單詞 (1-word)。快 2 歲時，他們會說兩個詞的句子 (2-words)。 2 ~ 2.5 歲時，telegraphic stage，他們的單字量迅速擴增，並且能組合成完整的句子，儘管文法不一定正確。 2.5 歲後：他們開始發展像成人的語句，並且已習得大多數文法規則，但他們會出現 over-generalization 的狀況，也就是有了像 \u0026ldquo;goed\u0026rdquo; 或是 \u0026ldquo;holded\u0026rdquo; 等成人不會犯錯誤。  科學家是如何針對不會說話的嬰兒進行研究呢？他們有幾種有趣的研究方式，例如：\n Pacifier experiment：他們利用嬰兒吸食奶嘴的速度來研究嬰兒對事物的興趣，例如他們在聽到的聲音從 /ba/ 變成 /pa/ 時，他們會改變吸食速度。 Head-turn Experiment：科學家可能藉由讓嬰兒學會某些規則，例如聽到 ABA 時，玩偶會出現在左方，反之，聽到 AAB ，則會出現在右方。之後，在透過紀錄嬰兒轉頭的方向，來實驗嬰兒是否能學會規則。  這幾個發展的階段，有解釋到幾個我以前無法理解的疑問。首先，我了解到我們長大後學習語言，為什麼無法達到學母語一樣的成果。接著，我也理解到人類演化出喉頭下降是非常重要的，像是我們的近親 - 猿類，就沒有這個演化結果，這讓他們有些音是發不出來的（例如：/i/、/a/、/u/）。而這個演化其實是對人類高風險的，因為這會干擾消化道和呼吸道分離。但他卻出現在三個月大時，以適者生存的角度來看，語言對於人類的生存是非常重要的。\n非常有趣的一點是，全世界的嬰兒都是用相近的時程來發展，顯然這些都是演化的結果。在上課中有提過，猿類對語言的學習至多是線性的結構，無法像人類一樣有階層狀/洋蔥狀的結構，也無法創造太長的句子。有些好奇有沒有研究能知道這樣的大腦發展的演化和人類發音器官構造的演化，究竟是誰先誰後？還有是否有其他生物一樣有 phoneme comprehension 的現象？\n4. 雙母語嬰兒的認知能力 在討論雙母語和單母語嬰兒的認知差異前，我們需要先定義認知能力是什麼？\nExecutive functions (EF) 是認知心理學中，對於人類一些認知能力的統稱，包含了管理工作記憶、控制衝動、能處理多項工作（能快速轉換）的能力。這些能力主要是由前額葉所控制。\n根據研究，雙母語和單母語嬰兒習得母語的所需時間是相近的。這是由於雙母語的學習會刺激認知能力的發展，而發展較好的認知能力也有助於雙母語的學習。\n嬰兒在雙母語環境下，他的大腦需要處理兩種語言，因此需要前額葉的幫助，使得嬰兒能快速在兩種語言中切換。根據 Kovács \u0026amp; Mehler 對 7 個月大的研究，當同時有兩個規則時，單母語環境的嬰兒只能學會較簡單的那種，而雙母語嬰兒能學會兩種，得到了雙母語嬰兒有較佳 EF 的結論。\n很重要的一點是，根據科學家的研究，EF 的發展最快速的時期是在 6 歲前，因此父母在 6 歲前給予嬰兒適當的刺激有助於發展他們的 EF，像是唸外語故事書就是很好的方式。而對於雙語的人，就算他們長時間只使用單一語言，但他們的前額葉仍需要去抑制另外一種語言，因此研究也指出雙語的人比單語的人得到老年癡呆的平均年齡晚 4 年。\n我很好奇的一點是，人類嬰兒學習語言的能力和其認知能力是相輔相成的，那他們最多能學習多少種語言才會達到認知能力的極限？\n5. Finite State Grammars (FSGs) Finite State Grammar 是 Chomsky 提出的概念。我們都知道，句子是由 finite 的字詞組成而成，但其組成方法是無限的。對於一個有限長度的句子，我們可以透過一種特殊的 finite state machine 生成，這種 finite state machine 運用了 transition probability (TP) 的概念，藉由 TP 來定義一種 Markov chain。\n然而，這種想法是無法實際運用在生成自然語言，他遠遠不足以表達人類的文法。由於 FSGs 只能藉由上一個狀態去決定下一個狀態，故在定義狀態時，只會是線性的，無法表達出階層的概念，也無法透過機率去生成合乎文法的句子，像是不同時態的 is/was，出現在某個名詞後面的機率會是相近的。因此，最後有了 Phrase Sturcture Grammars (PSGs)，讓句子能嵌入進句子中，有了階層狀的結構，而能表達出字詞間的關聯性，不在侷限於相鄰的字間。\nFSGs 的重要性在於，他提供了一種簡單的運算方式，讓電腦能生成語句。且他將一些遞迴的想法，透過 state diagram 中的 cycle / loop 來達成。\n句子的組成無法用 Finite State Machine 來表達，但英文的構詞是否能用 Finte State Machine 來找到一些規則？\nFeedback 因為提出的問題不錯，所以得到 94 分。\n 有些好奇有沒有研究能知道這樣的大腦發展的演化和人類發⾳器官構造的演化，究竟是誰先誰後?   應該是發音器官的演化比較早，因為喉頭下降的生理現象雖然黑猩猩與猿類沒有，但是在其他的生物上有歐！例如鹿類就有，但是在其他生物上演化出此生理特徵不是了語言，而是為了增加吼叫聲的威嚇力，讓敵人感覺你的體積龐大，由於有這個另外的演化動力，所以學者的假說是發聲器官的改變早於大腦演化。\n  是否有其他⽣生物一樣有 phoneme comprehension 的現象?   其他的生物也會有phoneme comprehension的categorical perception的現象！\n ","date":"2020-12-28T10:09:29+08:00","image":"https://Luke2336.github.io/post/Other/understanding_language_final_report/larynx.png","permalink":"https://Luke2336.github.io/p/understanding_language_final_report/","title":"認識語言 期末報告"},{"content":"中午和ㄠㄨ一起吃了麥當勞，然後在系計中唸了 OS，晚餐吃了女二樓下的丼飯。他送了我一盒巧克力，當作其中一樣聖誕禮物。晚上他回去上競程，我洗完澡後，在宿舍裡寫認識語言的期末報告。\nToggl 用了這個軟體一週，發現用功的時間似乎有增加。發現自己雖然平常課不多，但假日還是相對會想強迫自己用功。這幾天身體相對疲憊，所以週間做的事略少。\n","date":"2020-12-27T10:21:14+08:00","image":"https://Luke2336.github.io/post/Diary/20201227/Chocolate.jpg","permalink":"https://Luke2336.github.io/p/20201227/","title":"2020/12/27 日記"},{"content":"早上去看醫生，中午吃了蝦仁炒飯＋牛雜湯。\n下午因為天氣不錯，就去走了走，看看白鷺鷥。\n傍晚很累，睡了一個半小時午覺後，就去全家買了晚餐，然後就準備了家教的東西。\n不小心上太快，只好現場打點 code 補時間。結束時聊了一下，感覺因為疫情的緣故，對方不想到美加地區，於是就沒有補習的需求，我快失業了 QAQ 但下學期還要當助教，所以沒有特別有想要接案的念頭，看看暑假實習的面試狀況再決定吧。\n晚上梳洗完後，吃了橘子，一點前睡著。\n","date":"2020-12-27T00:33:15+08:00","permalink":"https://Luke2336.github.io/p/20201226/","title":"2020/12/26 日記"},{"content":"下午去找導師簽交換的文件，然後就開始做家教的投影片。傍晚悅庭來找我玩，送了我瑪露連。晚餐去吃了火鍋，生理期身體不太舒服。飯後複習了德文，然後才休息。\n晚上看了怡芬老師的貼文，被感動到，加上很想念北一女，所以就哭了。\n","date":"2020-12-25T10:08:59+08:00","image":"https://Luke2336.github.io/post/Diary/20201225/%E7%91%AA%E9%9C%B2%E9%80%A3.jpg","permalink":"https://Luke2336.github.io/p/20201225/","title":"2020/12/25 日記"},{"content":"早上維持了昨夜的疲倦感，很不想做事。\n上完電路學後，複習了德文。今天電路學教 Laplace Transform。晚上跑去市區吃飯，吃了前幾天吃湯圓時看到的肉。\n109-2 課表 今天早上看了選課結果，不甚滿意，沒選上密碼學，也沒選上素描課，考慮再選一門 EDA 湊 15 學分。\n","date":"2020-12-24T14:10:19+08:00","image":"https://Luke2336.github.io/post/Diary/20201224/%E8%AA%B2%E8%A1%A8.png","permalink":"https://Luke2336.github.io/p/20201224/","title":"2020/12/24 日記"},{"content":"儀式感 身邊很多男性友人的生活都充滿儀式感，從日常生活到過節都是。例如睡前一定要打電動，或是早上一定要喝一杯咖啡。\n之前會覺得這種生活很僵硬，有時候男友就算出去約會，也不願放棄他的儀式。但現在的我，對於儀式會有種不同的想法，就是生活中的「錨點」，讓生活不至於太過散亂。\n從每週的運動習慣，吃飯睡覺的時間，或是喝杯茶，洗澡，這些固定的動作都有助於維持生活。雖然會是一種制約，但卻可以訓練成做某些事的時候，心裡能特別興奮，有助於維持健康。\n選課 這是期望的課表，但人社院那門素描只有 15 個名額，目前大約 60% 的機率，感覺不好選到。而密碼學則只有 50% 的機率抽到，不知道這種數學課為什麼那麼熱門。難解問題被正規擋修了，有點難過。資工系好像沒什麼想選的課了，希望至少選到三門主科。我不想再申請低修啊！！\n 主科：密碼學(3)、正規語言(3)、計算方法之實務應用(3) 外文：德文二(2)、進階英文(2) 通識：教育學概論(2) 其他選修：生活中的素描(3)  最後一堂羽球課 考完了期末考，很開心能被稱讚米字步跑得很好！和大家打了單打，今天比上週好，因為不像之前那樣緊張。老師說下學期的期中是高遠球，期末是切球上網連續 8 次。\nPCCA 準備了巧克力和卡片送給隊友。\n今天是個人練習，我前面還算順，但後面就體力不支，放棄後回宿舍休息。\n","date":"2020-12-23T10:18:18+08:00","permalink":"https://Luke2336.github.io/p/20201223/","title":"2020/12/23 日記"},{"content":"有點煩悶，犬齒附近又咬到發炎了。很疲倦，不想做任何事。\n晚上上完電路後，去吃了海洋牛排。\n","date":"2020-12-22T14:38:56+08:00","image":"https://Luke2336.github.io/post/Diary/20201222/card1.jpg","permalink":"https://Luke2336.github.io/p/20201222/","title":"2020/12/22 日記"},{"content":"Christmas Card 畫了聖誕卡片，想要送給隊友。\n認識語言 今天是最後一堂課，教了 Finate State Grammars，下週要交期末報告。\n冬至 吃了紅豆湯圓。\n","date":"2020-12-21T10:53:26+08:00","image":"https://Luke2336.github.io/post/Diary/20201221/card1.jpg","permalink":"https://Luke2336.github.io/p/20201221/","title":"2020/12/21 日記"},{"content":"昨晚很冷睡得不太好，期末快到了壓力有點大。下午跟男友把腳踏車擦乾淨，並幫輪胎打氣。之後主要的時間是寫電路學作業，然後吃了漢堡王當晚餐。之後寫了兩成的認識語言期末報告。\n晚上去打了羽球，覺得手很痠痛。心情不太好，於是提早收工，在麥當勞買了雞翅和玉米湯後，回宿舍休息。覺得很失望，原本預期雞翅要有兩隻，結果得到的是一隻拆成兩節。\n期末 Deadlines    Work Deadline     電路 HW12 12/22（二）   家教 12/26（六）   語言 Report 12/28（一）   OS Exam 12/30（三）   德文 Exam 12/30（三）   OS HW1 01/03（日）   OS HW2 01/03（日）   OS HW3 01/03（日）   電路 HW13 01/05（二）   交換 自傳 01/08（五）   家教 01/09（六）   電路 Exam 01/12（二）   電路 Project 01/19（二）    Week Todo List  電路 HW12 家教 投影片 認識語言 期末報告 準備 OS 期末考  一天讀兩章   準備 德文 考試  背單字 讀文法   跑簽核單：導師 \u0026amp; 系辦  Toggl 今天開始重新尋找計時工具，發現了這款可在裝置間同步的 APP。\n","date":"2020-12-20T10:43:32+08:00","permalink":"https://Luke2336.github.io/p/20201220/","title":"2020/12/20 日記"},{"content":"AtCoder Beginning Contest 186 pE 讓我卡了一下，於是就掉分了。pF 想到了一個假解，浪費了不少時間。可能是因為剛打完 CF，所以狀態不好。\nA. Brick 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 int n, w; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; w; 5 cout \u0026lt;\u0026lt; n / w \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 6 return 0; 7}  B. Blocks on Grid 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 ios_base::sync_with_stdio(0); cin.tie(0); 5 int h, w; cin \u0026gt;\u0026gt; h \u0026gt;\u0026gt; w; 6 int sum = 0, m = 105; 7 for (int i = 0; i \u0026lt; h; i++) { 8 for (int j = 0; j \u0026lt; w; j++) { 9 int x; cin \u0026gt;\u0026gt; x; 10 sum += x; 11 m = min(m, x); 12 } 13 } 14 cout \u0026lt;\u0026lt; sum - m * h * w \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 15 return 0; 16}  C. Unlucky 7 求 1 ~ n 中，有多少個數的十進位和八進位都沒有 7。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3bool check(int n, int k) { 4 while (n) { 5 if (n % k == 7) return false; 6 n /= k; 7 } return true; 8} 9int main() { 10 int n; cin \u0026gt;\u0026gt; n; 11 int cnt = 0; 12 for (int i = 1; i \u0026lt;= n; i++) 13 cnt += check(i, 10) \u0026amp; check(i, 8); 14 cout \u0026lt;\u0026lt; cnt \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 15 return 0; 16}  D. Sum of difference 求 |ai - aj|, i \u0026lt; j 的總和。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4int main() { 5 ios_base::sync_with_stdio(0); cin.tie(0); 6 int n; cin \u0026gt;\u0026gt; n; 7 vector\u0026lt;ll\u0026gt; a(n); 8 for (int i = 0; i \u0026lt; n; i++) 9 cin \u0026gt;\u0026gt; a[i]; 10 sort(a.begin(), a.end()); 11 vector\u0026lt;ll\u0026gt; sum(n + 1); 12 for (int i = n - 1; i \u0026gt;= 0; i--) 13 sum[i] = sum[i + 1] + a[i]; 14 ll ans = 0; 15 for (int i = 0; i \u0026lt; n; i++) 16 ans += sum[i + 1] - a[i] * (n - i - 1); 17 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 18 return 0; 19}  E. Throne 先用 extgcd(k, n) 求 xk + bn = gcd(k, n)，再求 xk % n = s 的最小整數解。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4typedef pair\u0026lt;ll, ll\u0026gt; pii; 5ll gcd (int a, int b) { 6 return b ? gcd(b, a % b) : a; 7} 8pii extgcd(ll a, ll b) { 9 if (!b) return {1, 0}; 10 ll k = a / b; 11 pii p = extgcd(b, a - k * b); 12 return {p.second, p.first - k * p.second}; 13} 14int main() { 15 ios_base::sync_with_stdio(0); cin.tie(0); 16 int T; cin \u0026gt;\u0026gt; T; 17 while (T--) { 18 ll n, s, k; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; s \u0026gt;\u0026gt; k; 19 ll g = gcd(n, k); 20 if (s % g) { 21 cout \u0026lt;\u0026lt; \u0026#34;-1\\n\u0026#34;; continue; 22 } 23 ll ans = -extgcd(k, n).first * s / g; 24 ans %= n / g; 25 if (ans \u0026lt;= 0) ans += n / g; 26 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 27 } 28 return 0; 29}  F. Rook on Grid 給定一個 H x W 的棋盤，以及 M 個障礙物。 (H, W, M ≤ 2e5)\n求從 (1, 1) 出發 Rook 能在兩步內到達的格子有幾個？\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4typedef pair\u0026lt;int, int\u0026gt; pii; 5#define x first 6#define y second 7#define maxn 200005 8class RangeUpdateBIT { 9 private: 10 ll d[maxn], dd[maxn]; 11 ll sum(int i) { 12 ll s = 0, ss = 0; 13 int c = i + 1; 14 while (i \u0026gt; 0) s += d[i], ss += dd[i], i -= i \u0026amp; -i; 15 return c * s - ss; 16 } 17 void add(int i, ll v) { 18 int c = i; 19 while (i \u0026lt; maxn) 20 d[i] += v, dd[i] += c * v, i += i \u0026amp; -i; 21 } 22 public: 23 RangeUpdateBIT() { 24 memset(d, 0, sizeof(d)); 25 memset(dd, 0, sizeof(dd)); 26 } 27 ll sum(int l, int r) { return sum(r) - sum(l - 1); } 28 void add(int l, int r, ll v) { 29 add(l, v), add(r + 1, -v); 30 } 31}; 32int main() { 33 ios::sync_with_stdio(0); cin.tie(0); 34 int h, w, m; cin \u0026gt;\u0026gt; h \u0026gt;\u0026gt; w \u0026gt;\u0026gt; m; 35 vector\u0026lt;pii\u0026gt; p(m); 36 vector\u0026lt;int\u0026gt; col(w + 1, h + 1), row(h + 1, w + 1); 37 for (int i = 0; i \u0026lt; m; i++) { 38 cin \u0026gt;\u0026gt; p[i].x \u0026gt;\u0026gt; p[i].y; 39 col[p[i].y] = min(col[p[i].y], p[i].x); 40 row[p[i].x] = min(row[p[i].x], p[i].y); 41 } 42 sort(p.begin(), p.end()); 43 ll ans = 0; 44 for (int i = 1; i \u0026lt;= w \u0026amp;\u0026amp; col[i] \u0026gt; 1; i++) 45 ans += col[i] - 1; 46 RangeUpdateBIT T; 47 T.add(row[1], w + 1, 1); 48 for (int j = 2, pi = 0; j \u0026lt;= h \u0026amp;\u0026amp; row[j] \u0026gt; 1; j++) { 49 while (pi \u0026lt; m \u0026amp;\u0026amp; p[pi].x \u0026lt; j) pi++; 50 int R = (pi \u0026lt; m \u0026amp;\u0026amp; p[pi].x == j) ? p[pi].y : w + 1; 51 ans += T.sum(1, R - 1); 52 while (pi \u0026lt; m \u0026amp;\u0026amp; p[pi].x ==j) { 53 if (!T.sum(p[pi].y, p[pi].y)) 54 T.add(p[pi].y, p[pi].y, 1); 55 pi++; 56 } 57 } 58 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 59 return 0; 60}  ","date":"2020-12-19T22:03:36+08:00","image":"https://Luke2336.github.io/post/Other/AtCoder_ABC186/AtCoder_ABC186_Standing.jpg","permalink":"https://Luke2336.github.io/p/atcoder_abc186/","title":"AtCoder Beginning Contest 186"},{"content":"Codeforces Round #691 (Div. 2) 因為 pC 找不到 bug，就一直亂丟，於是打得超爛。Rating 加了 43 到 1695。\npA. Red-Blue Shuffle 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4typedef pair\u0026lt;int, int\u0026gt; pii; 5#define pb push_back 6int main() { 7 ios_base::sync_with_stdio(0); cin.tie(0); 8 int T; cin \u0026gt;\u0026gt; T; 9 while (T--) { 10 int n; cin \u0026gt;\u0026gt; n; 11 string R, B; 12 cin \u0026gt;\u0026gt; R \u0026gt;\u0026gt; B; 13 int r = 0, b = 0; 14 for (int i = 0; i \u0026lt; n; i++) 15 if (R[i] \u0026gt; B[i]) r++; 16 else if (R[i] \u0026lt; B[i]) b++; 17 if (r \u0026gt; b) cout \u0026lt;\u0026lt; \u0026#34;RED\\n\u0026#34;; 18 else if (r \u0026lt; b) cout \u0026lt;\u0026lt; \u0026#34;BLUE\\n\u0026#34;; 19 else cout \u0026lt;\u0026lt; \u0026#34;EQUAL\\n\u0026#34;; 20 } 21 return 0; 22}  pB. Move and Turn 總共走 n 步，每走一步要從東西向換成左右向，問總共有幾種不同的終點？\n首先，計算兩種各自需要走幾步，假設一種為 a 和 b 步，則各自有 a 和 b 種線性組合 (x - y = a)，接下來考慮第一步為東西或南北，若 a 和 b 不同，則答案為 a * b * 2，否則為 a * b。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4typedef pair\u0026lt;int, int\u0026gt; pii; 5#define pb push_back 6int main() { 7 ios_base::sync_with_stdio(0); cin.tie(0); 8 int n; cin \u0026gt;\u0026gt; n; 9 int a = n / 2, b = n - n / 2; 10 int ans = (a + 1) * (b + 1); 11 if (a != b) ans *= 2; 12 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 13 return 0; 14}  pC. Row GCD 給定 1 ≤ n, m ≤ 2e5，給定 a1 ~ an, b1 ~ bm，回答 a1 + bj ~ an + aj 的最大公因數 GCDj。\n輾轉相除法是用相減，所以直接用數列差的 GCD 去和 a1 + bj 取 GCD 即可。\n需要小心 n = 1 的狀況，不小心踩到坑了 QAQ\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4typedef pair\u0026lt;int, int\u0026gt; pii; 5#define pb push_back 6int main() { 7 ios_base::sync_with_stdio(0); cin.tie(0); 8 int n, m; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 9 vector\u0026lt;ll\u0026gt; a(n); 10 for (int i = 0; i \u0026lt; n; i++) 11 cin \u0026gt;\u0026gt; a[i]; 12 sort(a.begin(), a.end()); 13 ll g = n \u0026gt; 1 ? a[1] - a[0] : 0; 14 for (int i = 2; i \u0026lt; n; i++) 15 g = __gcd(g, a[i] - a[0]); 16 for (int j = 0; j \u0026lt; m; j++) { 17 ll b; cin \u0026gt;\u0026gt; b; 18 cout \u0026lt;\u0026lt; __gcd(g, a[0] + b) \u0026lt;\u0026lt; \u0026#34; \u0026#34;; 19 } 20 return 0; 21}  ","date":"2020-12-19T19:07:58+08:00","image":"https://Luke2336.github.io/post/Other/CF_CONTEST_1459/CF_1459_Standing.jpg","permalink":"https://Luke2336.github.io/p/cf_contest_1459/","title":"Codeforces Round 691 Div. 2"},{"content":"半夜很餓，難得的去全家買了義大利麵當宵夜。\n北一女校慶擺攤事件  倫子老師的貼文 身為北一女校友以及一個女性，覺得台灣媒體及網民的素質極低。以陪聊天賺錢究竟是不是物化女性呢？若是反過來難道會變成物化男性嗎？顯然這完全是網友們本身對女性帶有著性別偏見。  Code  Codeforces Round #691 (Div. 2) AtCoder Beginning Contest 186  ","date":"2020-12-19T10:38:44+08:00","permalink":"https://Luke2336.github.io/p/20201219/","title":"2020/12/19 日記"},{"content":"下午上了 OS，覺得真的有點無聊，不確定下學期還要不要選他的課。晚餐吃了香菇雞湯，覺得還不錯吃。\n學生證不見？ 一回宿舍就發現找不到學生證，似乎從小包包裡掉出來了，後來有找到。順便研究了學校的掛失系統，覺得一張 $200 會很想哭，加上裡面還剩 $500 以上。雖然掛失後會把 48 Hr 後的餘額退還，但還是很緊張。發現如果 12:00 前申請補發，當天下午就能拿到，比想像中方便。沒有學生證，就不能打球了！！\n語言學演講 中午去聽語言學的演講，學到了一些 L1 / L2 English 的差異。\n Topic: Boundaries, Contrast and Differentiation in Continuous Speech Talker: Chiu-yu Tseng  CSES - 1146 - Counting Bits 問 1 ~ n 的二進制表示法中，共有多少個 1-bit？\n   十進位 $$2^2$$ $$2^1$$ $$2^0$$     0 0 0 0   1 0 0 1   2 0 1 0   3 0 1 1   4 1 0 0   5 1 0 1   6 1 1 0   7 1 1 1    觀察 0/1 交替的方式，最末位是每隔 1 個，接下來是每隔 2 個，接下來是每隔 4 個\u0026hellip;\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4int main() { 5 ll n, ans = 0; 6 cin \u0026gt;\u0026gt; n; n++; 7 for (ll i = 1; i \u0026lt;= n; i \u0026lt;\u0026lt;= 1) { 8 ll c = n / i; 9 if (c \u0026amp; 1) ans += c / 2 * i + n % i; 10 else ans += c / 2 * i; 11 } 12 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 13 return 0; 14}  CSES - 11677 - Network Breakdown 題目是問給一張圖，每次刪除一條邊後，回答所剩的聯通塊數目。\n用 Union Find Tree 維護聯通塊，離線倒著回答詢問，也就是一條一條加回去。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, int\u0026gt; pii; 4#define x first 5#define y second 6vector\u0026lt;pii\u0026gt; remove(vector\u0026lt;pii\u0026gt; e, vector\u0026lt;pii\u0026gt; q) { 7 sort(q.begin(), q.end()); 8 vector\u0026lt;pii\u0026gt; ret; 9 for (pii p : e) { 10 auto iter = lower_bound(q.begin(), q.end(), p); 11 if (iter == q.end() || *iter != p) 12 ret.push_back(p); 13 } 14 return ret; 15} 16struct UF { 17 int cnt; 18 vector\u0026lt;int\u0026gt; p, r; 19 UF(int n): cnt(n) { 20 p.resize(n + 1), r.resize(n + 1); 21 for (int i = 1; i \u0026lt;= n; i++) p[i] = i; 22 } 23 int par(int x) { 24 return p[x] = ((p[x] == x) ? x : par(p[x])); 25 } 26 void uni(int a, int b) { 27 a = par(a), b = par(b); 28 if (a == b) return; 29 if (r[a] \u0026lt; r[b]) {int t = a; a = b; b = t;} 30 p[b] = a, r[a] += (r[a] == r[b]), cnt--; 31 } 32}; 33int main() { 34 ios::sync_with_stdio(0); cin.tie(0); 35 int n, m, k; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m \u0026gt;\u0026gt; k; 36 UF T(n); 37 vector\u0026lt;pii\u0026gt; e(m), q(k); 38 for (int i = 0; i \u0026lt; m; i++) { 39 int a, b; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 40 e[i] = pii(min(a, b), max(a, b)); 41 } 42 for (int i = 0; i \u0026lt; k; i++) { 43 int a, b; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 44 q[i] = pii(min(a, b), max(a ,b)); 45 } 46 e = remove(e, q); 47 for (pii p : e) 48 T.uni(p.x, p.y); 49 vector\u0026lt;int\u0026gt; ans; 50 reverse(q.begin(), q.end()); 51 for (pii p : q) { 52 ans.push_back(T.cnt); 53 T.uni(p.x, p.y); 54 } 55 for(int i = k - 1; i \u0026gt;= 0 ; i--) 56 cout \u0026lt;\u0026lt; ans[i] \u0026lt;\u0026lt; \u0026#34; \u0026#34;; 57 return 0; 58}  氣泡梅酒 晚上朋友調了一杯梅酒加氣泡水給我喝，我才喝一杯就想睡了。應該是第二次喝酒，感覺很新奇，甜甜的很喜歡。上次喝酒是和振華學長跨年。\n","date":"2020-12-18T11:45:29+08:00","permalink":"https://Luke2336.github.io/p/20201218/","title":"2020/12/18 日記"},{"content":"晚餐吃了烤雞。\n資工系停修事件 學校某些重要的條文或會議記錄沒有被公開清楚，（畢竟學生會的貼文本身不具任何效益），產生各種模糊地帶，再加上行政人員不見得全在狀況內。\n自己期中退選時，被課務組拿他們的價值觀來跟我說教，也覺得超不合理的。\n因為分數不好看而停修確實不合理，但大學部的學分費是吃到飽，所以大家很容易選超過可負擔的量。\n電路學 CH13 Self Inductance $$L = N \\frac{d \\phi}{di}$$\nMutual Inductance $$M = M_{12} = M_{21}$$\n$$v_2 = N_2 \\frac{d \\phi_{12}}{dt} = M_{21}\\frac{di_1}{dt}, \\ M_{21} = N_2 \\frac{d \\phi_{12}}{di_1}$$\nCoupled Circuit $$v_1 = L_1 \\frac{di_1}{dt} + M \\frac{di_2}{dt}$$\n$$\\mathbb{V}_1 = j \\omega L_1 \\mathbb{I}_1 + j \\omega M \\mathbb{I}_2$$\nEnergy $$w = \\frac{1}{2} L_1 I_1^2 + \\frac{1}{2} L_2 I_2^2 \\pm M I_1 I_2$$\nCoupling Coefficient $$k = \\frac{M}{\\sqrt{L_1 L_2}} = \\frac{\\phi_{12}}{\\phi_{11} + \\phi_{12}} = \\frac{\\phi_{21}}{\\phi_{21} + \\phi_{22}} \\in [0, 1]$$\nPerfect Coupling $$k = 1 \\iff \\phi_{11} = \\phi_{22} = 0$$\nLinear Transformers $$\\begin{aligned} \\mathbb{Z}_{in} \u0026amp;= \\mathbb{Z}_P + \\mathbb{Z}_R \\\\ \u0026amp;= (R_1 + j \\omega L_1) + \\frac{\\omega^2 M^2}{R_2 + j \\omega L_2 + \\mathbb{Z}_L}\\\\ \\mathbb{Z}_P \u0026amp;:\\text{primary impedance}\\\\ \\mathbb{Z}_R \u0026amp;:\\text{reflected impedance} \\end{aligned}$$\nIdeal Transformers  $$\\begin{cases} L_1, L_2, M \\to \\infty\\\\ k = 1 \\iff M = \\sqrt{L_1 L_2} \\\\ R_1 = R_2 = 0 \\end{cases}$$ $$\\mathbb{V}_2 = \\sqrt{\\frac{L_2}{L_1}} \\mathbb{V}_1 = n \\mathbb{V}_1$$ Turn Ratio $$n = \\frac{\\mathbb{V}_2}{\\mathbb{V}_1} = \\frac{\\mathbb{I}_1}{\\mathbb{I}_2} = \\frac{N_2}{N_1} = \\sqrt{\\frac{\\mathbb{Z}_L}{\\mathbb{Z}_{in}}}$$ Make Ideal !! $$\\omega L_2 \\gg |\\mathbb{Z}_L|$$  ","date":"2020-12-17T10:16:18+08:00","image":"https://Luke2336.github.io/post/Diary/20201217/circuit_note1.jpg","permalink":"https://Luke2336.github.io/p/20201217/","title":"2020/12/17 日記"},{"content":"早上上完德文課，又翹了 OS，吃完了蛋糕，讀了電路學，然後上了羽球課，洗個澡就去練習了。中午參考這篇文章，把 Google Analytics 加到 Blog。\n羽球課 下週要考期末考，但練了一下腳步，覺得很不熟練，甚至還是不會後場的換腳，前場左邊比較跑不到點，然後回中時換另一個方向略略不順。\n之後分組打單打比賽，打了 3 場 7 分，輸了一場，其他幾場都以不錯的比數取勝，普遍看到大家發球不夠高或遠，很容易就變成平球戰。我則是後場接球能力不好，沒辦法很快跑位打回到後場。結束後和學姊單挑了一場 21 分，後面體力不支，就沒有贏了。\nCPTC 001    Problem Coder Topic     A Hyperbola Binary Search   B Kelly Greedy, Sort   C Hyperbola Enumerate, Prefix Sum   D Hyperbola 互動題, DP   E Kelly 數位 DP    今天難得全都 1AC。讀完題後也有迅速抓出水題，兩題都在正常速度開完。pD 被曲線通靈出來，他邊寫我邊聽 LinLee 講題目。我決定把 pE 拿去做，pC 則留給他們想。pE 算是定義好狀態就很好寫的題目，之前常在 AtCoder 看到類似的題目。\npB 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4int main() { 5 int n, m; 6 scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;n ,\u0026amp;m); 7 vector\u0026lt;int\u0026gt; deg(n); 8 for (int i = 0; i \u0026lt; m; i++) { 9 int a, b; 10 scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;a, \u0026amp;b); 11 deg[a-1]++, deg[b-1]++; 12 } 13 vector\u0026lt;int\u0026gt; h(n); 14 for (int i = 0; i \u0026lt; n; i++) 15 scanf(\u0026#34;%d\u0026#34;, \u0026amp;h[i]); 16 sort(h.begin(), h.end()); 17 sort(deg.begin(), deg.end()); 18 ll ans = 0; 19 for (int i = 0; i \u0026lt; n; i++) 20 ans += ll(h[i]) * ll(deg[n - i - 1]); 21 printf(\u0026#34;%lld\\n\u0026#34;, ans); 22 return 0; 23}  pE  一開始會想用 cal(R) - cal(L - 1)，但後來想到 L 會是 0，且減一其實有點小麻煩，所以就用 cal(R) - cal(L - 1)，如果 L 是 rainbow number 就再把答案加一。 另外也有把前綴是 0 的 case 獨立算出來，讓狀態定義的比官解簡潔。  1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define maxn 105 4typedef long long ll; 5const ll mod = 1000000007; 6inline int d (char c) {return c - \u0026#39;0\u0026#39;;} 7int check(string s) { 8 for (int i = 1; s[i]; i++) 9 if (s[i - 1] == s[i]) return 0; 10 return 1; 11} 12ll cal(string s) { 13 int len = s.length(); 14 ll ans = 0, tmp = 1; 15 for (int i = 1; i \u0026lt; len; i++) { //長度小於 len 的數量 16 tmp = tmp * 9 % mod; 17 ans = (ans + tmp) % mod; 18 } 19 s = \u0026#39;0\u0026#39; + s; 20 ll dp[maxn][10][2] = {}; 21 dp[0][0][1] = 1; 22 for (int i = 1; i \u0026lt;= len; i++) { //長度等於 len 的數量 23 if (s[i] != s[i - 1]) // dp[i][j][1] 代表前 i 位和 s 一樣 24 dp[i][d(s[i])][1] = dp[i - 1][d(s[i - 1])][1]; 25 for (int j = 0; j \u0026lt;= 9; j++) { 26 for (int k = 0; k \u0026lt;= 9; k++) 27 if (k != j) dp[i][j][0] += dp[i - 1][k][0]; 28 if (d(s[i - 1]) != j \u0026amp;\u0026amp; d(s[i]) \u0026gt; j) 29 dp[i][j][0] += dp[i - 1][d(s[i - 1])][1]; 30 d[i][j][0] %= mod; 31 } 32 } 33 for (int i = 0; i \u0026lt;= 9; i++) 34 ans = (ans + dp[len][i][0] + dp[len][i][1]) % mod; 35 return ans; 36} 37int main () { 38 int T; cin \u0026gt;\u0026gt; T; 39 while (T--) { 40 string L, R; cin \u0026gt;\u0026gt; L \u0026gt;\u0026gt; R; 41 cout \u0026lt;\u0026lt; (cal(R) - cal(L) + check(L) + mod) % mod \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 42 } 43 return 0; 44}  電路學 因為不太能理解這兩個式子是怎麼推導的，所以就 Line 了老師。得到的結論是，可以透過改變兩個電流的大小，把有平方的那一項變 0，之後我們就可以推出第二個式子。\n","date":"2020-12-16T10:20:38+08:00","image":"https://Luke2336.github.io/post/Diary/20201216/CPTC001_scoreboard.jpg","permalink":"https://Luke2336.github.io/p/20201216/","title":"2020/12/16 日記"},{"content":"早上寫了投 Google 2021 Summer Intern, SWE 的履歷，然後去上電路學，期中補考勉勉強強有了 60 分，中午去科一印成績單和在學證明，因為中正堂施工不開放，但也去了郵局辦事。\n下午去找了 TTYeh 老師，聊了一下近況，以及助教的工作。下午寫了交換申請資料中的研修計畫，寫了兩頁半，感覺應該差不多了，主要都在花時間看課程表。\n晚餐吃了自助餐，配了卡通「新神偷卡門」，然後去工五看了電路學考卷，和蘇于討論了期末專題。然後收了包裹，整理了衣櫃，收到了兩隻折傘。\n整理衣服時，發現衣櫃後面藏進了一隻蟑螂，之後我就覺得好焦慮。\n交換申請資料 \u0026mdash; 研修計畫＆簡歷表 ","date":"2020-12-15T08:17:24+08:00","image":"https://Luke2336.github.io/post/Diary/20201215/umbrella.jpg","permalink":"https://Luke2336.github.io/p/20201215/","title":"2020/12/15 日記"},{"content":"早上搭車回新竹，雨很大，上車後到台北就沒雨了。從馬偕下車，然後搭小紅巴回學校。之後剪了香蜂草的枯枝病葉，還除了蟲，然後洗了衣服，吃了昨晚買的巧克力拿破崙配伯爵茶。\npJ. Inverse Factorial  給定一個長度不超過 1e6 的字串，代表 n!，求 n 是多少？ 答案的範圍不超過 1e6，所以可以直接 mod 一個夠大的質數  1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define mod 1000000007 4typedef long long ll; 5int main () { 6 ios_base::sync_with_stdio(0); cin.tie(0); 7 string s; cin \u0026gt;\u0026gt; s; 8 ll sum = 0; 9 for (int i = 0; s[i]; i++) 10 sum = (sum * 10 + s[i] - \u0026#39;0\u0026#39;) % mod; 11 for (ll i = 1, frac = 1; ; i++) { 12 frac = (frac * i) % mod; 13 if (frac == sum) { 14 cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; break; 15 } 16 } 17 return 0; 18}  CSES - 1202 - Investigation  最短路徑水題 Dijkstra  1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3const int mod = 1000000007; 4typedef long long ll; 5typedef pair\u0026lt;ll, int\u0026gt; pii; 6#define pb push_back 7int main () { 8 ios_base::sync_with_stdio(0); cin.tie(0); 9 int n, m; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 10 vector\u0026lt;vector\u0026lt;pii\u0026gt;\u0026gt; G(n + 1); 11 for (int i = 0; i \u0026lt; m; i++) { 12 int a, b, c; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; c; 13 G[a].pb(pii(c, b)); 14 } 15 vector\u0026lt;bool\u0026gt; visit(n + 1); 16 vector\u0026lt;ll\u0026gt; dis(n + 1, ll(m) * ll(1e9)); 17 vector\u0026lt;ll\u0026gt; cnt(n + 1, 0), mn(n + 1), mx(n + 1); 18 dis[1] = 0, cnt[1] = 1; 19 priority_queue\u0026lt;pii, vector\u0026lt;pii\u0026gt;, greater\u0026lt;pii\u0026gt;\u0026gt; pq; 20 pq.push(pii(0, 1)); 21 while (!pq.empty()) { 22 int u = pq.top().second; pq.pop(); 23 if (visit[u]) continue; 24 visit[u] = true; 25 for (pii e : G[u]) { 26 int uu = e.second; ll w = e.first; 27 if (dis[uu] == dis[u] + w) { 28 cnt[uu] = (cnt[u] + cnt[uu]) % mod; 29 mn[uu] = min(mn[uu], mn[u] + 1); 30 mx[uu] = max(mx[uu], mx[u] + 1); 31 } else if (dis[uu] \u0026gt; dis[u] + w) { 32 dis[uu] = dis[u] + w; 33 cnt[uu] = cnt[u] % mod; 34 mn[uu] = mn[u] + 1; 35 mx[uu] = mx[u] + 1; 36 pq.push(pii(dis[uu], uu)); 37 } 38 } 39 } 40 cout \u0026lt;\u0026lt; dis[n] \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; cnt[n] \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; mn[n] \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; mx[n] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 41 return 0; 42}  認識語言 今天老師突然取消了之後所有考試，直接計算分數。除了 20% 的期末報告外，我拿了 72 分，看起來有機會拿 A+。\n今天的主題是手語，還有猩猩無法學會人類語言。\n","date":"2020-12-14T11:29:37+08:00","image":"https://Luke2336.github.io/post/Diary/20201214/%E6%97%A9%E9%A4%90.jpg","permalink":"https://Luke2336.github.io/p/20201214/","title":"2020/12/14 日記"},{"content":"回到家之後很好睡，睡了 12 小時。早上寫完電路學作業，難得的好天氣，下午就被帶去海邊看貓，晚上去礁溪吃甕仔雞和泡溫泉，在那邊遇到奇怪的蘭陽溫泉嘉年華遊行。\n 喜歡被摸屁屁的白貓\n很愛蹭的小黑白，想抱回家。\n以前在石頭屋遇到的小貓已經變媽媽了，生了三隻小花貓，一隻健康有問題被獸醫院收養。\n","date":"2020-12-14T11:16:40+08:00","image":"https://Luke2336.github.io/post/Diary/20201213/%E5%85%AB%E5%93%A51.jpg","permalink":"https://Luke2336.github.io/p/20201213/","title":"2020/12/13 日記"},{"content":"一大早就搭別人的車，很早就到北一了，發現憲兵的制服很像警察\u0026hellip;\u0026hellip;\n先去資訊組和芳蘭老師聊天，遇到了湘鈴學姊。\n之後去找怡芬老師，但她還在忙，於是我就先去找貽婷老師了，但只遇到進松，聊了一陣子，還拍了一張照。\n去國文科看展，遇到班導，覺得學妹作品很美，作文比賽的得獎作品，文字青澀，沈重而帶有著青春的憂愁。然後也看了資訊科的展，但覺得學妹的作品不吸引人。\n跟郁芬她們會合後，買了學妹的冰淇淋泡芙，然後去了學珠四樓，還有逛了歷史科的展。\n之後我就跑去找荔枝聊天了。四點多才又見到怡芬老師，還遇到薯餅。但只是匆匆忙忙的聊了幾句，她邀請我寒假再過去她家玩，有空也可以在她下班後找她吃飯。\n  人生的密碼：謙虛、感恩\nby 芳蘭老師\n ","date":"2020-12-14T11:16:34+08:00","image":"https://Luke2336.github.io/post/Diary/20201212/%E6%93%8D%E5%A0%B4.jpg","permalink":"https://Luke2336.github.io/p/20201212/","title":"2020/12/12 日記"},{"content":"和學長吃飯 吃了清夜的義大利麵，然後去蒙民偉樓四樓吃甜點喝茶，聊了很多最主要是關於感情。\n電路學補考 因為星期六想回去北一參加校慶，所以就問助教能不能提早補考。覺得寫得很順，但這兩週其實並未複習，可見第一次考試太焦慮了而已。\n宵夜 吃了熱熱的紅豆湯，覺得很幸福。\n","date":"2020-12-11T21:12:09+08:00","permalink":"https://Luke2336.github.io/p/20201211/","title":"2020/12/11 日記"},{"content":"早上先去還書，之後去處理報帳，把剩下的人的電話交給助理，之後買了麥當勞吃。接下來開始動工交換要繳交的備審資料，今天下午完成了自傳中想放的簡歷表，刪刪減減後，用不到三十行就把高中大學比較重點的成績呈現出來，比當初申請大學時的簡潔。\n之後去上電路學，今天是教電路間的磁場交互作用，提到了一些竊取晶片信用卡密碼的觀念。下課時，跟老師提了想明晚提早補考，以在週六回去參加期待多年的北一大校慶。\n下課後去圖書館領預約了三個月的電路學課本，剛開學時就推薦採購，幸好在學期末前拿到手了，以後寫電路學功課就方便了。順便借了一本中文的作業系統，希望能把之前的觀念補起來。\n晚上去買了自助餐吃，但好像肉夾太多了，被多收五塊錢。然後看了兩集「雲畫的月光」，算是搞笑劇，應該會當作配飯的韓劇。然後讀了一下電路學。\n電路學 CH11     Units      Complex Power VA $$\\mathbb{S} = P + jQ = \\frac{1}{2} \\mathbb{VI}^* = V _{rms} I _{rms} \\angle (\\theta_v - \\theta_i)$$   Apparent Power VA $$S = \\vert\\mathbb{S}\\vert = V _{rms} I _{rms}$$   Real Power Watt $$P$$   Reactive Power VAR $$Q$$   Power Factor  $$pf = \\frac{P}{S} = \\cos(\\theta_v - \\theta_i)$$     $$\\mathbb{Z} = R + jX = |\\mathbb{Z}|\\angle \\theta,\\ \\theta_v - \\theta_i = \\theta \\in [-90\\degree, 90\\degree]$$\n   Load X     Resistive Load $$X = 0$$   Inductive Load $$X \u0026gt; 0$$   Capacitive Load $$X \u0026lt; 0$$     Power Factor Correction (Parallel) $$C = \\frac{P_1 (\\tan {\\theta _2} - \\tan {\\theta _2})}{\\omega V _{rms} ^2}$$ $$L = \\frac{\\omega P_1 (\\tan {\\theta _2} - \\tan {\\theta _2})}{V _{rms} ^2}$$\n","date":"2020-12-10T20:09:00+08:00","image":"https://Luke2336.github.io/post/Diary/20201210/circiut_note_1.jpg","permalink":"https://Luke2336.github.io/p/20201210/","title":"2020/12/10 日記"},{"content":"早上心情很不好，所以上完德文後，又把 OS 睡掉了。中午買了個牛腩丼飯，然後去上了羽球課。和卡車吃了蛋捲冰淇淋，剛好店員不小心裝太大隻，所以吃得很滿足。洗完澡後就去練習，有點遲到。點了牛肉燴飯，但料很少，讓我很失望。\n羽球課 今天是教後場步伐和揮拍，然後讓我們練習兩週後要考的米字步。首先是側身架拍，然後右腳蹲，然後單腳跳腰轉隱拍，之後在揮拍，左腳往前恢復準備姿勢。羽球鞋穿的還不太習慣，畢竟跟慢跑鞋比很有重量，希望能早點習慣。\nPCCA  Kattis 題單  今天是拆成 30 分鐘為單位，交換隊友練習，今天有觀察到的有 LandyLu、CTFang 那對，還有 LinLee 找的吳柏橙，只有 CTFang 我比較喜歡。最近對隊友們的感情也有點冷淡，慢慢觀察到不少他們的缺點，而 CTFang 卻比較像 Ud 一樣沈穩，雖然他的隊友卻沒什麼表現，但我還是傾向於換隊友。\nD. Kattis - ivana  賽局 DP 把環狀的東西，直接複製兩份去建表。 Complexity: $$O(n^2)$$  1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define INF 10000 4int main() { 5 ios_base::sync_with_stdio(0); cin.tie(0); 6 int n; cin \u0026gt;\u0026gt; n; 7 int a[205], dp[205][205]; 8 for (int i = 0; i \u0026lt; n; i++) { 9 cin \u0026gt;\u0026gt; a[i]; a[n + i] = a[i]; 10 } 11 for (int i = 0; i \u0026lt; 2 * n; i++) 12 dp[i][i] = a[i] % 2; 13 for (int l = 1; l \u0026lt; n; l++) 14 for (int i = 0, j = l; j \u0026lt; 2 * n; i++, j++) { 15 dp[i][j] = (l % 2) ? INF : -INF; 16 if (l % 2) dp[i][j] = min(dp[i][j], 17 min(dp[i + 1][j] - a[i] % 2, 18 dp[i][j - 1] - a[j] % 2)); 19 else dp[i][j] = max(dp[i][j], 20 max(dp[i + 1][j] + a[i] % 2, 21 dp[i][j - 1] + a[j] % 2)); 22 } 23 int ans = 0; 24 for (int i = 0; i \u0026lt; n; i++) { 25 if (n % 2 == 0) { 26 if (-a[i] % 2 + dp[i + 1][i + n - 1] \u0026lt; 0) ans++; 27 } else { 28 if (a[i] % 2 + dp[i + 1][i + n - 1] \u0026gt; 0) ans++; 29 } 30 } 31 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 32 return 0; 33}  ","date":"2020-12-09T12:34:03+08:00","permalink":"https://Luke2336.github.io/p/20201209/","title":"2020/12/09 日記"},{"content":"起床時就覺得很冷很不舒服，心情很悶，就又睡了一下，然後去上電路學。在宿舍時，跌下了樓梯，幸好只滑了五階左右，沒有受傷，只有腰有點痠，腳踝和膝蓋略略不適。上課時因為想吐的感覺，有點坐立不安，回宿舍後一直睡到快三點。起床後又躺到快四點，什麼東西都沒吃。\n電路學今天比較早教完，老師就用十分鐘聊了一下他對台大前一陣子很多學生自殺的想法，他認為，自殺是愚蠢的，讀書讀不好，可能就只是選錯科系，就像交男女朋友一樣，很難第一次就找到對的人，轉換跑道就好了。我認為他這段話或許是正確的，但自殺不應該被想成這麼簡單的行為。\n傍晚看了中醫，因為反胃，所以一整天都沒吃飯，所以有些暈眩，眼前一片黑，針灸後噁心感消失了。之後去建中路吃了原味燉品屋，點了人參雞，覺得人參滿多的。躺了一下，然後去上電路學的演習課，今天 TA 只有講幾個大概念，所以 20:15 左右就下課了。\n半夜收到 email 通知說電路學要補考，覺得很難過，因為自己覺得重點的觀念都已經學會了，卻還是考得不好。滿挫折的，因為這是自己最近花比較多心力的科目，覺得能做好，卻還是沒有。\n","date":"2020-12-08T16:03:04+08:00","image":"https://Luke2336.github.io/post/Diary/20201208/%E5%8E%9F%E5%91%B3%E7%87%89%E5%93%81%E5%B1%8B.jpg","permalink":"https://Luke2336.github.io/p/20201208/","title":"2020/12/08 日記"},{"content":"起床後洗了澡，然後就買了個丼飯吃，邊看「夜叉姬 E8」。之後去上認識語言，今天主要是在講雙語嬰兒的認知能力，然後也講了 Executive Function (EF) 的概念，我認為用它去描述一個人是否聰明是合理的。老師也談了應該在 6 歲前，給予小孩足夠的陪伴，在前額葉發展的黃金期，陪他一起讀外語繪本。下課後，在宿舍泡了杯紅茶，然後讀電路學 Ch11 的投影片。之後寫了兩題電路學，花了 45 分鐘。\n電路學 CH11   Instantaneous Power $$\\displaystyle\\begin{aligned} i(t) \u0026amp;= I_m \\cos (\\omega t + \\theta_i)\\\\ v(t) \u0026amp;= V_m \\cos (\\omega t + \\theta_v)\\\\ p(t) \u0026amp;= \\frac{1}{2} I_m V_m (\\cos(\\theta_v - \\theta_i) + \\cos(2\\omega t + \\theta_v + \\theta_i)) \\end{aligned}$$\n  Average Power $$\\displaystyle\\begin{aligned} P \u0026amp;= \\frac{1}{T} \\int_0^T p(t) dt \\\\ \u0026amp;= \\frac{1}{2} I_m V_m \\cos(\\theta_v - \\theta_i) \\\\ \u0026amp;= \\frac{1}{2} Re[\\mathbb{VI}^*] \\end{aligned}$$\n  Maximum Average Power Transform $$\\displaystyle\\begin{aligned} \\mathbb{Z}_{Th} \u0026amp;= R_{th} + j X_{Th},\\mathbb{Z}_{L} = R_{L} + j X_{L} \\\\ \\mathbb{I} \u0026amp;= \\frac{ \\mathbb{V}_{Th} }{\\mathbb{Z}_{Th} + \\mathbb{Z}_{L}} = \\frac{ \\mathbb{V}_{Th} }{(R_{th} + R_L) + j (X_{Th} + X_L)} \\\\ P \u0026amp;= \\frac{1}{2} Re[\\mathbb{VI} ^ *] = \\frac{1}{2} Re[\\mathbb{Z}_{L} \\mathbb{II} ^ *] = \\frac{1}{2} |\\mathbb{I}| ^ 2 {R}_{L} \\\\ \u0026amp;= \\frac{ | \\mathbb{V}_{Th} | ^ 2 {R}_{L} }{({R}_{th} + {R}_{L}) ^ 2 + ({X}_{Th} + {X}_{L}) ^ 2} \\\\ \\frac{\\partial P}{\\partial X _L} \u0026amp;= 0 \\implies X _ L = - X _ {Th} \\\\ \\frac{\\partial P}{\\partial R _L} \u0026amp;= 0 \\implies R _ L = R _ {Th} \\\\ \\implies \\mathbb{Z}_{L} \u0026amp;= \\mathbb{Z}_{Th} ^ * \\implies P_{max} = \\frac{|\\mathbb{V}_{Th}|^2}{8} \\end{aligned}$$\n  Effective Value / RMS Value\n  $$\\begin{aligned} P_R \u0026amp;= \\frac{1}{T} \\int_0^T i^2 R dt = I_{eff}^2 R \\\\ I_{eff} \u0026amp;= \\sqrt{\\frac{1}{T} \\int_0^T i^2 dt} = I_{rms} \\\\ I_{rms} \u0026amp;= \\sqrt{\\frac{1}{T} \\int_0^T I_m^2 \\cos^2 (\\omega t + \\theta_i)dt} \\\\ \u0026amp;= \\sqrt{\\frac{1}{T} \\int_0^T I_m^2 (1 + \\cos (2\\omega t + 2\\theta_i))dt} \\\\ \u0026amp;= \\frac{I_m}{\\sqrt 2} \\\\ P \u0026amp;= I_{rms}^2 R = \\frac{V_{rms}^2}{R} \\end{aligned}$$\n","date":"2020-12-07T12:30:04+08:00","image":"https://Luke2336.github.io/post/Diary/20201207/circiut_note_1.jpg","permalink":"https://Luke2336.github.io/p/20201207/","title":"2020/12/07 日記"},{"content":"因為吃了過敏藥，睡到下午一點才起來，買了麥當勞吃，接下來的時間都在整理衣櫃。晚上吃了蛋包飯，然後去打球。打球前和 Hsu 聊過他女友的事，和他散步到清大操場，打完球在 7-11 遇到明憲學長，他送我走回宿舍。今天第一次穿新球鞋打球，略略有點重量。今天打球算是普通普通，沒有特別的感覺，總共只運動了一小時。回房間後收拾完衣櫃，然後喝了杯牛奶，把「大長今」看完。\n今年刷了很多小時候看的卡通和韓劇。\n 犬夜叉 結界師 同伊 善德女王 擁抱太陽的月亮 大長今  ","date":"2020-12-06T21:34:29+08:00","permalink":"https://Luke2336.github.io/p/20201206/","title":"2020/12/06 日記"},{"content":"CSES - 1197 - Cycle Finding  卡車說可以從一個假點開始做 SSSP，也就是將所有點的距離都先設成 0。 我的寫法複雜度看起來不好，感覺假解了，但想不到該怎麼改，可能會 TLE。 想了一個確定複雜度是 O(VE) 的解，將整張圖做 SCC，形成一個 DAG，從每個 in-degree 為 0 的 SCC 選一個點做 DFS。  1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4typedef pair\u0026lt;int, ll\u0026gt; pii; 5#define pb push_back 6vector\u0026lt;int\u0026gt; ans; 7vector\u0026lt;vector\u0026lt;pii\u0026gt;\u0026gt; G; 8vector\u0026lt;bool\u0026gt; visit; 9vector\u0026lt;bool\u0026gt; use; 10vector\u0026lt;ll\u0026gt; dis; 11int dfs(int v) { 12 use[v] = visit[v] = true, ans.pb(v); 13 for (pii e : G[v]) { 14 int u = e.first; 15 ll w = e.second; 16 if (dis[u] \u0026lt;= dis[v] + w) continue; 17 dis[u] = dis[v] + w; 18 if (visit[u]) return u; 19 int ret = dfs(u); 20 if (ret) return ret; 21 } 22 visit[v] = false, ans.pop_back(); 23 return 0; 24} 25int solve(int n) { 26 for (int i = 1, ret; i \u0026lt; n; i++) 27 if (!use[i] \u0026amp;\u0026amp; (ret = dfs(i))) return ret; 28 return 0; 29} 30bool SPFA (int n) { 31 queue\u0026lt;int\u0026gt; q; 32 vector\u0026lt;int\u0026gt; cnt(n); 33 vector\u0026lt;bool\u0026gt; inque(n); 34 for (int i = 1; i \u0026lt; n; i++) { 35 if (cnt[i]) continue; 36 inque[i] = 1, q.push(i); 37 while (!q.empty()) { 38 int u = q.front(); q.pop(); 39 inque[u] = false; 40 for (pii p : G[u]) { 41 int uu = p.first; ll w = p.second; 42 if (dis[uu] \u0026gt; dis[u] + w) { 43 dis[uu] = dis[u] + w, cnt[uu]++; 44 if (cnt[uu] \u0026gt; n) return false; 45 if (!inque[uu]) inque[uu] = true, q.push(uu); 46 } 47 } 48 } 49 } return true; 50} 51int main() { 52 ios_base::sync_with_stdio(0); cin.tie(0); 53 int n, m; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; n++; 54 G.resize(n), visit.resize(n), dis.resize(n), use.resize(n); 55 for (int i = 0; i \u0026lt; m; i++) { 56 int a, b; ll c; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; c; 57 if (a == b \u0026amp;\u0026amp; c \u0026lt; 0) // loop 58 cout \u0026lt;\u0026lt; \u0026#34;YES\\n\u0026#34; \u0026lt;\u0026lt; a \u0026lt;\u0026lt; \u0026#39; \u0026#39; \u0026lt;\u0026lt; b \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 59 G[a].pb(pii(b, c)); 60 } 61 if (SPFA(n)) { cout \u0026lt;\u0026lt; \u0026#34;NO\\n\u0026#34;; return 0;} 62 int v = solve(n), flag = 0; 63 cout \u0026lt;\u0026lt; \u0026#34;YES\\n\u0026#34;; 64 for (int x : ans) { 65 if (x == v) flag = 1; 66 if (flag) cout \u0026lt;\u0026lt; x \u0026lt;\u0026lt; \u0026#34; \u0026#34;; 67 } 68 cout \u0026lt;\u0026lt; v \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 69 return 0; 70}  ","date":"2020-12-05T22:36:18+08:00","permalink":"https://Luke2336.github.io/p/negative_cycle/","title":"有向圖找負環 (Negative-Cycle)"},{"content":"今天較嗜睡，睡了快九個小時。起床後買了麥當勞吃，然後做了家教的投影片 - 最近點對。之後練了打字，也開始練了德文輸入法。\n之後讀了認識語言的閱讀作業 \u0026ldquo;Flexible Learning of Multiple Speech Structures in Bilingual Infants\u0026rdquo;，一篇關於單語和雙語環境小孩的語言學習能力，發現雙語環境的小孩對不同結構的詞區別能力較好，這篇同樣用 Eye-tracking 實驗。\n研究了一下選課和交換相關的東西後，就去買自助餐吃，也泡了一杯熱可可。然後上了家教，今天選 Trie 和 Closest Pair 教，下課後她問了我關於 LCS 的東西。晚上 AC 了找負環的題目。\n","date":"2020-12-05T21:34:29+08:00","permalink":"https://Luke2336.github.io/p/20201205/","title":"2020/12/05 日記"},{"content":"餐聚 和振華學長一起吃風雲四樓，點了紅酒燉牛肉飯，之後去水木二樓的咖啡店。聊了很多事，關於他的新女友，關於我和卦長之間的事，也聊了對於競賽的想法，還有聊一些對於之後幾年的規劃。\n他滿認同我選擇轉系，大四下出去交換的選擇。他鼓勵我研究所留在清大念，但我猜有一部分的因素是考慮到感情。\n羽球鞋 晚上去光復路靠近公園一帶找羽球鞋，在 SOSA 逛的時候，有看到兩雙還算能接受的外觀，但價位在 2500 - 3200。然後去對面的宏展，有多了一些羽排鞋的選項，有看上一雙 $1450 藍白色的 ASICS，一開始我是找 26.5 cm，但只有 26 cm，最後用三倍券買了。剛好顏色會和球衣很搭，然後也相對比較中性。\n","date":"2020-12-04T22:52:12+08:00","permalink":"https://Luke2336.github.io/p/20201204/","title":"2020/12/04 日記"},{"content":"CF-GYM100274 pA  問題：2 \u0026lt;= n \u0026lt;= 1e18，2 \u0026lt;= k \u0026lt;= 1e12，求 n! 是 k 的幾次方。 作法：將 k 做質因數分解，然後各自算出次方數後，再取最小值。 時間：$$O(\\log n \\sqrt k)$$  1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4typedef pair\u0026lt;ll, int\u0026gt; pli; 5vector\u0026lt;pli\u0026gt; prime_factor (ll k) { 6 vector\u0026lt;pli\u0026gt; ret; 7 for (ll i = 2; i * i \u0026lt;= k; i++) { 8 if (k % i) continue; 9 pli p = pli(i, 0); 10 while (k % i == 0) k /= i, p.second++; 11 ret.push_back(p); 12 } 13 if (k \u0026gt; 1) ret.push_back(pli(k ,1)); 14 return ret; 15} 16int main() { 17 ios_base::sync_with_stdio(0); cin.tie(0); 18 int T; cin \u0026gt;\u0026gt; T; 19 while (T--) { 20 ll n, k, ans = -1; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; k; 21 vector\u0026lt;pli\u0026gt; fac = prime_factor(k); 22 for (pli p : fac) { 23 ll cnt = 0, m = n; 24 while (m) cnt += (m = m / p.first); 25 cnt /= p.second; 26 if (ans == -1 || cnt \u0026lt; ans) ans = cnt; 27 } cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 28 } return 0; 29}  pB  問題：給定兩個相同長度的字串，問能不能各自找到長度至少一半的子字串，使得字元和字元兩兩的絕對值差不超過 1。例如 \u0026ldquo;aabb\u0026rdquo; 和 \u0026ldquo;bbbb\u0026rdquo; 就是符合的。 作法：平移後，對重疊處做最大連續和。 時間：$$O(n^2)$$  1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 ios_base::sync_with_stdio(0); cin.tie(0); 5 int T; cin \u0026gt;\u0026gt; T; 6 while (T--) { 7 int n; cin \u0026gt;\u0026gt; n; 8 string a, b; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 9 int ans = 0; 10 for (int i = 0; i \u0026lt; n; i++) { 11 for (int j = 0, sum = 0; j + i \u0026lt; n; j++) 12 if (abs(a[j] - b[j + i]) \u0026lt;= 1) 13 ans = max(ans, ++sum); 14 else sum = 0; 15 for (int j = 0, sum = 0; j + i \u0026lt; n; j++) 16 if (abs(a[j + i] - b[j]) \u0026lt;= 1) 17 ans = max(ans, ++sum); 18 else sum = 0; 19 } 20 if (ans * 2 \u0026gt;= n) cout \u0026lt;\u0026lt; \u0026#34;POSITIVE\\n\u0026#34;; 21 else cout \u0026lt;\u0026lt; \u0026#34;NEGATIVE\\n\u0026#34;; 22 } 23 return 0; 24}  pC  Topological Sort  pD  暴力枚舉＋剪枝  pE  DP  pF  水題  pG  幾何實作  pH  DP  pI  Flow  pJ  找樹的半徑。  pK  Coloring on Plannar Graph  pL  DP  ","date":"2020-12-03T23:56:03+08:00","permalink":"https://Luke2336.github.io/p/cf_gym_100274/","title":"CF GYM 100274"},{"content":"研究大三下課表 昨晚 Hyperbola 告訴我課表已經出來了，於是早上就先研究了一下。系統看起來跟陽明有一些整合，所以時間表示的方式變得比較像清大。\n學分數 預計體育以外總共 6 ~ 7 門課，或許可以把星期一空出來。也想留點時間做研究和打 ICPC。\n   Type Unit     主科 9 - 12   外文 2 - 4   通識 2   Total 15 - 18    時間表     M T W R F     1        2  密碼學      3  正規語言      4  正規語言      n        5  難解問題 羽球  密碼學   6  難解問題 羽球  密碼學   7  難解問題  正規語言    8         資工課程 還在考慮要幾門主科，預計下限三門，上限四門，要看要帶多少學分上去研究所。\n   Course Time Unit     正規語言概論 T34R7 3   密碼學概論 T2F56 3   難解計算問題專論 T567 3   計算方法之實務應用 Mn56 3   自然語言處理（網路課程） F234 3    外文 預計一門大一英文，再加上一門進階英文或二外。 但還是會想考英檢抵掉額外的四學分，畢竟不算在畢業學分，但多修點英文課也沒什麼不好，只是要擔心延畢？\n   Course Time Unit     大一英文（二） M78, W34, R34, R56 2   德文（二） W34 2   日文(一) M12, W12, W34, R34 2   進階英文寫作 F34, M34 2    通識 應該就是選一門核心通識。歷史課幾乎都撞堂，所以可能會先選一門社會向度，四上再選一門歷史課，目前考慮時間應該會優先選 W34 的心理學 和 R34 的教育學。\n   Course Time Unit 向度     哲學概論 F34 2 人文   心理學概論 M56, W34, F34 2 社會   教育學概論 R34 2 社會   文學經典：台灣文學 M789 3 人文   音樂概論 F56 2 人文   文化人類學概論 F56 2 人文   邏輯與思維 F56 2 人文    大四上規劃 如果四下交換時的學分能算在選修裡，那多出來的學分就可以帶到研究所。\n 專題 2 學分 通識 2 學分 主科 6 學分（研究所課） 外文？  報帳 處理得差不多了，還剩五份有問題，就打算拖到一週後再處理。\n電路學  上課前坐在工五一樓打程式，遇到助教，聽起來我第二次期中應該是剛好及格。 下課時老師講了期末專題的事，12/17 要把 Topic 交出來，覺得有點難，雖然只要是跟電路相關的主題都行，但不確定哪個題目較容易做出東西。本來想研究「Dual Circuit in non-plannar graph」，但似乎已經被研究的差不多了。可能得花點時間去想新的題目，一邊閱讀一些文獻，看有沒有辦法做的更仔細，或是有新的作法。  隊練 因為學弟昨天就被劇透了，所以就沒補昨天的題目了。\n宵夜 練完題後，卡車約我們檢討，並去和味吃宵夜，我點了清粥，他們都點滷肉飯。在那邊的停車場遇到三隻有人餵的貓咪。\n","date":"2020-12-03T12:08:51+08:00","permalink":"https://Luke2336.github.io/p/20201203/","title":"2020/12/03 日記"},{"content":"OS HW1 (Python) 中午研究了一下 OS 的作業一，因為對 Python 還不熟，所以先研究了一些模組和函式的用法。之後再慢慢研究 Multithread、Multiprocessing 和 Coroutine。因為期中考表現的很糟，希望能在作業拚一下，把總成績拉到 A。\nRequests: Website Title  $ pip3 install requests $ pip3 install beautifulsoup4  1import requests 2from bs4 import BeautifulSoup 3url = input() 4r = requests.get(url) 5while r.status_code != requests.codes.ok : # 200 6\tr = requests.get(url) 7soup = BeautifulSoup(r.text, \u0026#39;html.parser\u0026#39;) 8print(soup.find(\u0026#39;title\u0026#39;).text) SHA 記得要先 encode('utf-8')\n1import hashlib # 內建的 2 3def SHA256(s): 4 sha = hashlib.sha256() 5 sha.update(s.encode(\u0026#39;utf-8\u0026#39;)) 6 return sha.hexdigest() #str update() 會拼接之前輸入的字串\n1sha1 = hashlib.sha256() 2sha1.update(b\u0026#39;python\u0026#39;) 3 4sha2 = hashlib.sha156() 5sha2.update(b\u0026#39;py\u0026#39;) 6sha2.update(b\u0026#39;thon\u0026#39;) 7 8sha1.hexdigest() == sha2.hexdigest() #true Coding  CSES - 1197 - Cycle Finding  下午研究了一下輸出負環的寫法。    隊練  Kattis 題單 這次試著隨機挑題，我跟 LinLee 採取 pair rogramming， Hyperbola 單開，看結果差多少。LinLee 打了一個鐘頭後就跟我說他想睡覺，於是後面他就有點廢，但看起來 Hyperbola 的速度明顯有優勢，但基本上兩方都不穩定，應該要試著一次 AC。 pG 發現 LinLee 不會 Union Find Tree 的分析，但其實那題應該要用 BFS。 pE 的複雜度分析花了些時間，最後用 O(EF) 估計。 pG 因為沒開 LongLongInt 或 Double，所以 Overflow。 這次題目整體難度不高，下次會選擇難度更高的題組。 晚餐只吃了雞肉飯，結束後有點冷，所以去吃了人參雞湯。      Kelly, LinLee Hyperbola Diff Type     A 4  1.5    B 27(1) 26 2.8 DP   C 5 3 1.8    D 9(1) 8(1) 2.4    E 62 53(3) 4.2 Flow   F 7 5 2.1    G Give Up 12 4.5 BFS   H (3) 6(2) 3.3    I 10 10(2) 3.4    J 20(1) Give UP 4.4 Math    ","date":"2020-12-02T10:58:23+08:00","permalink":"https://Luke2336.github.io/p/20201202/","title":"2020/12/02 日記"},{"content":"早上是電路學第二次期中考，考得有點糟糕，因為不太會算 Initial Condition。\n下午嘗試補了台北站的 pE，但 WA 了。\n今天是卡車生日。\n12 月是個值得期待，但也很多事要做的月份，有聖誕節、跨年，也有期末考、選課。\n12 月 Todo  交換申請資料 OS  複習期末考 HW1、HW2、HW3   電路學  複習期末考 小考、作業 期末專題   認識語言  期末報告 Paper Reading 小考   德文  複習文法、片語、單字   羽球  米字步   競程  補題：CodeForces、Kattis 刷題：USACO、SPOJ Rank：Codeforces、AtCoder    ","date":"2020-12-01T12:24:22+08:00","permalink":"https://Luke2336.github.io/p/20201201/","title":"2020/12/01 日記"},{"content":"今天精神較好，可能是因為前一晚吃了 B 群，雖然為了報帳早起沒睡飽，但晚上的效率還不錯。下午上完課肚子餓，就先買了麥當勞吃。傍晚洗澡前練了一下揮拍，又跳了繩。晚上原本想吃燒餅蛋，但豆漿店又沒有燒餅了。\nICPC 報帳  因為雙曲線早上要值班，所以就跟他約在系計中，想說要幫他送報帳的報表。但沒想到他收的時候都不檢查，他說是因為他擔心他檢查了，有問題他就要負責。心好累，跟他耗了一小時。我覺得他很不負責任，然後整個過程一直兇我，LinLee 聯絡不到，他也一副不在意。我真的很不開心。 去校計中找謝小姐時，看著東缺西缺的東西，覺得好丟臉，但她還是很有耐心的一份份找 bug。 回去找他時，因為我盯著計中櫃檯的螢幕，又被他兇了。我發現每次他態度愈是堅定時，我對他的話愈是無法接受，就算他是合理的，我覺得他對人的態度還是會讓他沒辦法達到目的。 他每一句感謝，聽在我耳裡，我都覺得好累，大概理解媽媽對外婆的想法了。 一直到下午上課時才整理完資料。  電路學 Midterm 2 複習    Chapter Time (min) #Problem     8 55 6   10 55 7    Ch8  Source-Free Series RLC Circuit  $$\\displaystyle i'' + \\frac{R}{L} i' + \\frac{1}{LC} i = 0$$   Source-Free Parallel RLC Circuit  $$\\displaystyle v'' + \\frac{1}{RC} v' + \\frac{1}{LC} v = 0$$   Solutions of Second Order Differential Equations  Overdamped: $$y(t) = A_1 e^{s_1 t} + A_2 e^{s_2 t}$$ Critically Damped: $$y(t) = (A_1 t + A_2) e^{-\\alpha t}$$ Underdamped: $$y(t) = e^{-\\alpha t} (A_1 \\cos \\omega_\\alpha t + A_2 \\sin \\omega_\\alpha t)$$    Ch9     $$R$$ $$L$$ $$C$$     $$Z$$ $$R$$ $$j \\omega L$$ $$\\frac{1}{j\\omega C}$$    ","date":"2020-11-30T11:59:23+08:00","image":"https://Luke2336.github.io/post/Diary/20201130/circiut_note_1.jpg","permalink":"https://Luke2336.github.io/p/20201130/","title":"2020/11/30 日記"},{"content":"早上起床洗了衣服，然後洗了澡，之後架好了部落格，然後就去讀書。\nDate 和 Jacky 吃了買一送一的冰炫風，然後一起去圖書館讀書，晚餐去研三吃漢堡王。從圖書館出來時，看到了漂亮的雲。\n部落格 從星期四努力到現在，終於搞定了。\n之後會拿這個部落格來寫日記，可能也會寫一點練題紀錄，摻雜一點點讀書帳的味道。\n 參考了 bb 的部落格，決定使用 hugo 搭配 github.io。 從 blogger 轉來使用 hugo 的原因，其實是想用 markdown，因為會寫一些數學或是程式碼。 逛了一整晚的 Hugo Theme，最後決定用中國人設計的 hugo-theme-stack，主要是喜歡他簡潔的頁面，還有 categories 的設計。 參考 這篇 來放到 github 上。  電路學 Midterm 2 複習    Chapter Time (min) #Problem     7 40 7   8 40 5    Ch7  $$\\displaystyle y(t) = y(\\infty) + (y(t_0) - y(\\infty)) e^{\\frac{-(t - t_0)}{\\tau}}$$ RC Circuit: $$\\tau = RC$$ RL Circuit: $$\\tau = \\displaystyle \\frac{L}{R}$$  羽球 今天在新館打球，不小心跑到舊館。風很大，只有穿短袖短褲，不小心著涼了。今天前場比較積極，所以被稱讚有進步。有和碩班的學長姐打了兩場，覺得還不錯，之後幾場感覺比較沒力。\n驗題 和 Hyperbola 吵了很久，他的 BIT2D 不是區間更新，而只有單點更新。\n最後想了一下，二維 BIT 的區間更新 $$O(\\log^2 N)$$ 應該做不到，需要 $$O(N\\log N)$$。\n暗自覺得他都不搞清楚原理，對自己在寫的東西沒有概念。也許就像 MT 說的，很多競程選手學東西都求快，不夠扎實。卡車對他的觀察有點道理，他有時候過分自信，不容易發現自己的錯。\n","date":"2020-11-29T02:06:51+08:00","image":"https://Luke2336.github.io/post/Diary/20201129/sky.jpg","permalink":"https://Luke2336.github.io/p/20201129/","title":"2020/11/29 日記"},{"content":"Codeforces Round #615 (Div. 3) 第一次 CF 賽中破台，排名 +178，總算 1700 了。 pD 稍微想了一下子，pE 實作上卡了很久，有些邊界問題沒考慮清楚。pF 想了一下子才發現很好寫，但忘了考慮一直鏈的情況，所以 WA 了一次。\nA. Collecting Coins 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long LL; 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 int t; cin \u0026gt;\u0026gt; t; 7 while (t--) { 8 LL a, b, c, n; 9 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; c \u0026gt;\u0026gt; n; 10 LL sum = n + a + b + c; 11 if (sum % 3) { 12 cout \u0026lt;\u0026lt; \u0026#34;NO\\n\u0026#34;; 13 continue; 14 } 15 sum /= 3; 16 if (sum \u0026lt; a || sum \u0026lt; b || sum \u0026lt; c) { 17 cout \u0026lt;\u0026lt; \u0026#34;NO\\n\u0026#34;; 18 continue; 19 } 20 cout \u0026lt;\u0026lt; \u0026#34;YES\\n\u0026#34;; 21 } 22 return 0; 23}  B. Collecting Coins 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef pair\u0026lt;int, int\u0026gt; pii; 4#define x first 5#define y second 6int main() { 7 ios::sync_with_stdio(0), cin.tie(0); 8 int t; cin \u0026gt;\u0026gt; t; 9 while (t--) { 10 int n; cin \u0026gt;\u0026gt; n; 11 vector\u0026lt;pii\u0026gt; p(n); 12 for (int i = 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; p[i].x \u0026gt;\u0026gt; p[i].y; 13 sort(p.begin(),p.end()); 14 bool success = true; 15 for (int i = 1; i \u0026lt; n; i++) 16 if(p[i].x \u0026lt; p[i-1].x || p[i].y \u0026lt; p[i-1].y) 17 success = false; 18 if(!success) { 19 cout \u0026lt;\u0026lt; \u0026#34;NO\\n\u0026#34;; 20 continue; 21 } 22 cout \u0026lt;\u0026lt; \u0026#34;YES\\n\u0026#34;; 23 int xx = 0, yy = 0; 24 for(int i = 0; i \u0026lt; n; i++) { 25 while (xx != p[i].x) cout \u0026lt;\u0026lt; \u0026#34;R\u0026#34;, xx++; 26 while (yy != p[i].y) cout \u0026lt;\u0026lt; \u0026#34;U\u0026#34;, yy++; 27 } 28 cout \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 29 } 30 return 0; 31}  C. Product of Three Numbers 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3int main() { 4 ios::sync_with_stdio(0), cin.tie(0); 5 int t; cin \u0026gt;\u0026gt; t; 6 while (t--) { 7 int n; cin \u0026gt;\u0026gt; n; 8 vector\u0026lt;int\u0026gt; ans; 9 for (int i = 2; i * i \u0026lt;= n \u0026amp;\u0026amp; ans.size() \u0026lt; 2; i++) { 10 if (n % i) continue; 11 ans.push_back(i); 12 n /= i; 13 } 14 if (ans.size() != 2 || n \u0026lt;= ans.back()) { 15 cout \u0026lt;\u0026lt; \u0026#34;NO\\n\u0026#34;; 16 continue; 17 } 18 cout \u0026lt;\u0026lt; \u0026#34;YES\\n\u0026#34;; 19 ans.push_back(n); 20 for (int i = 0; i \u0026lt; 3; i++) 21 cout \u0026lt;\u0026lt; ans[i] \u0026lt;\u0026lt; \u0026#34; \\n\u0026#34;[i==2]; 22 } 23 return 0; 24}  D. MEX maximizing 每次新增一個數字到序列裡，可對序列每個數字任意加減x的整數倍，問操作完後，序列中所缺的最小正整數最大是多少？\n一開始可以確定答案不可能超過當前 query 的次數，且答案會單調遞增。可以知道 y[i] 可以加減 x 的整數倍，故可以直接 y[i] 紀錄 mod x 出現幾次，然後將答案往後爬。複雜度 O(q)。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define MAX 800005 4int main() { 5 ios::sync_with_stdio(0), cin.tie(0); 6 int q, x; cin \u0026gt;\u0026gt; q \u0026gt;\u0026gt; x; 7 int ans = 0; 8 int cnt[MAX] = {}; 9 for (int i = 0; i \u0026lt; q; i++) { 10 int a; cin \u0026gt;\u0026gt; a; 11 cnt[a % x]++; 12 while (cnt[ans % x]){ 13 cnt[ans % x]--; 14 ans++; 15 } 16 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 17 } 18 return 0; 19}  E. Obtain a Permutation 只需要將每個 column 單獨計算，再將所有結果相加即可。\n單一個 column，對每一格去算到達正確位置需要幾次操作，用個陣列去計算，轉 k 次能讓多少個格子到達正確位置。總複雜度 O(mn)。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define MAX 200005 4int cnt[MAX] = {}; 5int main() { 6 ios::sync_with_stdio(0), cin.tie(0); 7 int n, m; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; 8 vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; a(n, vector\u0026lt;int\u0026gt;(m)); 9 for (int i = 0; i \u0026lt; n; i++) 10 for (int j = 0; j \u0026lt; m; j++) 11 cin \u0026gt;\u0026gt; a[i][j]; 12 int sum = 0; 13 for (int j = 0; j \u0026lt; m; j++) { 14 for (int i = 0; i \u0026lt; n; i++) { 15 if (a[i][j] \u0026lt;= n * m \u0026amp;\u0026amp; (j+1) % m == a[i][j] % m) { 16 int ii = (a[i][j] - 1) / m; 17 cnt[(i + n - ii) % n]++; 18 } 19 } 20 int ans = MAX; 21 for (int i = 0; i \u0026lt; n; i++) { 22 ans = min(ans, n - cnt[i] + i); 23 cnt[i] = 0; 24 } 25 sum += ans; 26 } 27 cout \u0026lt;\u0026lt; sum \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 28 return 0; 29}  F. Three Paths on a Tree 找出相異三點，使得兩兩之間的路徑聯集起來邊數最多。\n若樹為一直鏈（竹子），則答案為兩端點，和中間任一點。其餘的情況，可以確定答案必有一點落在直徑上，且三點皆為葉子。故先做兩次 BFS 找出直徑，再做樹 DP 得到答案。複雜度 O(n)。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define maxn 200005 4vector\u0026lt;int\u0026gt; v[maxn]; 5bool visit[maxn] = {1,1}; 6typedef pair\u0026lt;int, int\u0026gt; pii; 7int ans = 0; 8int out[3]; 9pii dfs(int u, int dep, int scr) { 10 visit[u] = true; 11 int mx1 = 0, mx2 = 0, a1 = u, a2 = u; 12 for (int uu : v[u]) { 13 if(visit[uu]) continue; 14 pii d = dfs(uu, dep + 1, scr); 15 if (d.first \u0026gt;= mx1) 16 mx2 = mx1, a2 = a1, mx1 = d.first, a1 = d.second; 17 else if (d.first \u0026gt; mx2) 18 mx2 = d.first, a2 = d.second; 19 } 20 if (mx1 + mx2 + dep \u0026gt;= ans) { 21 ans = mx1 + mx2 + dep; 22 out[0] = scr, out[1] = a1, out[2] = a2; 23 } 24 return pii(mx1 + 1, a1); 25} 26int main() { 27 ios::sync_with_stdio(0), cin.tie(0); 28 int n; cin \u0026gt;\u0026gt; n; 29 for (int i = 1; i \u0026lt; n; i++) { 30 int a, b; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 31 v[a].push_back(b), v[b].push_back(a); 32 } 33 queue\u0026lt;int\u0026gt; q; 34 int a = 1; 35 q.push(1); 36 while (!q.empty()) { 37 int u = q.front(); q.pop(); 38 a = u; 39 for(int uu : v[u]) 40 if (!visit[uu]) 41 visit[uu] = true, q.push(uu); 42 } 43 int b = a; 44 memset(visit, 0, sizeof(visit)); 45 q.push(a); 46 while(!q.empty()) { 47 int u = q.front(); q.pop(); 48 b = u; 49 for (int uu : v[u]) 50 if (!visit[uu]) 51 visit[uu] = true, q.push(uu); 52 } 53 memset(visit, 0, sizeof(visit)); 54 dfs(a, 0, a); 55 memset(visit, 0, sizeof(visit)); 56 dfs(b, 0, b); 57 cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; 58 if (out[1] == out[2] || out[0] == out[2]) { 59 for (int i = 1; i \u0026lt;= n; i++) 60 if (i != out[0] \u0026amp;\u0026amp; i != out[1]){ 61 out[2] = i; 62 break; 63 } 64 } 65 for (int i = 0; i \u0026lt; 3; i++) 66 cout \u0026lt;\u0026lt; out[i] \u0026lt;\u0026lt; \u0026#34; \\n\u0026#34;[i == 2]; 67 return 0; 68}  ","date":"2020-01-24T11:26:38+08:00","image":"https://Luke2336.github.io/post/Other/CF_CONTEST_1294/Standing.png","permalink":"https://Luke2336.github.io/p/cf_contest_1294/","title":"Codeforces Round #615 (Div. 3)"},{"content":"此篇是從舊 Blog 搬過來。\nZerojudge a813 - 4. 城市觀測 題目敘述 有 N 棟房子。對於任意 AB 兩棟房子，只要 AB 中間沒有房子的高度超過 A 或 B，則 A 可看見 B。求 1 ~ N 每棟房子可看見的房子總數。\n 測資一，0 \u0026lt; N ≤ 300，0 \u0026lt; H[i] ≤ 1e5，3/17分 測資二，0 \u0026lt; N ≤ 5000，0 \u0026lt; H[i] ≤ 1e5，3/17分 測資三，0 \u0026lt; N ≤ 1e6，0 \u0026lt; H[i] ≤ 1e9，11/17分  範例測資  N = 2，H = {1,1}，ans = 1+1 = 2 N = 3，H = {1,2,3}，ans = 1+2+1 = 4 N = 5，H = {5,2,3,4,4}，ans = 4+2+3+3+2 = 14  參考解法 「A 可看見 B」和「B 可看見 A」等價，因此只要計算一半就好了，也就是可以將問題簡化成，計算每棟房子往左看的sum x 2。\n最直接的做法就是直接 O(N²) 掃過，但第三筆測資顯然需要 O(NlgN) 才有可能 AC。\n因為先寫了 TIOJ 1176 Cows 這題，所以就想到用 stack 去維護遞減性，但因為 stack 無法很計算等號成立的部分，所以 google 了一下，恍然大悟，直接用 array 模擬 stack 解決了，還可以搭配 binary search 達到 O(NlgN) 的時間複雜度。\nTIOJ 那題的複雜度是 O(N)，因為每個元素最多進出 stack 一次，超類似單調隊列！\n為什麼要維護單調性？ 假設我們是由左而右計算，每棟大樓都只能往左看，那只要某數右方有大於它的數，那它就不可能被更右方的數看到。 所以我們就是要維護一個左高右低的梯形/三角形。\n每加入一個數，檢察它左邊的數，如果比他低，就不可能被更後面的數看見，也就可以 pop 掉，之後也不需要檢查。\n而在 stack 裡的數，可以保證單調遞減，也就是中間不會有更高的數，所以只要比你低，一定能被看見，於是 pop 前，將 ans++。\n檢查到一樣高的數時\u0026hellip;\u0026hellip; 麻煩的地方就在這，你不知道在他之前有幾個數和他一樣，但一個一個 pop 再 push 進去實在很浪費時間，例如全部都一樣高的 case，效率會變 O(N²)。於是改成用array來操作，雖然不用 pop 再 push，但查找時一樣是 O(N²)。\n二分搜優化 要徹底解決 O(N²)，還是需要二分搜啦！直接二分搜 stack 最後一個大於等於他的位置就可以加減出答案。\n有單調性的東西就給他二分搜下去吧～\nCode 1#include \u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3typedef long long ll; 4#define maxn 1000005 5int a[maxn], st[maxn]; 6int main() { 7 int n; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); 8 for (int i = 1; i \u0026lt;= n; i++) scanf(\u0026#34;%d\u0026#34;, \u0026amp;a[i]); 9 ll ans = 0; 10 int top = 0; 11 for (int i = 1; i \u0026lt;= n; i++) { 12 if (top) { 13 //binary_search 14 int k = 0, left = 1, right = top; 15 while (left \u0026lt;= right) { 16 int mid = (left + right) \u0026gt;\u0026gt; 1; 17 if (st[mid] \u0026gt;= a[i]) 18 k = max(mid, k), left = mid + 1; 19 else right = mid - 1; 20 } 21 ans += top - k; 22 top = k; 23 } 24 if (top) { 25 int k = 0, left = 1, right = top; 26 while (left \u0026lt;= right) { 27 int mid = (left + right) \u0026gt;\u0026gt; 1; 28 if (st[mid] \u0026gt; a[i]) 29 k = max(mid, k), left = mid + 1; 30 else right = mid - 1; 31 } 32 ans += top - k; 33 if (k) ans++; 34 } 35 st[++top] = a[i]; 36 } 37 printf(\u0026#34;%lld\\n\u0026#34;, ans * 2); 38 return 0; 39}  ","date":"2018-08-07T09:52:33+08:00","permalink":"https://Luke2336.github.io/p/zj_a813/","title":"Zerojudge a813 - 城市觀測"},{"content":"UVA 106 - Fermat vs. Pythagoras 題目敘述 輸入 N (1 ≤ N ≤ 1000000)，求X² + Y² = Z²（0 \u0026lt; X \u0026lt; Y \u0026lt; Z ≤ N）的解中\n 三數互質 gcd(X, Y, Z) = 1 的解有幾組 １ ~ Ｎ 中有幾個正整數沒被任何一組解包含  解法 原本想枚舉 Y 和 Z，但時間上會是 10¹¹ 等級，顯然不是一個好方法。\n這時，突然想到了「畢式三元數」(Pythagorean triple)，畢竟每次數學培訓上數論都會講到，前幾天翻數學競賽的書也剛好看到，不過似乎只針對「互質畢式三元數」討論而已。\n 「互質畢式三元數」性質如下：\nX, Y, Z ∈ 𝚴，X² + Y² ＝ Z² 且 gcd(X, Y, Z) = 1，則可表示為\n X = m² - n² Y = 2mn Z = m² + n²  其中 m \u0026gt; n，gcd(m, n) = 1，m, n 為一奇一偶。\n 這題的範圍不僅僅限於 gcd(X, Y, Z) = 1， 但只要將每組「畢式三元數」除以 gcd(X, Y, Z)，就都能變成「互質畢式三元數」了。換句話說，「畢式三元數」一定是由某一組「互質畢式三元數」乘ｋ倍而來。 表示為 X = k (m² - n²)，Y = 2kmn，Z = k (m² + n²)。\n 考慮 m, n 的範圍，1000000 ≥ N ≥ Z ＝ m² + n²，得 1000 ≥ √N ≥ m \u0026gt; n ≥ 1。 枚舉 m, n的時間為 10⁶ 等級，明顯能快很多。\n我的方法是跑一層 for 枚舉 m，裡面再跑一層 for 枚舉 n，if(gcd(m, n) == 1)，則跑一層 k。\n寫完後，丟到 UVA 上排名 21，時間 0.050。 （第一名 0.008，我超好奇怎麼辦到？） 天啊！這真的怪爆了，我到底哪裡比別人快啊？於是 google 了別人的解法。\n看到大部分的人都是對每筆輸入 N 跑一次 for m in range(1,sqrt(N))，這方法我沒想到\u0026hellip;\u0026hellip;因為我寫 DP 寫中毒了，於是動不動就想直接給他一次找完，也就是直接「建表」。\n 這題的數論難關解決後，建表的過程確實有點卡，於是就來記一下重點部分。\n大部分人是直接開個 bool 紀錄數字出現過了沒，還有開個變數紀錄有幾組互質的。\n首先，來談互質的組數 p。用 DP 的角度切入，p[i] 和 p[i-1] 有關嗎？\np[i] = p[i - 1] ＋ (z == i 的互質組數)。 所以就開個 cnt 陣列紀錄，每找到一組互質畢式三元數，cnt[Z]++。p[N]就是cnt[N]的前綴和，O(N)一次做完即可。\n接著，是算有幾個沒用過的數。1 ~ i + 1 會比 1 ~ i 多一個數能用，而 1 ~ i 用過的數 1 ~ i + 1 也同樣被用過。num[i + 1] ＝ num[i] + 1 - (有幾個數在 Z == i + 1 時才出現)。所以重點是計算有幾個數在 Z = i + 1 時第一次出現，也就是紀錄每個數搭配的 Z 的最小值，最後在掃過一遍就行了。\n因為都是由互質三元數去找其他三元數，所以不會找到重複的，所以效率佳。寫這篇時發現自己沒有應用到一奇一偶的性質，改成 n += 2 後，丟到UVA上排名 13，時間 0.040。\nCode 1#include\u0026lt;bits/stdc++.h\u0026gt;2using namespace std; 3#define MAX 1000001 4int f[MAX], num[MAX], p[MAX], ans[MAX] = {0, 1}; 5inline bool coprime(int x, int y, int z) { 6 return __gcd(__gcd(x, y), z) == 1; 7} 8int main() { 9 fill(f, f + MAX, MAX); 10 for (int m = 2; m \u0026lt; 1000; m++) 11 for (int n = (m \u0026amp; 1) + 1; n \u0026lt; m; n += 2) { 12 if (__gcd(m, n) != 1) continue; 13 int x = m * m - n * n, y = 2 * m * n, z = m * m + n * n; 14 if (z \u0026gt;= MAX) break; 15 if (coprime(x, y, z)) { 16 p[z]++; 17 for(int k = MAX / z; k \u0026gt;= 1; k--) { 18 int xx = x * k, yy = y * k, zz = z * k; 19 f[xx] = min(f[xx], zz); 20 f[yy] = min(f[yy], zz); 21 f[zz] = zz; 22 } 23 } 24 } 25 for(int i = 1; i \u0026lt;= MAX; i++) 26 p[i] += p[i - 1], num[f[i]]++; 27 for (int i = 2; i \u0026lt;= MAX; i++) 28 ans[i] = ans[i - 1] + 1 - num[i]; 29 int N; 30 while (scanf(\u0026#34;%d\u0026#34;, \u0026amp;N) == 1) printf(\u0026#34;%d %d\\n\u0026#34;, p[N], ans[N]); 31 return 0; 32}  ","date":"2018-07-04T10:13:53+08:00","permalink":"https://Luke2336.github.io/p/uva_106/","title":"UVA 106 - Fermat vs. Pythagoras"}]